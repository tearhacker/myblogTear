<<<<<<< HEAD
2025-06-30 09:27:16.207  INFO 15940 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 15940 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-30 09:27:16.211 DEBUG 15940 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-30 09:27:16.211  INFO 15940 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-30 09:27:16.247  INFO 15940 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-30 09:27:16.247  INFO 15940 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-30 09:27:16.789  INFO 15940 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-30 09:27:16.791  INFO 15940 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 09:27:16.818  INFO 15940 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2025-06-30 09:27:17.161  INFO 15940 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$d2f40348] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-30 09:27:17.437  INFO 15940 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-30 09:27:17.446  INFO 15940 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-30 09:27:17.446  INFO 15940 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-30 09:27:17.505  INFO 15940 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-30 09:27:17.505  INFO 15940 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1258 ms
2025-06-30 09:27:18.541  INFO 15940 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-30 09:27:18.621  INFO 15940 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-30 09:27:18.999  INFO 15940 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-30 09:27:19.051  INFO 15940 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-30 09:27:19.052  INFO 15940 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 3.158 seconds (JVM running for 3.838)
2025-06-30 09:27:21.658  INFO 15940 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-30 09:27:21.659  INFO 15940 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-30 09:27:21.664  INFO 15940 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 5 ms
2025-06-30 09:27:21.688  INFO 15940 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-30 09:27:21.700  INFO 15940 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-30 09:27:22.797 ERROR 15940 --- [http-nio-80-exec-1] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:354) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:554) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-3.4.2.jar:na]
	at com.github.pagehelper.page.PageAutoDialect.getUrl(PageAutoDialect.java:177) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.page.PageAutoDialect.getDialect(PageAutoDialect.java:203) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.page.PageAutoDialect.initDelegateDialect(PageAutoDialect.java:99) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.PageHelper.skip(PageHelper.java:66) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:93) ~[pagehelper-5.1.10.jar:na]
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.5.4.jar:3.5.4]
	at jdk.proxy2/jdk.proxy2.$Proxy136.query(Unknown Source) ~[na:na]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.4.jar:3.5.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at jdk.proxy2/jdk.proxy2.$Proxy91.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85) ~[mybatis-3.5.4.jar:3.5.4]
	at jdk.proxy3/jdk.proxy3.$Proxy99.getFirstPageBlog(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at jdk.proxy3/jdk.proxy3.$Proxy100.getFirstPageBlog(Unknown Source) ~[na:na]
	at com.star.service.Impl.BlogServiceImpl.getAllFirstPageBlog(BlogServiceImpl.java:77) ~[classes/:na]
	at com.star.controller.IndexController.index(IndexController.java:39) ~[classes/:na]
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$7acbc171.index(<generated>) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
=======
2025-06-29 09:04:34.393  INFO 13548 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 13548 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 09:04:34.399 DEBUG 13548 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 09:04:34.399  INFO 13548 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 09:04:34.434  INFO 13548 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 09:04:34.434  INFO 13548 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 09:04:34.902  INFO 13548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 09:04:34.903  INFO 13548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 09:04:34.921  INFO 13548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2025-06-29 09:04:35.210  INFO 13548 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$dce5046e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 09:04:35.473  INFO 13548 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-06-29 09:04:35.481  INFO 13548 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 09:04:35.482  INFO 13548 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 09:04:35.542  INFO 13548 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 09:04:35.542  INFO 13548 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1108 ms
2025-06-29 09:04:36.371  INFO 13548 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 09:04:36.439  INFO 13548 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 09:04:36.800  INFO 13548 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 09:04:36.856  INFO 13548 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-06-29 09:04:36.857  INFO 13548 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.717 seconds (JVM running for 3.285)
2025-06-29 09:04:55.478  INFO 13548 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 09:04:55.478  INFO 13548 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 09:04:55.489  INFO 13548 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-06-29 09:05:04.135  INFO 13548 --- [http-nio-8080-exec-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 09:05:04.247  INFO 13548 --- [http-nio-8080-exec-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 09:05:04.254 DEBUG 13548 --- [http-nio-8080-exec-9] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2025-06-29 09:05:04.276 DEBUG 13548 --- [http-nio-8080-exec-9] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: 123456(String), e10adc3949ba59abbe56e057f20f883e(String)
2025-06-29 09:05:04.300 DEBUG 13548 --- [http-nio-8080-exec-9] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2025-06-29 09:05:04.404  INFO 13548 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 09:05:04.410 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 09:05:04.411 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 09:05:04.414 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 09:05:04.414 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 09:05:04.415 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 09:05:04.416 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 09:05:04.416 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 09:05:04.416 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 09:05:04.417 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 09:05:04.418 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 09:05:04.418 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 09:05:04.419 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 09:05:04.420  INFO 13548 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 09:05:06.389 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2025-06-29 09:05:06.389 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2025-06-29 09:05:06.391 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2025-06-29 09:05:06.393 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id desc LIMIT ? 
2025-06-29 09:05:06.395 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2025-06-29 09:05:06.396 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 1
2025-06-29 09:05:06.481  INFO 13548 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 09:05:06.482 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 09:05:06.482 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 09:05:06.483 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 09:05:06.483 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 09:05:06.483 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 09:05:06.484 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 09:05:06.485 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 09:05:06.485 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 09:05:06.486 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 09:05:06.486 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 09:05:06.486 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 09:05:06.487 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 09:05:06.488  INFO 13548 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 09:05:07.824  INFO 13548 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 09:05:07.825 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 09:05:07.825 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 09:05:07.827 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 09:05:07.827 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 09:05:07.828 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 09:05:07.829 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 09:05:07.830 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 09:05:07.830 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 09:05:07.831 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 09:05:07.832 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 09:05:07.833 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 09:05:07.834 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 09:05:07.834  INFO 13548 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 09:05:21.138 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getTypeByName       : ==>  Preparing: select * from myblog.t_type where name = ? 
2025-06-29 09:05:21.138 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getTypeByName       : ==> Parameters: 泪心技术、经验分享(String)
2025-06-29 09:05:21.139 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getTypeByName       : <==      Total: 0
2025-06-29 09:05:21.141 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.saveType            : ==>  Preparing: insert into myblog.t_type values (?,?); 
2025-06-29 09:05:21.141 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.saveType            : ==> Parameters: null, 泪心技术、经验分享(String)
2025-06-29 09:05:21.144 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.saveType            : <==    Updates: 1
2025-06-29 09:05:21.166 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2025-06-29 09:05:21.167 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2025-06-29 09:05:21.168 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2025-06-29 09:05:21.168 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id desc LIMIT ? 
2025-06-29 09:05:21.169 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2025-06-29 09:05:21.169 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 09:05:21.243  INFO 13548 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 09:05:21.243 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 09:05:21.243 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 09:05:21.244 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 09:05:21.244 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 09:05:21.245 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 09:05:21.246 DEBUG 13548 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 09:05:21.247 DEBUG 13548 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 09:05:21.247 DEBUG 13548 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 09:05:21.249 DEBUG 13548 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 09:05:21.249 DEBUG 13548 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 09:05:21.249 DEBUG 13548 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 09:05:21.250 DEBUG 13548 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 09:05:21.251  INFO 13548 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 09:05:26.334 DEBUG 13548 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 09:05:26.334 DEBUG 13548 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 09:05:26.335 DEBUG 13548 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 09:05:26.336 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 09:05:26.336 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 09:05:26.339 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 1
2025-06-29 09:05:26.340 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 09:05:26.341 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 09:05:26.341 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 09:05:26.429  INFO 13548 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 09:05:26.430 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 09:05:26.430 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 09:05:26.432 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 09:05:26.432 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 09:05:26.432 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 09:05:26.433 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 09:05:26.434 DEBUG 13548 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 09:05:26.434 DEBUG 13548 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 09:05:26.436 DEBUG 13548 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 09:05:26.436 DEBUG 13548 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 09:05:26.437 DEBUG 13548 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 09:05:26.438 DEBUG 13548 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 09:05:26.439  INFO 13548 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 09:05:28.144 DEBUG 13548 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 09:05:28.144 DEBUG 13548 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 09:05:28.145 DEBUG 13548 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 09:05:28.146 DEBUG 13548 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 09:05:28.147 DEBUG 13548 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 09:05:28.148 DEBUG 13548 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 1
2025-06-29 09:05:28.149 DEBUG 13548 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 09:05:28.149 DEBUG 13548 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 09:05:28.150 DEBUG 13548 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 09:05:28.224  INFO 13548 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 09:05:28.225 DEBUG 13548 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 09:05:28.225 DEBUG 13548 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 09:05:28.226 DEBUG 13548 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 09:05:28.227 DEBUG 13548 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 09:05:28.227 DEBUG 13548 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 09:05:28.227 DEBUG 13548 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 09:05:28.228 DEBUG 13548 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 09:05:28.228 DEBUG 13548 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 09:05:28.229 DEBUG 13548 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 09:05:28.230 DEBUG 13548 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 09:05:28.230 DEBUG 13548 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 09:05:28.231 DEBUG 13548 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 09:05:28.231  INFO 13548 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 09:06:42.226 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 09:06:42.227 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 09:06:42.227 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 09:06:42.333  INFO 13548 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 09:06:42.333 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 09:06:42.333 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 09:06:42.334 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 09:06:42.334 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 09:06:42.335 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 09:06:42.335 DEBUG 13548 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 09:06:42.336 DEBUG 13548 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 09:06:42.336 DEBUG 13548 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 09:06:42.336 DEBUG 13548 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 09:06:42.337 DEBUG 13548 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 09:06:42.337 DEBUG 13548 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 09:06:42.338 DEBUG 13548 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 09:06:42.338  INFO 13548 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 09:38:39.854  INFO 13548 --- [Thread-5] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2025-06-29 09:38:39.855  INFO 13548 --- [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2025-06-29 09:38:39.857  INFO 13548 --- [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2025-06-29 09:38:39.953  INFO 13548 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 13548 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 09:38:39.953 DEBUG 13548 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 09:38:39.953  INFO 13548 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 09:38:40.082  INFO 13548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 09:38:40.082  INFO 13548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 09:38:40.087  INFO 13548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 Redis repository interfaces.
2025-06-29 09:38:40.145  INFO 13548 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$dce5046e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 09:38:40.213  INFO 13548 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-06-29 09:38:40.213  INFO 13548 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 09:38:40.213  INFO 13548 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 09:38:40.231  INFO 13548 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 09:38:40.231  INFO 13548 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 275 ms
2025-06-29 09:38:40.601  INFO 13548 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 09:38:40.635  INFO 13548 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 09:38:40.880  INFO 13548 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 09:38:40.893  INFO 13548 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-06-29 09:38:40.894  INFO 13548 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 0.96 seconds (JVM running for 2047.322)
2025-06-29 09:38:40.896  INFO 13548 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2025-06-29 10:08:43.225  INFO 13548 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 10:08:43.225  INFO 13548 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 10:08:43.231  INFO 13548 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2025-06-29 10:08:47.682  INFO 13548 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 10:08:47.685  INFO 13548 --- [http-nio-8080-exec-8] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2025-06-29 10:08:47.691  INFO 13548 --- [http-nio-8080-exec-8] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2025-06-29 10:08:47.694 DEBUG 13548 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 10:08:47.695 DEBUG 13548 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 10:08:47.699 DEBUG 13548 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 10:08:47.699 DEBUG 13548 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 10:08:47.700 DEBUG 13548 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 10:08:47.703 DEBUG 13548 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 1
2025-06-29 10:08:47.704 DEBUG 13548 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 10:08:47.704 DEBUG 13548 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 10:08:47.719 DEBUG 13548 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getNewComment       : <==      Total: 0
2025-06-29 10:08:47.720  INFO 13548 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index
2025-06-29 10:08:47.853  INFO 13548 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:08:47.854 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:08:47.854 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:08:47.855 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:08:47.856 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:08:47.856 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:08:47.857 DEBUG 13548 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:08:47.858 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:08:47.858 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:08:47.859 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:08:47.859 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:08:47.859 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:08:47.861 DEBUG 13548 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:08:47.861  INFO 13548 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:10:22.079  INFO 10308 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 10308 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 10:10:22.080 DEBUG 10308 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 10:10:22.081  INFO 10308 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 10:10:22.112  INFO 10308 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 10:10:22.112  INFO 10308 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 10:10:22.556  INFO 10308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 10:10:22.558  INFO 10308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 10:10:22.576  INFO 10308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2025-06-29 10:10:22.871  INFO 10308 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$d0ea5540] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 10:10:23.100  INFO 10308 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-06-29 10:10:23.107  INFO 10308 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 10:10:23.107  INFO 10308 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 10:10:23.159  INFO 10308 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 10:10:23.159  INFO 10308 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1047 ms
2025-06-29 10:10:23.951  INFO 10308 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 10:10:24.015  INFO 10308 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 10:10:24.368  INFO 10308 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 10:10:24.419  INFO 10308 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-06-29 10:10:24.421  INFO 10308 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.584 seconds (JVM running for 3.103)
2025-06-29 10:11:09.317  INFO 10308 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 10:11:09.317  INFO 10308 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 10:11:09.326  INFO 10308 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2025-06-29 10:11:09.351  INFO 10308 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 10:11:09.366  INFO 10308 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 10:11:09.441  INFO 10308 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 10:11:09.471 DEBUG 10308 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 10:11:09.488 DEBUG 10308 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 10:11:09.503 DEBUG 10308 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 10:11:09.506 DEBUG 10308 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 10:11:09.506 DEBUG 10308 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 10:11:09.509 DEBUG 10308 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 1
2025-06-29 10:11:09.510 DEBUG 10308 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 10:11:09.510 DEBUG 10308 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 10:11:09.511 DEBUG 10308 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 0
2025-06-29 10:11:09.513  INFO 10308 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 10:11:09.798  INFO 10308 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:11:09.798 DEBUG 10308 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:11:09.799 DEBUG 10308 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:11:09.800 DEBUG 10308 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:11:09.801 DEBUG 10308 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:11:09.801 DEBUG 10308 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:11:09.802 DEBUG 10308 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:11:09.802 DEBUG 10308 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:11:09.803 DEBUG 10308 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:11:09.804 DEBUG 10308 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:11:09.804 DEBUG 10308 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:11:09.804 DEBUG 10308 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:11:09.805 DEBUG 10308 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:11:09.805  INFO 10308 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:11:51.775 DEBUG 10308 --- [http-nio-8080-exec-2] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2025-06-29 10:11:51.777 DEBUG 10308 --- [http-nio-8080-exec-2] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: 123456(String), e10adc3949ba59abbe56e057f20f883e(String)
2025-06-29 10:11:51.780 DEBUG 10308 --- [http-nio-8080-exec-2] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2025-06-29 10:11:51.875  INFO 10308 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:11:51.876 DEBUG 10308 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:11:51.876 DEBUG 10308 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:11:51.877 DEBUG 10308 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:11:51.878 DEBUG 10308 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:11:51.878 DEBUG 10308 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:11:51.880 DEBUG 10308 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:11:51.880 DEBUG 10308 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:11:51.881 DEBUG 10308 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:11:51.882 DEBUG 10308 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:11:51.883 DEBUG 10308 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:11:51.883 DEBUG 10308 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:11:51.884 DEBUG 10308 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:11:51.884  INFO 10308 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:11:55.696 DEBUG 10308 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:11:55.697 DEBUG 10308 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:11:55.698 DEBUG 10308 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:11:55.701 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:11:55.703 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:11:55.705 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 1
2025-06-29 10:11:55.713 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:11:55.713 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:11:55.715 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:11:55.810  INFO 10308 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:11:55.810 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:11:55.811 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:11:55.811 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:11:55.812 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:11:55.812 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:11:55.812 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:11:55.813 DEBUG 10308 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:11:55.813 DEBUG 10308 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:11:55.814 DEBUG 10308 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:11:55.814 DEBUG 10308 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:11:55.814 DEBUG 10308 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:11:55.815 DEBUG 10308 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:11:55.815  INFO 10308 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:11:58.781 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2025-06-29 10:11:58.782 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2025-06-29 10:11:58.783 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2025-06-29 10:11:58.783 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id desc LIMIT ? 
2025-06-29 10:11:58.783 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2025-06-29 10:11:58.784 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:11:58.862  INFO 10308 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:11:58.863 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:11:58.864 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:11:58.865 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:11:58.866 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:11:58.866 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:11:58.867 DEBUG 10308 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:11:58.868 DEBUG 10308 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:11:58.868 DEBUG 10308 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:11:58.869 DEBUG 10308 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:11:58.870 DEBUG 10308 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:11:58.870 DEBUG 10308 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:11:58.871 DEBUG 10308 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:11:58.871  INFO 10308 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:12:01.768 DEBUG 10308 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:12:01.768 DEBUG 10308 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:12:01.769 DEBUG 10308 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:12:01.770 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:12:01.771 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:12:01.772 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 1
2025-06-29 10:12:01.773 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:12:01.773 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:12:01.773 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:12:01.858  INFO 10308 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:12:01.859 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:12:01.859 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:12:01.860 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:12:01.861 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:12:01.861 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:12:01.863 DEBUG 10308 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:12:01.864 DEBUG 10308 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:12:01.865 DEBUG 10308 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:12:01.866 DEBUG 10308 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:12:01.867 DEBUG 10308 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:12:01.867 DEBUG 10308 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:12:01.869 DEBUG 10308 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:12:01.869  INFO 10308 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:12:02.790 DEBUG 10308 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:12:02.791 DEBUG 10308 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:12:02.792 DEBUG 10308 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:12:02.883  INFO 10308 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:12:02.883 DEBUG 10308 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:12:02.883 DEBUG 10308 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:12:02.884 DEBUG 10308 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:12:02.884 DEBUG 10308 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:12:02.884 DEBUG 10308 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:12:02.885 DEBUG 10308 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:12:02.886 DEBUG 10308 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:12:02.886 DEBUG 10308 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:12:02.887 DEBUG 10308 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:12:02.888 DEBUG 10308 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:12:02.888 DEBUG 10308 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:12:02.889 DEBUG 10308 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:12:02.889  INFO 10308 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:12:23.440  INFO 7940 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 7940 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 10:12:23.443 DEBUG 7940 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 10:12:23.444  INFO 7940 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 10:12:23.491  INFO 7940 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 10:12:23.492  INFO 7940 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 10:12:24.129  INFO 7940 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 10:12:24.131  INFO 7940 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 10:12:24.153  INFO 7940 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2025-06-29 10:12:24.493  INFO 7940 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$a0dc5ecd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 10:12:24.748  INFO 7940 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-06-29 10:12:24.754  INFO 7940 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 10:12:24.754  INFO 7940 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 10:12:24.815  INFO 7940 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 10:12:24.815  INFO 7940 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1323 ms
2025-06-29 10:12:25.686  INFO 7940 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 10:12:25.756  INFO 7940 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 10:12:26.117  INFO 7940 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 10:12:26.168  INFO 7940 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-06-29 10:12:26.170  INFO 7940 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 3.052 seconds (JVM running for 3.656)
2025-06-29 10:12:28.026  INFO 7940 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 10:12:28.026  INFO 7940 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 10:12:28.033  INFO 7940 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-06-29 10:12:34.625  INFO 7940 --- [http-nio-8080-exec-10] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 10:12:34.724  INFO 7940 --- [http-nio-8080-exec-10] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 10:12:34.731 DEBUG 7940 --- [http-nio-8080-exec-10] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2025-06-29 10:12:34.756 DEBUG 7940 --- [http-nio-8080-exec-10] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: 123456(String), e10adc3949ba59abbe56e057f20f883e(String)
2025-06-29 10:12:34.778 DEBUG 7940 --- [http-nio-8080-exec-10] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2025-06-29 10:12:34.900  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:12:34.904 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:12:34.905 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:12:34.909 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:12:34.909 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:12:34.910 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:12:34.911 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:12:34.911 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:12:34.912 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:12:34.913 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:12:34.913 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:12:34.914 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:12:34.914 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:12:34.915  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:12:36.990 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:12:36.990 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:12:36.992 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:12:36.995 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:12:36.997 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:12:36.999 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 1
2025-06-29 10:12:37.010 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:12:37.010 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:12:37.011 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:12:37.108  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:12:37.108 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:12:37.108 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:12:37.110 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:12:37.110 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:12:37.111 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:12:37.112 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:12:37.112 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:12:37.112 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:12:37.114 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:12:37.115 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:12:37.115 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:12:37.116 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:12:37.116  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:12:38.605 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:12:38.605 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:12:38.606 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:12:38.693  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:12:38.694 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:12:38.694 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:12:38.696 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:12:38.697 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:12:38.697 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:12:38.699 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:12:38.699 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:12:38.699 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:12:38.700 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:12:38.701 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:12:38.701 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:12:38.702 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:12:38.702  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:21:56.251 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getType             : ==>  Preparing: select id,name from myblog.t_type where id = ? 
2025-06-29 10:21:56.253 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getType             : ==> Parameters: 44(Long)
2025-06-29 10:21:56.254 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getType             : <==      Total: 1
2025-06-29 10:21:56.256 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.saveBlog            : ==>  Preparing: insert into myblog.t_blog (id,title, content, first_picture, flag, views, comment_count, appreciation, share_statement, commentabled, published, recommend, create_time, update_time, type_id, user_id, description) values (?,?,?,?,?,?,?,?, ?,?,?,?,?, ?,?,?,?); 
2025-06-29 10:21:56.260 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.saveBlog            : ==> Parameters: null, MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
## 功能模块分解
### 用户端功能
```markdown
1. **内容浏览**
   - 文章列表/详情页（访问量统计、评论互动）
   - 多维度分类检索（分类标签/时间轴归档）
   - 全局关键词搜索
   
2. **多媒体交互**
   - zPlayer音乐播放（播放模式/歌词同步/音量控制）
   - lightbox相册画廊（照片元数据展示）
   
3. **社交功能**
   - 用户留言及回复（区分访客与博主回复）
   - 友情链接展示与跳转

(String), http://localhost:8080/images/myblog/blogInexSHow.png(String), 原创(String), 0(Integer), 0(Integer), true(Boolean), false(Boolean), true(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:21:56.255(Timestamp), 2025-06-29 10:21:56.255(Timestamp), 44(Long), 3(Long), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String)
2025-06-29 10:21:56.265 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.saveBlog            : <==    Updates: 1
2025-06-29 10:21:56.285 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:21:56.287 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:21:56.288 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:21:56.288 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:21:56.289 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:21:56.290 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:21:56.291 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:21:56.291 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:21:56.292 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:21:56.398  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:21:56.399 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:21:56.399 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:21:56.400 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:21:56.401 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:21:56.401 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:21:56.402 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:21:56.402 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:21:56.402 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:21:56.403 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:21:56.404 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:21:56.404 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:21:56.405 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:21:56.405  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:22:03.247  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 10:22:03.251 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 10:22:03.251 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 10:22:03.252 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 10:22:03.253 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getFirstPageBlog    : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count,b.create_time,b.update_time,b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.published = 1 order by b.create_time desc LIMIT ? 
2025-06-29 10:22:03.254 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getFirstPageBlog    : ==> Parameters: 10(Integer)
2025-06-29 10:22:03.254 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getFirstPageBlog    : <==      Total: 1
2025-06-29 10:22:03.255 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 10:22:03.255 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 10:22:03.261 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 10:22:03.262 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 10:22:03.262 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 10:22:03.264 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getNewComment       : <==      Total: 0
2025-06-29 10:22:03.264  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index
2025-06-29 10:22:03.475  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:22:03.475 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:22:03.476 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:22:03.477 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:22:03.477 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:22:03.478 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:22:03.478 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:22:03.479 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:22:03.479 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:22:03.480 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:22:03.481 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:22:03.481 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:22:03.481 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:22:03.481  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:22:07.730  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:22:07.732 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:22:07.732 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:22:07.735 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:22:07.772 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:22:07.773 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:22:07.775 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:22:07.775 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:22:07.776 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:22:07.776 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:22:07.777  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:22:08.087  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:22:08.087 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:22:08.088 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:22:08.088 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:22:08.089 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:22:08.089 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:22:08.090 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:22:08.090 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:22:08.090 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:22:08.091 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:22:08.092 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:22:08.092 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:22:08.093 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:22:08.093  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:22:08.137  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:22:08.140 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:22:08.140 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:22:08.142 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:22:08.142  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:23:34.206 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:23:34.206 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:23:34.207 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:23:34.209 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:23:34.209 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:23:34.210 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:23:34.295  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:23:34.296 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:23:34.297 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:23:34.298 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:23:34.298 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:23:34.299 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:23:34.300 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:23:34.301 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:23:34.301 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:23:34.302 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:23:34.302 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:23:34.303 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:23:34.303 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:23:34.303  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:25:39.776  WARN 7940 --- [http-nio-8080-exec-4] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:25:39.811 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:25:39.813 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
## 功能模块分解
### 用户端功能

1. **内容浏览**
   - 文章列表/详情页（访问量统计、评论互动）
   - 多维度分类检索（分类标签/时间轴归档）
   - 全局关键词搜索

2. **多媒体交互**
   - zPlayer音乐播放（播放模式/歌词同步/音量控制）
   - lightbox相册画廊（照片元数据展示）

3. **社交功能**
   - 用户留言及回复（区分访客与博主回复）
   - 友情链接展示与跳转
### 管理端功能
1. **内容管理**
   - 文章CRUD（Markdown编辑器集成）
   - 分类标签管理
   - 相册图片管理（EXIF信息维护）
   - 友链资源维护
2. **消息管控**
   - 评论/留言审核
   - 敏感信息过滤（需扩展）
   - 消息通知系统
3. **身份验证**
   - MD5加密登录认证
   - 管理路径隔离（/admin路径拦截）

(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:25:39.81(Timestamp), 94(Long)
2025-06-29 10:25:39.816 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:25:39.828 DEBUG 7940 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:25:39.828 DEBUG 7940 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:25:39.830 DEBUG 7940 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:25:39.831 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:25:39.831 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:25:39.832 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:25:39.833 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:25:39.833 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:25:39.834 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:25:39.918  INFO 7940 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:25:39.918 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:25:39.918 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:25:39.919 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:25:39.919 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:25:39.919 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:25:39.920 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:25:39.921 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:25:39.921 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:25:39.921 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:25:39.922 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:25:39.922 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:25:39.923 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:25:39.923  INFO 7940 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:25:44.370  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:25:44.371 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:25:44.371 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:25:44.372 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:25:44.378 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:25:44.378 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:25:44.381 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:25:44.381 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:25:44.382 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:25:44.382 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:25:44.383  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:25:44.678  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:25:44.678 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:25:44.678 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:25:44.679 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:25:44.679 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:25:44.680 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:25:44.680 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:25:44.681 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:25:44.681 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:25:44.682 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:25:44.682 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:25:44.682 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:25:44.683 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:25:44.683  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:25:44.713  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:25:44.714 DEBUG 7940 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:25:44.714 DEBUG 7940 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:25:44.715 DEBUG 7940 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:25:44.715  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:25:54.230 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:25:54.231 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:25:54.233 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:25:54.234 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:25:54.234 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:25:54.235 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:25:54.319  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:25:54.320 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:25:54.320 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:25:54.321 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:25:54.322 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:25:54.322 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:25:54.323 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:25:54.323 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:25:54.323 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:25:54.324 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:25:54.325 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:25:54.325 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:25:54.327 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:25:54.327  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:28:17.502  WARN 7940 --- [http-nio-8080-exec-2] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:28:17.513 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:28:17.514 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---

# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成
(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:28:17.512(Timestamp), 94(Long)
2025-06-29 10:28:17.518 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:28:17.529 DEBUG 7940 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:28:17.529 DEBUG 7940 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:28:17.531 DEBUG 7940 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:28:17.532 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:28:17.532 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:28:17.534 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:28:17.535 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:28:17.535 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:28:17.536 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:28:17.618  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:28:17.619 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:28:17.619 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:28:17.620 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:28:17.620 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:28:17.620 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:28:17.621 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:28:17.621 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:28:17.621 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:28:17.622 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:28:17.623 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:28:17.623 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:28:17.624 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:28:17.624  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:28:19.108  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:28:19.109 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:28:19.109 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:28:19.111 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:28:19.118 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:28:19.118 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:28:19.120 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:28:19.120 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:28:19.120 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:28:19.121 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:28:19.121  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:28:19.311  INFO 7940 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:28:19.311 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:28:19.312 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:28:19.312 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:28:19.313 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:28:19.313 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:28:19.313 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:28:19.313 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:28:19.314 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:28:19.314 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:28:19.314 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:28:19.315 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:28:19.315 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:28:19.315  INFO 7940 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:28:19.354  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:28:19.354 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:28:19.355 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:28:19.356 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:28:19.356  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:29:32.119 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:29:32.119 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:29:32.121 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:29:32.121 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:29:32.123 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:29:32.123 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:29:32.205  INFO 7940 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:29:32.206 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:29:32.206 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:29:32.207 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:29:32.208 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:29:32.208 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:29:32.209 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:29:32.209 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:29:32.209 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:29:32.210 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:29:32.210 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:29:32.211 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:29:32.211 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:29:32.211  INFO 7940 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:31:18.090  WARN 7940 --- [http-nio-8080-exec-2] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:31:18.101 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:31:18.103 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
|数据表|功能描述|
|-|-|
|`t_blog`|存储文章主体内容及元数据|
|`t_type`|文章分类标签目录|
|`t_user`|系统用户信息（含管理员）|
|`t_comment`|文章评论数据|
|`t_message`|留言板消息记录|
|`t_friend`|友情链接资源池|
|`t_picture`|相册图片及元数据|




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成
(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:31:18.1(Timestamp), 94(Long)
2025-06-29 10:31:18.106 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:31:18.115 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:31:18.115 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:31:18.116 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:31:18.117 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:31:18.118 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:31:18.120 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:31:18.120 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:31:18.120 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:31:18.121 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:31:18.234  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:31:18.235 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:31:18.235 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:31:18.236 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:31:18.236 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:31:18.236 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:31:18.237 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:31:18.237 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:31:18.237 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:31:18.237 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:31:18.238 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:31:18.238 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:31:18.238 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:31:18.238  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:31:21.477  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:31:21.478 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:31:21.478 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:31:21.480 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:31:21.486 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:31:21.487 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:31:21.489 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:31:21.490 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:31:21.490 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:31:21.491 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:31:21.491  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:31:21.761  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:31:21.762 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:31:21.762 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:31:21.764 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:31:21.764 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:31:21.764 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:31:21.765 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:31:21.766 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:31:21.766 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:31:21.766 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:31:21.767 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:31:21.767 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:31:21.767 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:31:21.768  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:31:21.805  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:31:21.805 DEBUG 7940 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:31:21.805 DEBUG 7940 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:31:21.806 DEBUG 7940 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:31:21.806  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:31:34.726 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:31:34.726 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:31:34.728 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:31:34.729 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:31:34.729 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:31:34.730 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:31:34.821  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:31:34.821 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:31:34.822 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:31:34.823 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:31:34.824 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:31:34.824 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:31:34.825 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:31:34.826 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:31:34.826 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:31:34.826 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:31:34.827 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:31:34.827 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:31:34.827 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:31:34.828  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:32:43.222  WARN 7940 --- [http-nio-8080-exec-2] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:32:43.224 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:32:43.224 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成
(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:32:43.222(Timestamp), 94(Long)
2025-06-29 10:32:43.228 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:32:43.238 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:32:43.238 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:32:43.239 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:32:43.240 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:32:43.240 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:32:43.242 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:32:43.242 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:32:43.243 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:32:43.244 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:32:43.328  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:32:43.328 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:32:43.328 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:32:43.329 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:32:43.330 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:32:43.330 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:32:43.331 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:32:43.332 DEBUG 7940 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:32:43.332 DEBUG 7940 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:32:43.333 DEBUG 7940 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:32:43.333 DEBUG 7940 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:32:43.333 DEBUG 7940 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:32:43.333 DEBUG 7940 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:32:43.333  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:32:45.364  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:32:45.365 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:32:45.365 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:32:45.367 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:32:45.370 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:32:45.370 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:32:45.373 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:32:45.373 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:32:45.373 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:32:45.375 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:32:45.375  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:32:45.659  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:32:45.659 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:32:45.659 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:32:45.660 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:32:45.661 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:32:45.661 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:32:45.662 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:32:45.663 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:32:45.664 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:32:45.665 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:32:45.666 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:32:45.667 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:32:45.667 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:32:45.668  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:32:45.706  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:32:45.706 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:32:45.707 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:32:45.708 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:32:45.708  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:32:57.851 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:32:57.851 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:32:57.852 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:32:57.853 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:32:57.854 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:32:57.854 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:32:57.940  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:32:57.940 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:32:57.940 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:32:57.941 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:32:57.941 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:32:57.942 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:32:57.942 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:32:57.943 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:32:57.943 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:32:57.944 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:32:57.945 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:32:57.945 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:32:57.946 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:32:57.947  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:33:28.776  WARN 7940 --- [http-nio-8080-exec-5] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:33:28.778 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:33:28.779 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |
---





# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成
(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:33:28.777(Timestamp), 94(Long)
2025-06-29 10:33:28.782 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:33:28.790 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:33:28.790 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:33:28.791 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:33:28.793 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:33:28.793 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:33:28.795 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:33:28.796 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:33:28.796 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:33:28.797 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:33:28.882  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:33:28.882 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:33:28.882 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:33:28.883 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:33:28.884 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:33:28.884 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:33:28.884 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:33:28.885 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:33:28.885 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:33:28.886 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:33:28.886 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:33:28.886 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:33:28.887 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:33:28.888  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:33:30.306  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:33:30.306 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:33:30.306 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:33:30.307 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:33:30.313 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:33:30.313 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:33:30.317 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:33:30.318 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:33:30.318 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:33:30.318 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:33:30.319  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:33:30.507  INFO 7940 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:33:30.507 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:33:30.507 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:33:30.508 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:33:30.508 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:33:30.508 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:33:30.508 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:33:30.509 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:33:30.509 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:33:30.509 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:33:30.510 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:33:30.510 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:33:30.510 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:33:30.510  INFO 7940 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:33:30.542  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:33:30.542 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:33:30.542 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:33:30.543 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:33:30.544  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:33:45.441 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:33:45.441 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:33:45.443 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:33:45.443 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:33:45.443 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:33:45.444 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:33:45.523  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:33:45.524 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:33:45.525 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:33:45.525 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:33:45.526 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:33:45.526 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:33:45.527 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:33:45.527 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:33:45.527 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:33:45.528 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:33:45.528 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:33:45.528 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:33:45.528 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:33:45.529  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:34:03.643  WARN 7940 --- [http-nio-8080-exec-1] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:34:03.644 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:34:03.645 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成
(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:34:03.643(Timestamp), 94(Long)
2025-06-29 10:34:03.648 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:34:03.657 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:34:03.657 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:34:03.657 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:34:03.658 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:34:03.659 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:34:03.660 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:34:03.661 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:34:03.661 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:34:03.662 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:34:03.741  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:34:03.741 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:34:03.741 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:34:03.742 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:34:03.743 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:34:03.743 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:34:03.743 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:34:03.743 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:34:03.743 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:34:03.744 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:34:03.744 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:34:03.744 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:34:03.744 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:34:03.745  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:34:20.087 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:34:20.087 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:34:20.088 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:34:20.089 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:34:20.089 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:34:20.089 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:34:20.171  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:34:20.171 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:34:20.171 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:34:20.171 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:34:20.172 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:34:20.172 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:34:20.172 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:34:20.173 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:34:20.173 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:34:20.173 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:34:20.174 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:34:20.174 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:34:20.174 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:34:20.175  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:38:02.732  WARN 7940 --- [http-nio-8080-exec-8] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:38:02.746 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:38:02.747 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### 关于MD5加密类工具的使用
显示图片 http://localhost:8080/images/myblog/md5code.png 
以下是Java工具类代码
```java
public class MD5Utils {

    /**
     * @Description: MD5加密
     * @Param: 要加密的字符串
     * @Return: 加密后的字符串
     */
    public static String code(String str){
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            md.update(str.getBytes());
            byte[]byteDigest = md.digest(); // 不可逆的哈希计算
            int i;
            StringBuffer buf = new StringBuffer("");
            for (int offset = 0; offset < byteDigest.length; offset++) {
                i = byteDigest[offset];
                if (i < 0)
                    i += 256;
                if (i < 16)
                    buf.append("0");
                buf.append(Integer.toHexString(i));
            }
            //32位加密
            return buf.toString();
            // 16位的加密
            //return buf.toString().substring(8, 24);
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
            return null;
        }

    }


    public static void main(String[] args) {
       // System.out.println(code("hello"));
        System.out.println("calculator md5 value:"+code("TEAR"));
    }

}
```

(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:38:02.745(Timestamp), 94(Long)
2025-06-29 10:38:02.750 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:38:02.758 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:38:02.759 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:38:02.760 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:38:02.760 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:38:02.761 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:38:02.762 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:38:02.763 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:38:02.763 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:38:02.763 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:38:02.850  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:38:02.851 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:38:02.851 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:38:02.852 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:38:02.852 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:38:02.852 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:38:02.853 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:38:02.853 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:38:02.853 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:38:02.854 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:38:02.854 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:38:02.854 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:38:02.854 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:38:02.855  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:38:05.669  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:38:05.670 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:38:05.670 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:38:05.671 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:38:05.674 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:38:05.674 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:38:05.676 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:38:05.677 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:38:05.677 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:38:05.678 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:38:05.678  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:38:05.932  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:38:05.933 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:38:05.933 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:38:05.933 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:38:05.934 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:38:05.934 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:38:05.934 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:38:05.935 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:38:05.935 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:38:05.935 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:38:05.935 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:38:05.935 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:38:05.936 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:38:05.936  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:38:05.988  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:38:05.989 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:38:05.989 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:38:05.990 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:38:05.990  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:38:34.642 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:38:34.642 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:38:34.643 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:38:34.644 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:38:34.644 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:38:34.644 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:38:34.726  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:38:34.727 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:38:34.727 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:38:34.727 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:38:34.728 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:38:34.728 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:38:34.728 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:38:34.729 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:38:34.729 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:38:34.730 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:38:34.731 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:38:34.731 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:38:34.732 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:38:34.732  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:41:04.417  WARN 7940 --- [http-nio-8080-exec-8] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:41:04.427 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:41:04.428 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
# MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*

### md5不可逆加密核心代码实现
```java
/**
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:41:04.427(Timestamp), 94(Long)
2025-06-29 10:41:04.431 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:41:04.441 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:41:04.441 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:41:04.442 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:41:04.442 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:41:04.443 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:41:04.444 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:41:04.445 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:41:04.445 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:41:04.445 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:41:04.529  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:41:04.530 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:41:04.530 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:41:04.530 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:41:04.531 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:41:04.531 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:41:04.532 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:41:04.533 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:41:04.533 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:41:04.534 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:41:04.534 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:41:04.534 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:41:04.535 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:41:04.535  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:41:06.607  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:41:06.608 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:41:06.608 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:41:06.610 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:41:06.613 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:41:06.613 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:41:06.616 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:41:06.616 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:41:06.616 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:41:06.616 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:41:06.616  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:41:06.871  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:41:06.871 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:41:06.871 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:41:06.872 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:41:06.872 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:41:06.872 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:41:06.873 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:41:06.873 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:41:06.873 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:41:06.874 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:41:06.874 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:41:06.874 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:41:06.874 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:41:06.875  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:41:06.916  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:41:06.917 DEBUG 7940 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:41:06.917 DEBUG 7940 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:41:06.918 DEBUG 7940 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:41:06.918  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:41:24.242 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:41:24.242 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:41:24.243 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:41:24.244 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:41:24.244 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:41:24.245 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:41:24.332  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:41:24.333 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:41:24.333 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:41:24.334 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:41:24.334 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:41:24.334 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:41:24.334 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:41:24.335 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:41:24.335 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:41:24.335 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:41:24.336 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:41:24.336 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:41:24.336 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:41:24.336  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:41:59.861  WARN 7940 --- [http-nio-8080-exec-5] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:41:59.863 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:41:59.864 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:41:59.862(Timestamp), 94(Long)
2025-06-29 10:41:59.867 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:41:59.875 DEBUG 7940 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:41:59.876 DEBUG 7940 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:41:59.876 DEBUG 7940 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:41:59.877 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:41:59.877 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:41:59.878 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:41:59.878 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:41:59.879 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:41:59.879 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:41:59.951  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:41:59.951 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:41:59.951 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:41:59.952 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:41:59.952 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:41:59.952 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:41:59.953 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:41:59.953 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:41:59.953 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:41:59.953 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:41:59.954 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:41:59.954 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:41:59.954 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:41:59.954  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:42:01.053  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:42:01.053 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:42:01.053 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:42:01.055 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:42:01.057 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:42:01.057 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:42:01.060 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:42:01.061 DEBUG 7940 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:42:01.061 DEBUG 7940 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:42:01.061 DEBUG 7940 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:42:01.061  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:42:01.331  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:42:01.331 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:42:01.332 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:42:01.333 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:42:01.333 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:42:01.333 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:42:01.334 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:42:01.335 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:42:01.335 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:42:01.335 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:42:01.336 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:42:01.336 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:42:01.336 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:42:01.336  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:42:01.367  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:42:01.368 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:42:01.368 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:42:01.369 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:42:01.369  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:44:44.453 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:44:44.455 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:44:44.456 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:44:44.456 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:44:44.456 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:44:44.456 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:44:44.544  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:44:44.544 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:44:44.544 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:44:44.545 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:44:44.545 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:44:44.545 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:44:44.546 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:44:44.546 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:44:44.547 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:44:44.548 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:44:44.549 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:44:44.549 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:44:44.549 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:44:44.549  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:50:32.154  WARN 7940 --- [http-nio-8080-exec-10] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:50:32.169 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:50:32.170 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description:
     * @Auther: ONESTAR
     * @Date: 21:25 2020/5/27
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:50:32.168(Timestamp), 94(Long)
2025-06-29 10:50:32.174 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:50:32.184 DEBUG 7940 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:50:32.184 DEBUG 7940 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:50:32.186 DEBUG 7940 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:50:32.187 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:50:32.187 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:50:32.189 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:50:32.189 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:50:32.189 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:50:32.190 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:50:32.273  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:50:32.273 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:50:32.273 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:50:32.274 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:50:32.274 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:50:32.274 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:50:32.275 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:50:32.275 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:50:32.276 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:50:32.276 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:50:32.277 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:50:32.277 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:50:32.278 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:50:32.278  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:50:37.211  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:50:37.212 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:50:37.212 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:50:37.214 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:50:37.226 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:50:37.226 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:50:37.229 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:50:37.229 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:50:37.229 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:50:37.230 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:50:37.230  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:50:37.494  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:50:37.494 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:50:37.494 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:50:37.495 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:50:37.495 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:50:37.495 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:50:37.496 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:50:37.497 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:50:37.497 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:50:37.498 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:50:37.498 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:50:37.498 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:50:37.499 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:50:37.499  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:50:37.546  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:50:37.546 DEBUG 7940 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:50:37.547 DEBUG 7940 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:50:37.547 DEBUG 7940 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:50:37.547  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:50:53.889 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:50:53.889 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:50:53.890 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:50:53.891 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:50:53.891 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:50:53.891 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:50:53.973  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:50:53.973 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:50:53.974 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:50:53.974 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:50:53.974 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:50:53.975 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:50:53.975 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:50:53.975 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:50:53.976 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:50:53.976 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:50:53.976 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:50:53.976 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:50:53.977 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:50:53.977  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:53:43.515  WARN 7940 --- [http-nio-8080-exec-10] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:53:43.527 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:53:43.529 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description:
     * @Auther: ONESTAR
     * @Date: 21:25 2020/5/27
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:53:43.527(Timestamp), 94(Long)
2025-06-29 10:53:43.532 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:53:43.542 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:53:43.542 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:53:43.543 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:53:43.544 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:53:43.545 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:53:43.546 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:53:43.547 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:53:43.547 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:53:43.548 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:53:43.632  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:53:43.632 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:53:43.633 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:53:43.633 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:53:43.633 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:53:43.634 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:53:43.634 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:53:43.634 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:53:43.634 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:53:43.635 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:53:43.635 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:53:43.636 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:53:43.636 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:53:43.636  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:53:45.433  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:53:45.433 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:53:45.434 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:53:45.435 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:53:45.441 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:53:45.441 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:53:45.443 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:53:45.444 DEBUG 7940 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:53:45.444 DEBUG 7940 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:53:45.445 DEBUG 7940 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:53:45.445  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:53:45.688  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:53:45.688 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:53:45.688 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:53:45.689 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:53:45.689 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:53:45.689 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:53:45.689 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:53:45.689 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:53:45.689 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:53:45.690 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:53:45.690 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:53:45.690 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:53:45.691 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:53:45.691  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:53:45.729  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:53:45.730 DEBUG 7940 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:53:45.730 DEBUG 7940 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:53:45.731 DEBUG 7940 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:53:45.732  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:54:05.534 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:54:05.535 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:54:05.536 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:54:05.537 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:54:05.537 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:54:05.537 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:54:05.616  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:54:05.616 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:54:05.616 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:54:05.617 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:54:05.617 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:54:05.617 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:54:05.618 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:54:05.618 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:54:05.618 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:54:05.619 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:54:05.619 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:54:05.619 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:54:05.621 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:54:05.621  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:54:23.175  WARN 7940 --- [http-nio-8080-exec-5] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:54:23.177 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:54:23.178 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: ONESTAR
     * @Date: 21:25 2020/5/27
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:54:23.176(Timestamp), 94(Long)
2025-06-29 10:54:23.181 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:54:23.189 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:54:23.189 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:54:23.190 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:54:23.191 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:54:23.191 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:54:23.193 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:54:23.193 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:54:23.194 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:54:23.195 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:54:23.273  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:54:23.273 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:54:23.274 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:54:23.275 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:54:23.275 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:54:23.275 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:54:23.276 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:54:23.276 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:54:23.276 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:54:23.277 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:54:23.277 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:54:23.277 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:54:23.278 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:54:23.278  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:54:24.937  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:54:24.938 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:54:24.938 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:54:24.940 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:54:24.944 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:54:24.944 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:54:24.946 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:54:24.947 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:54:24.947 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:54:24.948 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:54:24.948  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:54:25.183  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:54:25.184 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:54:25.185 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:54:25.186 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:54:25.186 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:54:25.186 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:54:25.187 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:54:25.187 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:54:25.187 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:54:25.188 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:54:25.188 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:54:25.188 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:54:25.188 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:54:25.188  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:54:25.228  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:54:25.229 DEBUG 7940 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:54:25.229 DEBUG 7940 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:54:25.231 DEBUG 7940 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:54:25.231  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:54:30.921 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:54:30.921 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:54:30.922 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:54:30.922 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:54:30.922 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:54:30.923 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:54:31.005  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:54:31.005 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:54:31.006 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:54:31.006 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:54:31.007 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:54:31.007 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:54:31.007 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:54:31.008 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:54:31.008 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:54:31.008 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:54:31.009 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:54:31.009 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:54:31.009 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:54:31.009  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:54:52.736  WARN 7940 --- [http-nio-8080-exec-8] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:54:52.737 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:54:52.738 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:54:52.736(Timestamp), 94(Long)
2025-06-29 10:54:52.740 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:54:52.749 DEBUG 7940 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:54:52.749 DEBUG 7940 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:54:52.750 DEBUG 7940 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:54:52.751 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:54:52.751 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:54:52.752 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:54:52.753 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:54:52.753 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:54:52.754 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:54:52.833  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:54:52.833 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:54:52.833 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:54:52.834 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:54:52.834 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:54:52.834 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:54:52.835 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:54:52.835 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:54:52.835 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:54:52.836 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:54:52.836 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:54:52.836 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:54:52.837 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:54:52.837  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:54:54.541  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:54:54.541 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:54:54.542 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:54:54.543 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:54:54.545 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:54:54.546 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:54:54.548 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:54:54.548 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:54:54.549 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:54:54.549 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:54:54.549  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:54:54.728  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:54:54.729 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:54:54.729 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:54:54.730 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:54:54.730 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:54:54.731 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:54:54.731 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:54:54.732 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:54:54.732 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:54:54.732 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:54:54.733 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:54:54.733 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:54:54.733 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:54:54.734  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:54:54.770  INFO 7940 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:54:54.770 DEBUG 7940 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:54:54.771 DEBUG 7940 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:54:54.772 DEBUG 7940 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:54:54.772  INFO 7940 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:55:17.679 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:55:17.679 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:55:17.680 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:55:17.680 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:55:17.681 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:55:17.681 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:55:17.760  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:55:17.761 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:55:17.761 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:55:17.761 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:55:17.762 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:55:17.762 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:55:17.763 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:55:17.763 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:55:17.763 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:55:17.764 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:55:17.764 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:55:17.764 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:55:17.765 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:55:17.765  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:55:31.818  WARN 7940 --- [http-nio-8080-exec-3] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:55:31.819 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:55:31.820 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:55:31.819(Timestamp), 94(Long)
2025-06-29 10:55:31.823 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:55:31.833 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:55:31.833 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:55:31.834 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:55:31.836 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:55:31.836 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:55:31.837 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:55:31.837 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:55:31.838 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:55:31.838 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:55:31.924  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:55:31.924 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:55:31.924 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:55:31.925 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:55:31.925 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:55:31.925 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:55:31.926 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:55:31.926 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:55:31.926 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:55:31.926 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:55:31.926 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:55:31.927 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:55:31.927 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:55:31.928  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:55:34.489  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 10:55:34.489 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 10:55:34.490 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 10:55:34.491 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 10:55:34.495 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 10:55:34.495 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 10:55:34.497 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 10:55:34.497 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 10:55:34.498 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 10:55:34.498 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 10:55:34.499  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : blog
2025-06-29 10:55:34.730  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:55:34.731 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:55:34.731 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:55:34.732 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:55:34.733 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:55:34.733 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:55:34.734 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:55:34.734 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:55:34.734 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:55:34.734 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:55:34.735 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:55:34.735 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:55:34.735 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:55:34.735  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:55:34.775  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 10:55:34.776 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 10:55:34.776 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 10:55:34.776 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 10:55:34.777  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 10:56:07.863 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:56:07.863 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:56:07.865 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:56:07.866 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:56:07.866 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:56:07.867 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:56:07.945  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:56:07.945 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:56:07.946 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:56:07.946 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:56:07.947 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:56:07.947 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:56:07.947 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:56:07.948 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:56:07.948 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:56:07.948 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:56:07.948 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:56:07.949 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:56:07.949 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:56:07.949  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:57:28.706  WARN 7940 --- [http-nio-8080-exec-7] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:57:28.715 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:57:28.716 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```
(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:57:28.715(Timestamp), 94(Long)
2025-06-29 10:57:28.719 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:57:28.727 DEBUG 7940 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:57:28.728 DEBUG 7940 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:57:28.730 DEBUG 7940 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:57:28.731 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:57:28.731 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:57:28.732 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:57:28.733 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:57:28.733 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:57:28.734 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:57:28.820  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:57:28.820 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:57:28.820 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:57:28.820 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:57:28.821 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:57:28.821 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:57:28.821 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:57:28.821 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:57:28.822 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:57:28.822 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:57:28.822 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:57:28.822 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:57:28.822 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:57:28.823  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:57:30.496 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:57:30.497 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 10:57:30.498 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:57:30.499 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:57:30.499 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:57:30.499 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:57:30.579  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:57:30.579 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:57:30.580 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:57:30.580 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:57:30.580 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:57:30.580 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:57:30.581 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:57:30.581 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:57:30.581 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:57:30.581 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:57:30.581 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:57:30.582 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:57:30.582 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:57:30.582  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:57:39.520  WARN 7940 --- [http-nio-8080-exec-8] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 10:57:39.520 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 10:57:39.522 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```
(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 10:57:39.52(Timestamp), 94(Long)
2025-06-29 10:57:39.524 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 10:57:39.534 DEBUG 7940 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 10:57:39.535 DEBUG 7940 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 10:57:39.535 DEBUG 7940 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 10:57:39.536 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 10:57:39.536 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 10:57:39.537 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 10:57:39.538 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:57:39.538 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:57:39.539 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:57:39.613  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:57:39.613 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:57:39.613 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:57:39.614 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:57:39.614 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:57:39.614 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:57:39.615 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:57:39.615 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:57:39.615 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:57:39.616 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:57:39.616 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:57:39.616 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:57:39.616 DEBUG 7940 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:57:39.617  INFO 7940 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 10:57:42.225 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 10:57:42.225 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 93(Long)
2025-06-29 10:57:42.226 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 10:57:42.227 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 10:57:42.227 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 10:57:42.227 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 10:57:42.315  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 10:57:42.315 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 10:57:42.315 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 10:57:42.316 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 10:57:42.316 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 10:57:42.316 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 10:57:42.317 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 10:57:42.318 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 10:57:42.318 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 10:57:42.318 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 10:57:42.318 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 10:57:42.319 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 10:57:42.319 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 10:57:42.319  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:01:12.093  WARN 7940 --- [http-nio-8080-exec-3] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 11:01:12.104 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 11:01:12.105 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), 泪心的由来，一条充满复杂色的成长道路(String), # 序言
**如果您能看完关于泪心的全文介绍,我将非常感谢,不看也没关系,这只是作者对于自己青春的自我叙述。**  **<font color="darkred">也许你很想知道，明明大型平台这么多，为什么非要自己搭建个平台发布技术交流。原因很简单，因为技术限流，风险提示。只好自己搭建全新平台咯。</font>**
先介绍一下，我是泪心，一名互联网上资深独立自由软件开发员。为什么要带着"资深"呢？这跟我大学期间胡乱碰撞有关，听说那个技术好那个技术能立马获取成就感就去学那个，最后发现自己浪费了年华结果一事无成。虽说如此，但是我大学期间的确是让我把全部编程语言入门了一次。
<br>
为什么要叫泪心呢,现在2025年则是满满的失意,对自己对外面对世界全是失意,一种说不上来的余生孤独感，仿若存在就像是个固定的NPC找不到自己的归属地。或许，“泪心”本来就是以泪洗面吧？也许,我已经失去了爱,生活已经逼得我披上了一层保护自己的无痕泡沫。

---


## 主题一：失意迷乱，身心俱疲

沉默，是保护自己；  
安静，是守护自己；  
出品，是表现自己；  
低调，是护全自己；  
隐忍，是成就自己；  
欣慰，是获取赞美。  

世间利，人间利，本是利，既无利，何以为生？我亦不愿如此，可恨人世间就是一场盛大的虚拟游戏。爱恨离愁都是感受到感受不到的无关缓存，只是碎裂了套娃世界的中枢服务器，却导致了某个对象独立内存的溢出毁灭式崩溃。

你活着，你要卑微的活着，你要去顺应你看得见的黑暗，你要拥抱你看得见的光明，然而操控者却非让你在黑暗与光明中反复融合出全新的结界。人与人之间的分离、兵变，只是我们选择了不同的人生和不同的际遇，不论结果如何都是一份完整的满分答卷。再次我默默的致谢：不用难过，我们都没错，好好活下去终有一天会发现自己存在的意义。

---

## 主题二：光芒一时，紊乱一期

2017年，我误入了身心奴虐的地域，好比把我丢入了暮气沉沉的JSP框架程序中自生自灭。  
2020年，我选择了流行光鲜无忧无虑的全新区域，开开心心好似对着Java世界第一次输出"hello,world"的新奇。  

之后的学生生涯中：  
- 从web安全研究到web项目开发  
- 转到PC端安全研究  
- PC端驱动开发  
- PC端逆向研发  
- 某次机缘下成为安卓C++底层世界开发的一粒微尘  

---
## 主题三：世界本暗，持汝初心

不知不觉间，我已经在茫茫代码领域中发展成为了商业开发的一员，不知不觉已经成为了互联网独立开发程序员，有着自己的生活区域。我只是在漫长的迁跃中，走出了某条适应于自我的一种道路。对你而言可能错了，但是选择从来不分对错，结果更是不分好坏，只是命运的棋子悄然变动了。

我的初心是美好且伟大的。或许每个大学生都怀有悬壶济世、热血江山的梦想，只是在社会摸爬滚打中渐渐认清了冰冷彻骨的现实。在我还没有接触代码的时候，为了避免"穷人自有恶人磨"的寒苦生活现状，我持续生活在别人设定的虚拟假象世界中（游戏、小说、电视）。甚至严重到了修仙成佛的地步，说来也搞笑，但这些都是曾经抓得住的切片记忆。

我有一个梦想：
- 让全世界所有人幸福安康，让所有苦难都消融，让微笑快乐常挂身边，以热爱快乐面对每一天的全新生活
- 让冷漠被热情替代，让寒冰坚雪融化，让世间苦难不再持续发生，找回儿童真挚的笑容，重拾"自由快乐平等"
- 既然所有的商业物品都是披着羊皮的狼，那就让全世界所有的商品都回归原始真实状态，让消费者安心舒适的选购
- 让竞争不再头破血流，无论任何事，都可以平常心、同等心静静解决
- 掌控江山，成为异界之神，坐拥亿万生灵，尊享华夏庙堂

理想化丰满化的虚拟生活只存在于游戏中、影视中、虚拟中。人血馒头的残酷现实扼杀了全部的梦。

我的初心是什么？只是想真诚实在、热心助人、平等对待，让风范从课本中走出来，有错吗？

是的，大错特错：
- 因为课本全是抽象化的错误式儒学奴化教育，目的就是为了掌控廉洁高质量的年轻劳动力
- 因为让真实彻底走到明面上，将会剥夺大量行业的生存之道，甚至直接击垮整个社会
- 本来，真真假假虚实不分，善恶交融有序离场，好坏不分才能正常运转。人世间的运转本就是复杂多样且不可预测的

世界本就黑暗，但请保持你的初心。


## 主题四:技术的永恒悖论(独立编程者自省)
> "别以为站在技术巅峰就能永恒——今天的屠龙者，注定是明天被AI和更年轻大脑淘汰的'古典程序员'。"--泪心

作为一名在网络安全与逆向工程领域深耕多年的技术从业者，我经历了从入门到精通的完整成长轨迹。这段旅程带给我的不仅是技术能力的提升，更引发了对技术本质的深刻思考。

### 技术的双面性

在这个日新月异的数字时代，技术就像一把双刃剑。我们引以为傲的代码成果，那些熬夜攻克的技术难关，很可能在未来成为颠覆我们自身的武器。这种宿命般的循环，正是技术从业者面临的最大悖论。

从最初转发技术论坛内容，到后来能够独立开发复杂的逆向工具，我深刻体会到技术迭代的无情。那些曾经让我兴奋不已的技术突破，如今看来不过是技术长河中的一朵浪花。

### 商业与理想的平衡

随着技术能力的提升，我不得不面对一个现实问题：如何平衡技术理想与商业需求？从完全无偿的技术分享，到建立可持续的商业模式，这个过程充满挑战与反思。

我始终坚持一个原则：即使在商业化运作中，也要保留技术的普惠性。每个项目都设有免费与付费版本的明确区分，这不仅是一种商业策略，更是对技术初心的坚守。

### 给后来者的建议

看着新一代技术爱好者涌入这个领域，我仿佛看到了当年的自己。在此，我想分享几点感悟：

1. **技术会过时，但解决问题的能力永不过时**
2. **保持学习热情比掌握特定技术更重要**
3. **在追求技术深度的同时，不要忽视技术伦理**

在这个快速变化的时代，我们或许无法永远站在技术前沿，但可以培养超越技术本身的思维方式。这才是技术从业者真正的核心竞争力。

技术之路没有终点，只有不断的自我超越与反思。愿我们都能在技术探索中，找到属于自己的平衡点。

很可惜,你们跟我走的是同一条路,只注重实战项目,只看最终结果。虽然说社会就是需要这样的人才,公司就是需要这样的员工。
但是这样写代码写久了后,你会发现自己在某个方向渐行渐远,甚至分不清什么是虚拟什么是现实,简单点说就是空荡荡的。(String), 43(Long), http://localhost:8080/images/bg2.jpg(String), 泪心,似乎是一个脆弱的标识。或许立名的开始只是因为那个“她”，后面却成为了悲剧中的那个“它”，明知道自己陷入了不归的泥炭沼泽，却再也无法跳出手敲键盘跳出代码的虚拟世界了。(String), true(Boolean), false(Boolean), false(Boolean), true(Boolean), 2025-06-29 11:01:12.103(Timestamp), 93(Long)
2025-06-29 11:01:12.108 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 11:01:12.119 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 11:01:12.119 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 11:01:12.120 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 11:01:12.121 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 11:01:12.121 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 11:01:12.122 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 11:01:12.122 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:01:12.122 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:01:12.123 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:01:12.211  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:01:12.211 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:01:12.211 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:01:12.212 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:01:12.212 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:01:12.212 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:01:12.212 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:01:12.213 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:01:12.213 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:01:12.213 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:01:12.214 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:01:12.214 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:01:12.214 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:01:12.215  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:01:13.763  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 11:01:13.764 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 11:01:13.765 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 11:01:13.766 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 11:01:13.770 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 11:01:13.770 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 11:01:13.772 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 11:01:13.772 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 11:01:13.772 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 11:01:13.773 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 11:01:13.773  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : blog
2025-06-29 11:01:14.060  INFO 7940 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:01:14.061 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:01:14.061 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:01:14.062 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:01:14.062 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:01:14.062 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:01:14.062 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:01:14.063 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:01:14.063 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:01:14.064 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:01:14.064 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:01:14.064 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:01:14.064 DEBUG 7940 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:01:14.065  INFO 7940 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:01:14.103  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 11:01:14.103 DEBUG 7940 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 11:01:14.104 DEBUG 7940 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 11:01:14.104 DEBUG 7940 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 11:01:14.105  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 11:01:18.854  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 11:01:18.856 DEBUG 7940 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 11:01:18.856 DEBUG 7940 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 11:01:18.857 DEBUG 7940 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 11:01:18.857 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 11:01:18.857 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 11:01:18.858 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 11:01:18.858 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 11:01:18.858 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 11:01:18.859 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getNewComment       : <==      Total: 0
2025-06-29 11:01:18.859  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index
2025-06-29 11:01:18.973  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:01:18.973 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:01:18.974 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:01:18.974 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:01:18.974 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:01:18.975 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:01:18.975 DEBUG 7940 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:01:18.975 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:01:18.975 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:01:18.976 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:01:18.976 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:01:18.976 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:01:18.977 DEBUG 7940 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:01:18.978  INFO 7940 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:01:21.169  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/93', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[93, {}]}
2025-06-29 11:01:21.169 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 11:01:21.169 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 93(Long)
2025-06-29 11:01:21.171 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 11:01:21.174 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 11:01:21.175 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==> Parameters: 93(Long)
2025-06-29 11:01:21.177 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 11:01:21.178 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 11:01:21.178 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 93(Long), 93(Long), 93(Long)
2025-06-29 11:01:21.178 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 11:01:21.179  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog
2025-06-29 11:01:21.505  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:01:21.505 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:01:21.506 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:01:21.506 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:01:21.506 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:01:21.507 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:01:21.507 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:01:21.508 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:01:21.508 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:01:21.509 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:01:21.509 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:01:21.509 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:01:21.509 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:01:21.509  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:01:21.547  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/93', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[93, {}]}
2025-06-29 11:01:21.548 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 11:01:21.548 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 93(Long), -1(Long)
2025-06-29 11:01:21.548 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 11:01:21.548  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 11:01:52.135 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 11:01:52.135 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 93(Long)
2025-06-29 11:01:52.137 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 11:01:52.137 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:01:52.137 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:01:52.138 DEBUG 7940 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:01:52.225  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:01:52.225 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:01:52.225 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:01:52.226 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:01:52.226 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:01:52.226 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:01:52.226 DEBUG 7940 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:01:52.227 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:01:52.227 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:01:52.227 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:01:52.227 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:01:52.228 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:01:52.228 DEBUG 7940 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:01:52.228  INFO 7940 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:04:02.649  WARN 7940 --- [http-nio-8080-exec-10] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 11:04:02.660 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 11:04:02.661 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), 泪心的由来，一条充满复杂色的成长道路(String), # 序言
**如果您能看完关于泪心的全文介绍,我将非常感谢,不看也没关系,这只是作者对于自己青春的自我叙述。**  **<font color="darkred">也许你很想知道，明明大型平台这么多，为什么非要自己搭建个平台发布技术交流。原因很简单，因为技术限流，风险提示。只好自己搭建全新平台咯。非要一句话概括,实乃天下熙攘皆为利往</font>**
先介绍一下，我是泪心，一名互联网上资深独立自由软件开发员。为什么要带着"资深"呢？这跟我大学期间胡乱碰撞有关，听说那个技术好那个技术能立马获取成就感就去学那个，最后发现自己浪费了年华结果一事无成。虽说如此，但是我大学期间的确是让我把全部编程语言入门了一次。
<br>
为什么要叫泪心呢,现在2025年则是满满的失意,对自己对外面对世界全是失意,一种说不上来的余生孤独感，仿若存在就像是个固定的NPC找不到自己的归属地。或许，“泪心”本来就是以泪洗面吧？也许,我已经失去了爱,生活已经逼得我披上了一层保护自己的无痕泡沫。

---


## 主题一：失意迷乱，身心俱疲

沉默，是保护自己；  
安静，是守护自己；  
出品，是表现自己；  
低调，是护全自己；  
隐忍，是成就自己；  
欣慰，是获取赞美。  

世间利，人间利，本是利，既无利，何以为生？我亦不愿如此，可恨人世间就是一场盛大的虚拟游戏。爱恨离愁都是感受到感受不到的无关缓存，只是碎裂了套娃世界的中枢服务器，却导致了某个对象独立内存的溢出毁灭式崩溃。

你活着，你要卑微的活着，你要去顺应你看得见的黑暗，你要拥抱你看得见的光明，然而操控者却非让你在黑暗与光明中反复融合出全新的结界。人与人之间的分离、兵变，只是我们选择了不同的人生和不同的际遇，不论结果如何都是一份完整的满分答卷。再次我默默的致谢：不用难过，我们都没错，好好活下去终有一天会发现自己存在的意义。

---

## 主题二：光芒一时，紊乱一期

2017年，我误入了身心奴虐的地域，好比把我丢入了暮气沉沉的JSP框架程序中自生自灭。  
2020年，我选择了流行光鲜无忧无虑的全新区域，开开心心好似对着Java世界第一次输出"hello,world"的新奇。  

之后的学生生涯中：  
- 从web安全研究到web项目开发  
- 转到PC端安全研究  
- PC端驱动开发  
- PC端逆向研发  
- 某次机缘下成为安卓C++底层世界开发的一粒微尘  

---
## 主题三：世界本暗，持汝初心

不知不觉间，我已经在茫茫代码领域中发展成为了商业开发的一员，不知不觉已经成为了互联网独立开发程序员，有着自己的生活区域。我只是在漫长的迁跃中，走出了某条适应于自我的一种道路。对你而言可能错了，但是选择从来不分对错，结果更是不分好坏，只是命运的棋子悄然变动了。

我的初心是美好且伟大的。或许每个大学生都怀有悬壶济世、热血江山的梦想，只是在社会摸爬滚打中渐渐认清了冰冷彻骨的现实。在我还没有接触代码的时候，为了避免"穷人自有恶人磨"的寒苦生活现状，我持续生活在别人设定的虚拟假象世界中（游戏、小说、电视）。甚至严重到了修仙成佛的地步，说来也搞笑，但这些都是曾经抓得住的切片记忆。

我有一个梦想：
- 让全世界所有人幸福安康，让所有苦难都消融，让微笑快乐常挂身边，以热爱快乐面对每一天的全新生活
- 让冷漠被热情替代，让寒冰坚雪融化，让世间苦难不再持续发生，找回儿童真挚的笑容，重拾"自由快乐平等"
- 既然所有的商业物品都是披着羊皮的狼，那就让全世界所有的商品都回归原始真实状态，让消费者安心舒适的选购
- 让竞争不再头破血流，无论任何事，都可以平常心、同等心静静解决
- 掌控江山，成为异界之神，坐拥亿万生灵，尊享华夏庙堂

理想化丰满化的虚拟生活只存在于游戏中、影视中、虚拟中。人血馒头的残酷现实扼杀了全部的梦。

我的初心是什么？只是想真诚实在、热心助人、平等对待，让风范从课本中走出来，有错吗？

是的，大错特错：
- 因为课本全是抽象化的错误式儒学奴化教育，目的就是为了掌控廉洁高质量的年轻劳动力
- 因为让真实彻底走到明面上，将会剥夺大量行业的生存之道，甚至直接击垮整个社会
- 本来，真真假假虚实不分，善恶交融有序离场，好坏不分才能正常运转。人世间的运转本就是复杂多样且不可预测的

世界本就黑暗，但请保持你的初心。


## 主题四:技术的永恒悖论(独立编程者自省)
> "别以为站在技术巅峰就能永恒——今天的屠龙者，注定是明天被AI和更年轻大脑淘汰的'古典程序员'。"--泪心

作为一名在网络安全与逆向工程领域深耕多年的技术从业者，我经历了从入门到精通的完整成长轨迹。这段旅程带给我的不仅是技术能力的提升，更引发了对技术本质的深刻思考。

### 技术的双面性

在这个日新月异的数字时代，技术就像一把双刃剑。我们引以为傲的代码成果，那些熬夜攻克的技术难关，很可能在未来成为颠覆我们自身的武器。这种宿命般的循环，正是技术从业者面临的最大悖论。

从最初转发技术论坛内容，到后来能够独立开发复杂的逆向工具，我深刻体会到技术迭代的无情。那些曾经让我兴奋不已的技术突破，如今看来不过是技术长河中的一朵浪花。

### 商业与理想的平衡

随着技术能力的提升，我不得不面对一个现实问题：如何平衡技术理想与商业需求？从完全无偿的技术分享，到建立可持续的商业模式，这个过程充满挑战与反思。

我始终坚持一个原则：即使在商业化运作中，也要保留技术的普惠性。每个项目都设有免费与付费版本的明确区分，这不仅是一种商业策略，更是对技术初心的坚守。

### 给后来者的建议

看着新一代技术爱好者涌入这个领域，我仿佛看到了当年的自己。在此，我想分享几点感悟：

1. **技术会过时，但解决问题的能力永不过时**
2. **保持学习热情比掌握特定技术更重要**
3. **在追求技术深度的同时，不要忽视技术伦理**

在这个快速变化的时代，我们或许无法永远站在技术前沿，但可以培养超越技术本身的思维方式。这才是技术从业者真正的核心竞争力。

技术之路没有终点，只有不断的自我超越与反思。愿我们都能在技术探索中，找到属于自己的平衡点。

很可惜,你们跟我走的是同一条路,只注重实战项目,只看最终结果。虽然说社会就是需要这样的人才,公司就是需要这样的员工。
但是这样写代码写久了后,你会发现自己在某个方向渐行渐远,甚至分不清什么是虚拟什么是现实,简单点说就是空荡荡的。(String), 43(Long), http://localhost:8080/images/bg2.jpg(String), 泪心,似乎是一个脆弱的标识。或许立名的开始只是因为那个“她”，后面却成为了悲剧中的那个“它”，明知道自己陷入了不归的泥炭沼泽，却再也无法跳出手敲键盘跳出代码的虚拟世界了。(String), true(Boolean), false(Boolean), false(Boolean), true(Boolean), 2025-06-29 11:04:02.659(Timestamp), 93(Long)
2025-06-29 11:04:02.665 DEBUG 7940 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 11:04:02.674 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 11:04:02.674 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 11:04:02.675 DEBUG 7940 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 11:04:02.675 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 11:04:02.676 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 11:04:02.677 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 11:04:02.677 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:04:02.677 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:04:02.677 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:04:02.761  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:04:02.762 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:04:02.762 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:04:02.763 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:04:02.763 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:04:02.763 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:04:02.764 DEBUG 7940 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:04:02.764 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:04:02.764 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:04:02.765 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:04:02.765 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:04:02.765 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:04:02.766 DEBUG 7940 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:04:02.766  INFO 7940 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:04:04.223  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/93', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[93, {}]}
2025-06-29 11:04:04.225 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 11:04:04.225 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 93(Long)
2025-06-29 11:04:04.226 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 11:04:04.227 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 11:04:04.227 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==> Parameters: 93(Long)
2025-06-29 11:04:04.230 DEBUG 7940 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 11:04:04.230 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 11:04:04.230 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 93(Long), 93(Long), 93(Long)
2025-06-29 11:04:04.231 DEBUG 7940 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 11:04:04.231  INFO 7940 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog
2025-06-29 11:04:04.541  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:04:04.541 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:04:04.541 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:04:04.542 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:04:04.542 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:04:04.542 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:04:04.543 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:04:04.543 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:04:04.543 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:04:04.544 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:04:04.544 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:04:04.544 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:04:04.544 DEBUG 7940 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:04:04.544  INFO 7940 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:04:04.585  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/93', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[93, {}]}
2025-06-29 11:04:04.586 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 11:04:04.586 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 93(Long), -1(Long)
2025-06-29 11:04:04.587 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 11:04:04.587  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 11:04:27.907 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 11:04:27.907 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 93(Long)
2025-06-29 11:04:27.909 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 11:04:27.910 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:04:27.910 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:04:27.910 DEBUG 7940 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:04:27.990  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:04:27.990 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:04:27.990 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:04:27.990 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:04:27.991 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:04:27.991 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:04:27.991 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:04:27.991 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:04:27.992 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:04:27.992 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:04:27.992 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:04:27.992 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:04:27.992 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:04:27.993  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:05:03.922  WARN 7940 --- [http-nio-8080-exec-7] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 11:05:03.923 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 11:05:03.924 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), 泪心的由来，一条充满复杂色的成长道路(String), # 序言
**如果您能看完关于泪心的全文介绍,我将非常感谢,不看也没关系,这只是作者对于自己青春的自我叙述。**  **<font color="darkred">也许你很想知道，明明大型平台这么多，为什么非要自己搭建个平台发布技术交流。原因很简单，因为技术限流，风险提示。只好自己搭建全新平台咯。非要一句话概括,实乃天下熙攘皆为利往。我不给平台打钱,它为啥不封禁我呢？</font>**
先介绍一下，我是泪心，一名互联网上资深独立自由软件开发员。为什么要带着"资深"呢？这跟我大学期间胡乱碰撞有关，听说那个技术好那个技术能立马获取成就感就去学那个，最后发现自己浪费了年华结果一事无成。虽说如此，但是我大学期间的确是让我把全部编程语言入门了一次。
<br>
为什么要叫泪心呢,现在2025年则是满满的失意,对自己对外面对世界全是失意,一种说不上来的余生孤独感，仿若存在就像是个固定的NPC找不到自己的归属地。或许，“泪心”本来就是以泪洗面吧？也许,我已经失去了爱,生活已经逼得我披上了一层保护自己的无痕泡沫。

---


## 主题一：失意迷乱，身心俱疲

沉默，是保护自己；  
安静，是守护自己；  
出品，是表现自己；  
低调，是护全自己；  
隐忍，是成就自己；  
欣慰，是获取赞美。  

世间利，人间利，本是利，既无利，何以为生？我亦不愿如此，可恨人世间就是一场盛大的虚拟游戏。爱恨离愁都是感受到感受不到的无关缓存，只是碎裂了套娃世界的中枢服务器，却导致了某个对象独立内存的溢出毁灭式崩溃。

你活着，你要卑微的活着，你要去顺应你看得见的黑暗，你要拥抱你看得见的光明，然而操控者却非让你在黑暗与光明中反复融合出全新的结界。人与人之间的分离、兵变，只是我们选择了不同的人生和不同的际遇，不论结果如何都是一份完整的满分答卷。再次我默默的致谢：不用难过，我们都没错，好好活下去终有一天会发现自己存在的意义。

---

## 主题二：光芒一时，紊乱一期

2017年，我误入了身心奴虐的地域，好比把我丢入了暮气沉沉的JSP框架程序中自生自灭。  
2020年，我选择了流行光鲜无忧无虑的全新区域，开开心心好似对着Java世界第一次输出"hello,world"的新奇。  

之后的学生生涯中：  
- 从web安全研究到web项目开发  
- 转到PC端安全研究  
- PC端驱动开发  
- PC端逆向研发  
- 某次机缘下成为安卓C++底层世界开发的一粒微尘  

---
## 主题三：世界本暗，持汝初心

不知不觉间，我已经在茫茫代码领域中发展成为了商业开发的一员，不知不觉已经成为了互联网独立开发程序员，有着自己的生活区域。我只是在漫长的迁跃中，走出了某条适应于自我的一种道路。对你而言可能错了，但是选择从来不分对错，结果更是不分好坏，只是命运的棋子悄然变动了。

我的初心是美好且伟大的。或许每个大学生都怀有悬壶济世、热血江山的梦想，只是在社会摸爬滚打中渐渐认清了冰冷彻骨的现实。在我还没有接触代码的时候，为了避免"穷人自有恶人磨"的寒苦生活现状，我持续生活在别人设定的虚拟假象世界中（游戏、小说、电视）。甚至严重到了修仙成佛的地步，说来也搞笑，但这些都是曾经抓得住的切片记忆。

我有一个梦想：
- 让全世界所有人幸福安康，让所有苦难都消融，让微笑快乐常挂身边，以热爱快乐面对每一天的全新生活
- 让冷漠被热情替代，让寒冰坚雪融化，让世间苦难不再持续发生，找回儿童真挚的笑容，重拾"自由快乐平等"
- 既然所有的商业物品都是披着羊皮的狼，那就让全世界所有的商品都回归原始真实状态，让消费者安心舒适的选购
- 让竞争不再头破血流，无论任何事，都可以平常心、同等心静静解决
- 掌控江山，成为异界之神，坐拥亿万生灵，尊享华夏庙堂

理想化丰满化的虚拟生活只存在于游戏中、影视中、虚拟中。人血馒头的残酷现实扼杀了全部的梦。

我的初心是什么？只是想真诚实在、热心助人、平等对待，让风范从课本中走出来，有错吗？

是的，大错特错：
- 因为课本全是抽象化的错误式儒学奴化教育，目的就是为了掌控廉洁高质量的年轻劳动力
- 因为让真实彻底走到明面上，将会剥夺大量行业的生存之道，甚至直接击垮整个社会
- 本来，真真假假虚实不分，善恶交融有序离场，好坏不分才能正常运转。人世间的运转本就是复杂多样且不可预测的

世界本就黑暗，但请保持你的初心。


## 主题四:技术的永恒悖论(独立编程者自省)
> "别以为站在技术巅峰就能永恒——今天的屠龙者，注定是明天被AI和更年轻大脑淘汰的'古典程序员'。"--泪心

作为一名在网络安全与逆向工程领域深耕多年的技术从业者，我经历了从入门到精通的完整成长轨迹。这段旅程带给我的不仅是技术能力的提升，更引发了对技术本质的深刻思考。

### 技术的双面性

在这个日新月异的数字时代，技术就像一把双刃剑。我们引以为傲的代码成果，那些熬夜攻克的技术难关，很可能在未来成为颠覆我们自身的武器。这种宿命般的循环，正是技术从业者面临的最大悖论。

从最初转发技术论坛内容，到后来能够独立开发复杂的逆向工具，我深刻体会到技术迭代的无情。那些曾经让我兴奋不已的技术突破，如今看来不过是技术长河中的一朵浪花。

### 商业与理想的平衡

随着技术能力的提升，我不得不面对一个现实问题：如何平衡技术理想与商业需求？从完全无偿的技术分享，到建立可持续的商业模式，这个过程充满挑战与反思。

我始终坚持一个原则：即使在商业化运作中，也要保留技术的普惠性。每个项目都设有免费与付费版本的明确区分，这不仅是一种商业策略，更是对技术初心的坚守。

### 给后来者的建议

看着新一代技术爱好者涌入这个领域，我仿佛看到了当年的自己。在此，我想分享几点感悟：

1. **技术会过时，但解决问题的能力永不过时**
2. **保持学习热情比掌握特定技术更重要**
3. **在追求技术深度的同时，不要忽视技术伦理**

在这个快速变化的时代，我们或许无法永远站在技术前沿，但可以培养超越技术本身的思维方式。这才是技术从业者真正的核心竞争力。

技术之路没有终点，只有不断的自我超越与反思。愿我们都能在技术探索中，找到属于自己的平衡点。

很可惜,你们跟我走的是同一条路,只注重实战项目,只看最终结果。虽然说社会就是需要这样的人才,公司就是需要这样的员工。
但是这样写代码写久了后,你会发现自己在某个方向渐行渐远,甚至分不清什么是虚拟什么是现实,简单点说就是空荡荡的。(String), 43(Long), http://localhost:8080/images/bg2.jpg(String), 泪心,似乎是一个脆弱的标识。或许立名的开始只是因为那个“她”，后面却成为了悲剧中的那个“它”，明知道自己陷入了不归的泥炭沼泽，却再也无法跳出手敲键盘跳出代码的虚拟世界了。(String), true(Boolean), false(Boolean), false(Boolean), true(Boolean), 2025-06-29 11:05:03.923(Timestamp), 93(Long)
2025-06-29 11:05:03.926 DEBUG 7940 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 11:05:03.935 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 11:05:03.936 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 11:05:03.936 DEBUG 7940 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 11:05:03.937 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 11:05:03.937 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 11:05:03.938 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 11:05:03.939 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:05:03.939 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:05:03.939 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:05:04.037  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:05:04.037 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:05:04.037 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:05:04.038 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:05:04.038 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:05:04.038 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:05:04.039 DEBUG 7940 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:05:04.039 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:05:04.039 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:05:04.040 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:05:04.040 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:05:04.040 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:05:04.040 DEBUG 7940 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:05:04.040  INFO 7940 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:05:06.163  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/93', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[93, {}]}
2025-06-29 11:05:06.164 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 11:05:06.164 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 93(Long)
2025-06-29 11:05:06.166 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 11:05:06.167 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 11:05:06.168 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==> Parameters: 93(Long)
2025-06-29 11:05:06.170 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 11:05:06.170 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 11:05:06.170 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 93(Long), 93(Long), 93(Long)
2025-06-29 11:05:06.171 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 11:05:06.171  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : blog
2025-06-29 11:05:06.419  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:05:06.419 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:05:06.419 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:05:06.420 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:05:06.420 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:05:06.420 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:05:06.420 DEBUG 7940 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:05:06.420 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:05:06.421 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:05:06.421 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:05:06.421 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:05:06.421 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:05:06.421 DEBUG 7940 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:05:06.422  INFO 7940 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:05:06.453  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/93', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[93, {}]}
2025-06-29 11:05:06.453 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 11:05:06.454 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 93(Long), -1(Long)
2025-06-29 11:05:06.454 DEBUG 7940 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 11:05:06.455  INFO 7940 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 11:19:22.153  INFO 20048 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 20048 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 11:19:22.154 DEBUG 20048 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 11:19:22.155  INFO 20048 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 11:19:22.190  INFO 20048 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 11:19:22.190  INFO 20048 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 11:19:22.656  INFO 20048 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 11:19:22.657  INFO 20048 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 11:19:22.678  INFO 20048 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2025-06-29 11:19:22.966  INFO 20048 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$639da772] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 11:19:23.210  INFO 20048 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-06-29 11:19:23.216  INFO 20048 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 11:19:23.217  INFO 20048 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 11:19:23.268  INFO 20048 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 11:19:23.269  INFO 20048 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1077 ms
2025-06-29 11:19:24.090  INFO 20048 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 11:19:24.162  INFO 20048 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 11:19:24.538  INFO 20048 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 11:19:24.587  INFO 20048 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-06-29 11:19:24.589  INFO 20048 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.686 seconds (JVM running for 3.201)
2025-06-29 11:19:30.395  INFO 20048 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 11:19:30.396  INFO 20048 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 11:19:30.403  INFO 20048 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-06-29 11:19:30.427  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2025-06-29 11:19:30.434  INFO 20048 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 11:19:30.512  INFO 20048 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 11:19:30.533 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 11:19:30.551 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 11:19:30.566 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:19:30.572 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:19:30.573 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 11:19:30.577 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:19:30.579  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:19:30.872  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:19:30.875 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:19:30.875 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:19:30.877 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:19:30.878 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:19:30.878 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:19:30.880 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:19:30.880 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:19:30.881 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:19:30.881 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:19:30.882 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:19:30.882 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:19:30.882 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:19:30.883  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:19:33.904  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 11:19:33.907 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 11:19:33.907 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 11:19:33.909 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:19:33.910 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:19:33.910 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 11:19:33.912 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:19:33.912  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:19:34.015  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:19:34.016 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:19:34.016 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:19:34.017 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:19:34.018 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:19:34.018 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:19:34.019 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:19:34.019 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:19:34.019 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:19:34.020 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:19:34.021 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:19:34.021 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:19:34.022 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:19:34.022  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:19:36.194  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/43', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 43, {}]}
2025-06-29 11:19:36.195 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 11:19:36.196 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 11:19:36.198 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:19:36.199 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:19:36.199 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 11:19:36.201 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:19:36.201  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:19:36.286  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:19:36.287 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:19:36.287 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:19:36.288 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:19:36.289 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:19:36.289 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:19:36.290 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:19:36.290 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:19:36.290 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:19:36.292 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:19:36.292 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:19:36.293 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:19:36.294 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:19:36.295  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:19:38.255  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 11:19:38.256 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 11:19:38.257 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 11:19:38.258 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:19:38.259 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:19:38.259 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 11:19:38.260 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:19:38.260  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:19:38.351  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:19:38.352 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:19:38.352 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:19:38.352 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:19:38.353 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:19:38.353 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:19:38.354 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:19:38.355 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:19:38.355 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:19:38.356 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:19:38.356 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:19:38.357 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:19:38.357 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:19:38.357  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:20:35.766  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 11:20:35.785 DEBUG 20048 --- [http-nio-8080-exec-1] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2025-06-29 11:20:35.785 DEBUG 20048 --- [http-nio-8080-exec-1] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2025-06-29 11:20:35.786 DEBUG 20048 --- [http-nio-8080-exec-1] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2025-06-29 11:20:35.788 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id LIMIT ? 
2025-06-29 11:20:35.789 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2025-06-29 11:20:35.790 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:20:35.791 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:20:35.791 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 11:20:35.793 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:20:35.793  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:20:35.978  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:20:35.979 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 11:20:35.979 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 11:20:35.980 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 11:20:35.981 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 11:20:35.981 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 11:20:35.982 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:20:35.982 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:20:35.982 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:20:35.983 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:20:35.983 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:20:35.983 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:20:35.984 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:20:35.984 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:20:35.984 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:20:35.985 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:20:35.985  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:20:37.045  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 11:20:37.046 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 11:20:37.046 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 11:20:37.047 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:20:37.048 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:20:37.049 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 11:20:37.050 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:20:37.050  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:20:37.139  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:20:37.140 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 11:20:37.140 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 11:20:37.141 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 11:20:37.142 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 11:20:37.142 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 11:20:37.143 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:20:37.143 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:20:37.143 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:20:37.144 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:20:37.144 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:20:37.144 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:20:37.145 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:20:37.145 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:20:37.145 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:20:37.146 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:20:37.146  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:20:40.182  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/93', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[93, {}]}
2025-06-29 11:20:40.187 DEBUG 20048 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getDetailedBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_user u, myblog.t_type t WHERE b.user_id = u.id AND b.type_id = t.id AND b.id = ? 
2025-06-29 11:20:40.187 DEBUG 20048 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getDetailedBlog_COUNT    : ==> Parameters: 93(Long)
2025-06-29 11:20:40.188 DEBUG 20048 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getDetailedBlog_COUNT    : <==      Total: 1
2025-06-29 11:20:40.189 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? LIMIT ? 
2025-06-29 11:20:40.189 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 93(Long), 10000(Integer)
2025-06-29 11:20:40.193 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 11:20:40.225 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 11:20:40.226 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateViews         : ==> Parameters: 93(Long)
2025-06-29 11:20:40.229 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 11:20:40.230 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 11:20:40.230 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 93(Long), 93(Long), 93(Long)
2025-06-29 11:20:40.231 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 11:20:40.232  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : blog
2025-06-29 11:20:40.446  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:20:40.446 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:20:40.447 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:20:40.448 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:20:40.448 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:20:40.448 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:20:40.449 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:20:40.450 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:20:40.450 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:20:40.450 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:20:40.451 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:20:40.451 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:20:40.451 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:20:40.452  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:20:40.507  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/93', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[93, {}]}
2025-06-29 11:20:40.513 DEBUG 20048 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 11:20:40.513 DEBUG 20048 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 93(Long), -1(Long)
2025-06-29 11:20:40.514 DEBUG 20048 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 11:20:40.514  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 11:20:44.810  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 11:20:44.813 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2025-06-29 11:20:44.813 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2025-06-29 11:20:44.814 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2025-06-29 11:20:44.814 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id LIMIT ? 
2025-06-29 11:20:44.815 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2025-06-29 11:20:44.816 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:20:44.817 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:20:44.817 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 11:20:44.818 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:20:44.819  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:20:44.970  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:20:44.970 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:20:44.970 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:20:44.971 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:20:44.971 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:20:44.972 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:20:44.972 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:20:44.972 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:20:44.973 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:20:44.973 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:20:44.974 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:20:44.974 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:20:44.975 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:20:44.975  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:20:46.626  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/43', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 43, {}]}
2025-06-29 11:20:46.627 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 11:20:46.627 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 11:20:46.628 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:20:46.629 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:20:46.629 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 11:20:46.631 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:20:46.631  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:20:46.715  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:20:46.716 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:20:46.716 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:20:46.717 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:20:46.717 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:20:46.718 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:20:46.718 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:20:46.719 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:20:46.719 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:20:46.720 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:20:46.720 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:20:46.720 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:20:46.721 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:20:46.721  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:21:24.174  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 11:21:24.175 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 11:21:24.175 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 11:21:24.177 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:21:24.178 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:21:24.178 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 11:21:24.179 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:21:24.179  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:21:24.265  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:21:24.266 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 11:21:24.266 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 11:21:24.268 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 11:21:24.268 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 11:21:24.268 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 11:21:24.269 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:21:24.269 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:21:24.269 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:21:24.270 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:21:24.270 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:21:24.270 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:21:24.270 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:21:24.271 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:21:24.271 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:21:24.271 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:21:24.271  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:21:25.745  INFO 20048 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/43', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 43, {}]}
2025-06-29 11:21:25.746 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 11:21:25.746 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 11:21:25.747 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:21:25.750 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:21:25.750 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 11:21:25.751 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:21:25.751  INFO 20048 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:21:25.834  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:21:25.835 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:21:25.835 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:21:25.836 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:21:25.836 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:21:25.836 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:21:25.837 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:21:25.837 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:21:25.837 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:21:25.838 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:21:25.838 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:21:25.839 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:21:25.840 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:21:25.840  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:21:41.827  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 11:21:41.830 DEBUG 20048 --- [http-nio-8080-exec-3] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==>  Preparing: SELECT count(0) FROM myblog.t_type t, myblog.t_blog b WHERE t.id = b.type_id 
2025-06-29 11:21:41.831 DEBUG 20048 --- [http-nio-8080-exec-3] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : ==> Parameters: 
2025-06-29 11:21:41.832 DEBUG 20048 --- [http-nio-8080-exec-3] c.s.dao.TypeDao.getAllTypeAndBlog_COUNT  : <==      Total: 1
2025-06-29 11:21:41.833 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id LIMIT ? 
2025-06-29 11:21:41.833 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 10000(Integer)
2025-06-29 11:21:41.834 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:21:41.835 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:21:41.835 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 11:21:41.836 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:21:41.836  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:21:41.928  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:21:41.929 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:21:41.929 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:21:41.930 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:21:41.930 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:21:41.931 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:21:41.932 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:21:41.932 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:21:41.932 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:21:41.933 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:21:41.933 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:21:41.934 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:21:41.934 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:21:41.934  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:21:51.487  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 11:21:51.489 DEBUG 20048 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getDetailedBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_user u, myblog.t_type t WHERE b.user_id = u.id AND b.type_id = t.id AND b.id = ? 
2025-06-29 11:21:51.489 DEBUG 20048 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getDetailedBlog_COUNT    : ==> Parameters: 94(Long)
2025-06-29 11:21:51.490 DEBUG 20048 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getDetailedBlog_COUNT    : <==      Total: 1
2025-06-29 11:21:51.490 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? LIMIT ? 
2025-06-29 11:21:51.490 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long), 10000(Integer)
2025-06-29 11:21:51.492 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 11:21:51.503 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 11:21:51.504 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 11:21:51.506 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 11:21:51.506 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 11:21:51.507 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 11:21:51.507 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 11:21:51.507  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : blog
2025-06-29 11:21:51.822  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:21:51.823 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:21:51.823 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:21:51.824 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:21:51.824 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:21:51.824 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:21:51.825 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:21:51.825 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:21:51.825 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:21:51.826 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:21:51.826 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:21:51.826 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:21:51.827 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:21:51.827  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:21:51.868  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 11:21:51.868 DEBUG 20048 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 11:21:51.868 DEBUG 20048 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 11:21:51.869 DEBUG 20048 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 11:21:51.870  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 11:22:47.241 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2025-06-29 11:22:47.242 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: 123456(String), e10adc3949ba59abbe56e057f20f883e(String)
2025-06-29 11:22:47.245 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2025-06-29 11:22:47.357  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:22:47.357 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 11:22:47.358 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 11:22:47.359 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 11:22:47.359 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 11:22:47.359 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 11:22:47.360 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:22:47.360 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:22:47.360 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:22:47.361 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:22:47.361 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:22:47.362 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:22:47.362 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:22:47.363 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:22:47.363 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:22:47.364 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:22:47.364  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:22:52.073 DEBUG 20048 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 11:22:52.073 DEBUG 20048 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 11:22:52.074 DEBUG 20048 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 11:22:52.075 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 11:22:52.076 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 11:22:52.078 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 11:22:52.079 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:22:52.079 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:22:52.080 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:22:52.180  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:22:52.180 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:22:52.181 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:22:52.181 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:22:52.181 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:22:52.182 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:22:52.182 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:22:52.182 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:22:52.182 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:22:52.183 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:22:52.183 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:22:52.183 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:22:52.184 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:22:52.184  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:23:03.701 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 11:23:03.701 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 11:23:03.704 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 11:23:03.705 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:23:03.705 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:23:03.706 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:23:03.797  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:23:03.797 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:23:03.797 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:23:03.798 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:23:03.799 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:23:03.799 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:23:03.800 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:23:03.800 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:23:03.800 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:23:03.801 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:23:03.801 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:23:03.801 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:23:03.802 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:23:03.802  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:24:01.360  WARN 20048 --- [http-nio-8080-exec-8] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 11:24:01.387 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 11:24:01.391 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 11:24:01.386(Timestamp), 94(Long)
2025-06-29 11:24:01.394 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 11:24:01.418 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 11:24:01.418 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 11:24:01.419 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 11:24:01.420 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 11:24:01.420 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 11:24:01.421 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 11:24:01.422 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:24:01.422 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:24:01.423 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:24:01.499  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:24:01.499 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:24:01.499 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:24:01.500 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:24:01.500 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:24:01.501 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:24:01.501 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:24:01.502 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:24:01.502 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:24:01.502 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:24:01.503 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:24:01.503 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:24:01.503 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:24:01.503  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:24:06.524  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 11:24:06.526 DEBUG 20048 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 11:24:06.527 DEBUG 20048 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 11:24:06.527 DEBUG 20048 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 11:24:06.528 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 11:24:06.528 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 11:24:06.531 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 11:24:06.532 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 11:24:06.532 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 11:24:06.533 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getNewComment       : <==      Total: 0
2025-06-29 11:24:06.533  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index
2025-06-29 11:24:06.682  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:24:06.682 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:24:06.682 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:24:06.683 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:24:06.683 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:24:06.683 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:24:06.684 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:24:06.684 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:24:06.684 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:24:06.684 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:24:06.685 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:24:06.685 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:24:06.685 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:24:06.685  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:24:10.752  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 11:24:10.753 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 11:24:10.753 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 11:24:10.755 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 11:24:10.761 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 11:24:10.762 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 11:24:10.765 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 11:24:10.765 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 11:24:10.765 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 11:24:10.767 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 11:24:10.767  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : blog
2025-06-29 11:24:11.111  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:24:11.111 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:24:11.112 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:24:11.113 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:24:11.114 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:24:11.114 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:24:11.116 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:24:11.116 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:24:11.117 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:24:11.117 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:24:11.117 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:24:11.118 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:24:11.118 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:24:11.118  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:24:11.158  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 11:24:11.158 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 11:24:11.159 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 11:24:11.159 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 11:24:11.159  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 11:27:27.809  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 11:27:27.811 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 11:27:27.812 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 11:27:27.813 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 11:27:27.819 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 11:27:27.819 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 11:27:27.821 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 11:27:27.822 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 11:27:27.822 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 11:27:27.823 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 11:27:27.823  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : blog
2025-06-29 11:27:28.152  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:27:28.153 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:27:28.153 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:27:28.154 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:27:28.154 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:27:28.154 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:27:28.155 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:27:28.156 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:27:28.156 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:27:28.156 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:27:28.157 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:27:28.157 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:27:28.157 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:27:28.157  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:27:28.201  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 11:27:28.201 DEBUG 20048 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 11:27:28.201 DEBUG 20048 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 11:27:28.202 DEBUG 20048 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 11:27:28.202  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 11:27:55.944  INFO 20048 --- [http-nio-8080-exec-5] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2025-06-29 11:27:55.945  INFO 20048 --- [http-nio-8080-exec-5] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2025-06-29 11:27:56.053 ERROR 20048 --- [http-nio-8080-exec-5] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/comments，Exception : {}

org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:942) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:353) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:134) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:97) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:84) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:215) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:188) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at com.star.aspect.SessionInterceptor.preHandle(SessionInterceptor.java:48) ~[classes/:na]
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
>>>>>>> 061b4ebfa035e46571fa162f1dfef2e805979582
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
<<<<<<< HEAD

2025-06-30 09:27:22.804 ERROR 15940 --- [http-nio-80-exec-1] c.s.hander.ControllerExceptionHandler    : Requst URL : http://127.0.0.1/，Exception : {}

org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
### Cause: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at jdk.proxy2/jdk.proxy2.$Proxy91.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85) ~[mybatis-3.5.4.jar:3.5.4]
	at jdk.proxy3/jdk.proxy3.$Proxy99.getFirstPageBlog(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at jdk.proxy3/jdk.proxy3.$Proxy100.getFirstPageBlog(Unknown Source) ~[na:na]
	at com.star.service.Impl.BlogServiceImpl.getAllFirstPageBlog(BlogServiceImpl.java:77) ~[classes/:na]
	at com.star.controller.IndexController.index(IndexController.java:39) ~[classes/:na]
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$7acbc171.index(<generated>) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
=======
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78) ~[lettuce-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56) ~[lettuce-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234) ~[lettuce-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207) ~[lettuce-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	... 52 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: /127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[na:na]
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973) ~[na:na]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330) ~[netty-transport-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334) ~[netty-transport-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702) ~[netty-transport-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[netty-transport-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[netty-transport-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.45.Final.jar:4.1.45.Final]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-29 11:27:56.055  WARN 20048 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1/<unresolved>:6379]
2025-06-29 11:27:57.592  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 11:27:57.594 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 11:27:57.595 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 11:27:57.597 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 11:27:57.597 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 11:27:57.598 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 11:27:57.599 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 11:27:57.600 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 11:27:57.600 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 11:27:57.601 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getNewComment       : <==      Total: 0
2025-06-29 11:27:57.601  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index
2025-06-29 11:27:57.725  INFO 20048 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:27:57.725 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 11:27:57.726 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 11:27:57.727 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 11:27:57.727 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 11:27:57.728 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 11:27:57.729 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:27:57.730 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:27:57.730 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:27:57.731 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:27:57.731 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:27:57.731 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:27:57.732 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:27:57.733 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:27:57.733 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:27:57.734 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:27:57.734  INFO 20048 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:28:00.817  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/93', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[93, {}]}
2025-06-29 11:28:00.818 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 11:28:00.818 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 93(Long)
2025-06-29 11:28:00.820 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 11:28:00.822 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 11:28:00.822 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : ==> Parameters: 93(Long)
2025-06-29 11:28:00.825 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 11:28:00.825 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 11:28:00.825 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 93(Long), 93(Long), 93(Long)
2025-06-29 11:28:00.826 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 11:28:00.826  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : blog
2025-06-29 11:28:01.131  INFO 20048 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:28:01.132 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:28:01.132 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:28:01.133 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:28:01.133 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:28:01.133 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:28:01.134 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:28:01.134 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:28:01.134 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:28:01.135 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:28:01.135 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:28:01.135 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:28:01.136 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:28:01.136  INFO 20048 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:28:01.175  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/93', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[93, {}]}
2025-06-29 11:28:01.176 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 11:28:01.176 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 93(Long), -1(Long)
2025-06-29 11:28:01.176 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 11:28:01.177  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 11:28:51.694 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 11:28:51.694 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 11:28:51.696 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 11:28:51.697 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:28:51.697 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:28:51.698 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:28:51.770  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:28:51.770 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:28:51.770 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:28:51.771 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:28:51.771 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:28:51.772 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:28:51.772 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:28:51.773 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:28:51.773 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:28:51.774 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:28:51.774 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:28:51.774 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:28:51.774 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:28:51.775  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:29:27.576  WARN 20048 --- [http-nio-8080-exec-1] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 11:29:27.585 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 11:29:27.586 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);
        model.addAttribute("pageInfo",pageInfo);
        model.addAttribute("recommendedBlogs", recommendedBlog);
        model.addAttribute("newComment",newComments);
        return "index";
    }
```(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 11:29:27.584(Timestamp), 94(Long)
2025-06-29 11:29:27.589 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 11:29:27.599 DEBUG 20048 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 11:29:27.599 DEBUG 20048 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 11:29:27.600 DEBUG 20048 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 11:29:27.601 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 11:29:27.601 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 11:29:27.603 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 11:29:27.603 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:29:27.603 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:29:27.604 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:29:27.680  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:29:27.681 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:29:27.681 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:29:27.681 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:29:27.682 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:29:27.682 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:29:27.682 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:29:27.683 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:29:27.683 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:29:27.684 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:29:27.684 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:29:27.684 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:29:27.685 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:29:27.685  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:29:30.324  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 11:29:30.325 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 11:29:30.325 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 11:29:30.326 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 11:29:30.330 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 11:29:30.330 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 11:29:30.333 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 11:29:30.333 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 11:29:30.334 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 11:29:30.334 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 11:29:30.335  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : blog
2025-06-29 11:29:30.662  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:29:30.662 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:29:30.663 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:29:30.664 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:29:30.665 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:29:30.665 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:29:30.666 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:29:30.666 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:29:30.666 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:29:30.666 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:29:30.666 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:29:30.666 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:29:30.667 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:29:30.667  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:29:30.706  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 11:29:30.706 DEBUG 20048 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 11:29:30.707 DEBUG 20048 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 11:29:30.707 DEBUG 20048 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 11:29:30.708  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 11:30:08.236 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 11:30:08.236 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 11:30:08.237 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 11:30:08.238 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:30:08.238 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:30:08.239 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:30:08.315  INFO 20048 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:30:08.316 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:30:08.316 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:30:08.316 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:30:08.317 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:30:08.317 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:30:08.318 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:30:08.318 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:30:08.318 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:30:08.319 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:30:08.319 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:30:08.319 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:30:08.320 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:30:08.320  INFO 20048 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:32:39.801  WARN 20048 --- [http-nio-8080-exec-4] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 11:32:39.814 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 11:32:39.816 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 11:32:39.813(Timestamp), 94(Long)
2025-06-29 11:32:39.818 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 11:32:39.828 DEBUG 20048 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 11:32:39.828 DEBUG 20048 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 11:32:39.829 DEBUG 20048 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 11:32:39.831 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 11:32:39.831 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 11:32:39.832 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 11:32:39.834 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:32:39.834 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:32:39.834 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:32:39.916  INFO 20048 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:32:39.916 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:32:39.916 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:32:39.917 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:32:39.917 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:32:39.917 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:32:39.918 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:32:39.918 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:32:39.919 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:32:39.919 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:32:39.919 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:32:39.919 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:32:39.920 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:32:39.920  INFO 20048 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:32:41.300  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 11:32:41.301 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 11:32:41.301 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 11:32:41.303 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 11:32:41.307 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 11:32:41.308 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 11:32:41.310 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 11:32:41.311 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 11:32:41.311 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 11:32:41.311 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 11:32:41.312  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : blog
2025-06-29 11:32:41.549  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:32:41.550 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:32:41.550 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:32:41.551 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:32:41.551 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:32:41.552 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:32:41.552 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:32:41.552 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:32:41.553 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:32:41.553 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:32:41.553 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:32:41.553 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:32:41.554 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:32:41.554  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:32:41.590  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 11:32:41.590 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 11:32:41.591 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 11:32:41.591 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 11:32:41.591  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 11:33:26.759  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2025-06-29 11:33:26.760 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 11:33:26.760 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 11:33:26.762 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:33:26.763 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:33:26.764 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 11:33:26.765 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:33:26.765  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:33:26.869  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:33:26.869 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:33:26.870 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:33:26.870 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:33:26.871 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:33:26.871 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:33:26.871 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:33:26.872 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:33:26.872 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:33:26.872 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:33:26.873 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:33:26.873 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:33:26.874 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:33:26.874  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:33:28.482  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 11:33:28.483 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 11:33:28.483 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 11:33:28.484 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:33:28.485 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:33:28.485 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 11:33:28.486 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:33:28.486  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:33:28.577  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:33:28.578 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:33:28.579 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:33:28.579 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:33:28.580 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:33:28.580 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:33:28.580 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:33:28.581 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:33:28.581 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:33:28.581 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:33:28.581 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:33:28.581 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:33:28.582 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:33:28.582  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:33:30.435  INFO 20048 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/43', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 43, {}]}
2025-06-29 11:33:30.436 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 11:33:30.436 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 11:33:30.437 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:33:30.438 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:33:30.438 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 11:33:30.438 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:33:30.439  INFO 20048 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:33:30.515  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:33:30.516 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:33:30.516 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:33:30.517 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:33:30.517 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:33:30.517 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:33:30.518 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:33:30.518 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:33:30.518 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:33:30.519 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:33:30.519 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:33:30.519 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:33:30.519 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:33:30.519  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:36:20.744 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 11:36:20.745 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 11:36:20.746 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 11:36:20.747 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:36:20.747 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:36:20.748 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:36:20.832  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:36:20.833 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:36:20.833 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:36:20.834 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:36:20.834 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:36:20.834 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:36:20.835 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:36:20.836 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:36:20.836 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:36:20.836 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:36:20.837 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:36:20.837 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:36:20.837 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:36:20.837  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:36:43.119  WARN 20048 --- [http-nio-8080-exec-8] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 11:36:43.132 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 11:36:43.133 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 11:36:43.131(Timestamp), 94(Long)
2025-06-29 11:36:43.136 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 11:36:43.145 DEBUG 20048 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 11:36:43.145 DEBUG 20048 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 11:36:43.146 DEBUG 20048 --- [http-nio-8080-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 11:36:43.146 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 11:36:43.147 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 11:36:43.148 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 11:36:43.149 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 11:36:43.149 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 11:36:43.149 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 11:36:43.242  INFO 20048 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:36:43.242 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:36:43.242 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:36:43.242 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:36:43.243 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:36:43.243 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:36:43.243 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:36:43.244 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:36:43.244 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:36:43.244 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:36:43.244 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:36:43.244 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:36:43.245 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:36:43.245  INFO 20048 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:36:45.352  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/43', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 43, {}]}
2025-06-29 11:36:45.353 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 11:36:45.353 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 11:36:45.354 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 11:36:45.355 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 11:36:45.355 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 11:36:45.356 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 11:36:45.356  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : types
2025-06-29 11:36:45.512  INFO 20048 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:36:45.513 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:36:45.513 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:36:45.513 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:36:45.514 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:36:45.514 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:36:45.514 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:36:45.515 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:36:45.515 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:36:45.515 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:36:45.516 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:36:45.516 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:36:45.516 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:36:45.516  INFO 20048 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:36:49.053  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 11:36:49.054 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 11:36:49.055 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 11:36:49.056 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 11:36:49.060 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 11:36:49.060 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 11:36:49.063 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 11:36:49.063 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 11:36:49.063 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 11:36:49.065 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 11:36:49.065  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : blog
2025-06-29 11:36:49.410  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 11:36:49.411 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 11:36:49.411 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 11:36:49.411 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 11:36:49.412 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 11:36:49.412 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 11:36:49.412 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 11:36:49.413 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 11:36:49.413 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 11:36:49.414 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 11:36:49.414 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 11:36:49.414 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 11:36:49.414 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 11:36:49.414  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 11:36:49.459  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 11:36:49.459 DEBUG 20048 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 11:36:49.459 DEBUG 20048 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 11:36:49.460 DEBUG 20048 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 11:36:49.461  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:06:52.995 DEBUG 20048 --- [http-nio-8080-exec-8] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2025-06-29 13:06:52.997 DEBUG 20048 --- [http-nio-8080-exec-8] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: 123456(String), e10adc3949ba59abbe56e057f20f883e(String)
2025-06-29 13:06:53.000 DEBUG 20048 --- [http-nio-8080-exec-8] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2025-06-29 13:06:53.116  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:06:53.117 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 13:06:53.118 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 13:06:53.120 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 13:06:53.120 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 13:06:53.121 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 13:06:53.122 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:06:53.123 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:06:53.124 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:06:53.125 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:06:53.126 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:06:53.126 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:06:53.127 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:06:53.128 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:06:53.129 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:06:53.130 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:06:53.131  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:07:02.569  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 13:07:02.571 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 13:07:02.572 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 13:07:02.573 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 13:07:02.574 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 13:07:02.574 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 13:07:02.576 DEBUG 20048 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 13:07:02.577 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 13:07:02.578 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 13:07:02.579 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getNewComment       : <==      Total: 0
2025-06-29 13:07:02.580  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index
2025-06-29 13:07:02.776  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:07:02.777 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:07:02.778 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:07:02.779 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:07:02.780 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:07:02.781 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:07:02.782 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:07:02.782 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:07:02.783 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:07:02.784 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:07:02.784 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:07:02.785 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:07:02.786 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:07:02.787  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:07:08.760  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 13:07:08.761 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 13:07:08.761 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 13:07:08.764 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 13:07:08.776 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 13:07:08.776 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 13:07:08.779 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 13:07:08.780 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:07:08.780 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:07:08.782 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:07:08.782  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : blog
2025-06-29 13:07:09.140  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:07:09.140 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:07:09.140 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:07:09.141 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:07:09.142 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:07:09.142 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:07:09.143 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:07:09.143 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:07:09.143 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:07:09.144 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:07:09.144 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:07:09.145 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:07:09.146 DEBUG 20048 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:07:09.147  INFO 20048 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:07:09.204  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 13:07:09.205 DEBUG 20048 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:07:09.205 DEBUG 20048 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:07:09.206 DEBUG 20048 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 13:07:09.206  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:11:13.460 DEBUG 20048 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 13:11:13.461 DEBUG 20048 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 13:11:13.463 DEBUG 20048 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 13:11:13.465 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 13:11:13.466 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 13:11:13.468 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 13:11:13.469 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:11:13.469 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:11:13.469 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:11:13.573  INFO 20048 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:11:13.573 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:11:13.574 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:11:13.574 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:11:13.575 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:11:13.575 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:11:13.575 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:11:13.576 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:11:13.576 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:11:13.576 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:11:13.577 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:11:13.577 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:11:13.578 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:11:13.578  INFO 20048 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:11:16.288 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 13:11:16.288 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 13:11:16.290 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 13:11:16.290 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:11:16.290 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:11:16.291 DEBUG 20048 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:11:16.379  INFO 20048 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:11:16.379 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:11:16.379 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:11:16.380 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:11:16.381 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:11:16.381 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:11:16.382 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:11:16.383 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:11:16.383 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:11:16.383 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:11:16.384 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:11:16.384 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:11:16.385 DEBUG 20048 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:11:16.385  INFO 20048 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:12:41.107  WARN 20048 --- [http-nio-8080-exec-2] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 13:12:41.120 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 13:12:41.122 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 13:12:41.12(Timestamp), 94(Long)
2025-06-29 13:12:41.125 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 13:12:41.135 DEBUG 20048 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 13:12:41.136 DEBUG 20048 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 13:12:41.136 DEBUG 20048 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 13:12:41.138 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 13:12:41.138 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 13:12:41.139 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 13:12:41.140 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:12:41.141 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:12:41.141 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:12:41.218  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:12:41.218 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:12:41.219 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:12:41.219 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:12:41.220 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:12:41.220 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:12:41.220 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:12:41.221 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:12:41.221 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:12:41.221 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:12:41.221 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:12:41.222 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:12:41.222 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:12:41.222  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:12:46.427  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 13:12:46.428 DEBUG 20048 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 13:12:46.428 DEBUG 20048 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 13:12:46.430 DEBUG 20048 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 13:12:46.430 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 13:12:46.431 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 13:12:46.433 DEBUG 20048 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 13:12:46.433 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 13:12:46.433 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 13:12:46.434 DEBUG 20048 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 0
2025-06-29 13:12:46.434  INFO 20048 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 13:12:46.527  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:12:46.527 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:12:46.528 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:12:46.528 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:12:46.529 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:12:46.529 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:12:46.530 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:12:46.530 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:12:46.530 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:12:46.531 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:12:46.531 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:12:46.531 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:12:46.532 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:12:46.532  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:12:47.477  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 13:12:47.478 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 13:12:47.478 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 13:12:47.480 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 13:12:47.484 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 13:12:47.485 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 13:12:47.487 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 13:12:47.488 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:12:47.488 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:12:47.489 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:12:47.489  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : blog
2025-06-29 13:12:47.817  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:12:47.817 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:12:47.817 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:12:47.819 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:12:47.820 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:12:47.820 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:12:47.821 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:12:47.822 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:12:47.822 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:12:47.823 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:12:47.823 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:12:47.823 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:12:47.823 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:12:47.824  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:12:47.885  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 13:12:47.885 DEBUG 20048 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:12:47.885 DEBUG 20048 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:12:47.886 DEBUG 20048 --- [http-nio-8080-exec-6] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 13:12:47.887  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:15:01.236 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 13:15:01.237 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 13:15:01.240 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 13:15:01.240 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:15:01.240 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:15:01.241 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:15:01.335  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:15:01.336 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:15:01.336 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:15:01.336 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:15:01.336 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:15:01.336 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:15:01.337 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:15:01.338 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:15:01.338 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:15:01.338 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:15:01.339 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:15:01.339 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:15:01.339 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:15:01.339  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:15:50.303  WARN 20048 --- [http-nio-8080-exec-10] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 13:15:50.315 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 13:15:50.317 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:123456} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 13:15:50.314(Timestamp), 94(Long)
2025-06-29 13:15:50.321 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 13:15:50.332 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 13:15:50.332 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 13:15:50.333 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 13:15:50.334 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 13:15:50.334 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 13:15:50.335 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 13:15:50.337 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:15:50.337 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:15:50.337 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:15:50.415  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:15:50.415 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:15:50.415 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:15:50.416 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:15:50.416 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:15:50.417 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:15:50.417 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:15:50.417 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:15:50.417 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:15:50.418 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:15:50.418 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:15:50.418 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:15:50.419 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:15:50.419  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:15:53.641  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 13:15:53.641 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 13:15:53.642 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 13:15:53.643 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 13:15:53.649 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 13:15:53.649 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 13:15:53.652 DEBUG 20048 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 13:15:53.652 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:15:53.652 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:15:53.653 DEBUG 20048 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:15:53.654  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : blog
2025-06-29 13:15:53.996  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:15:53.996 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:15:53.996 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:15:53.997 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:15:53.997 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:15:53.998 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:15:53.998 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:15:53.999 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:15:53.999 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:15:53.999 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:15:54.000 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:15:54.000 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:15:54.000 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:15:54.000  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:15:54.058  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 13:15:54.058 DEBUG 20048 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:15:54.058 DEBUG 20048 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:15:54.059 DEBUG 20048 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 13:15:54.059  INFO 20048 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:16:06.964 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 13:16:06.964 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 13:16:06.966 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 13:16:06.967 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:16:06.967 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:16:06.967 DEBUG 20048 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:16:07.046  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:16:07.047 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:16:07.047 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:16:07.047 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:16:07.048 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:16:07.048 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:16:07.049 DEBUG 20048 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:16:07.049 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:16:07.049 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:16:07.050 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:16:07.050 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:16:07.050 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:16:07.051 DEBUG 20048 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:16:07.051  INFO 20048 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:20:52.994  WARN 20048 --- [http-nio-8080-exec-6] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 13:20:53.009 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 13:20:53.012 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

## 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 13:20:53.008(Timestamp), 94(Long)
2025-06-29 13:20:53.015 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 13:20:53.024 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 13:20:53.024 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 13:20:53.025 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 13:20:53.026 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 13:20:53.026 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 13:20:53.027 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 13:20:53.028 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:20:53.028 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:20:53.029 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:20:53.113  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:20:53.113 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:20:53.113 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:20:53.113 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:20:53.114 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:20:53.114 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:20:53.114 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:20:53.114 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:20:53.114 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:20:53.115 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:20:53.115 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:20:53.115 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:20:53.115 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:20:53.115  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:20:57.004  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 13:20:57.005 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 13:20:57.005 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 13:20:57.006 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 13:20:57.010 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 13:20:57.010 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 13:20:57.013 DEBUG 20048 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 13:20:57.013 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:20:57.013 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:20:57.014 DEBUG 20048 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:20:57.014  INFO 20048 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : blog
2025-06-29 13:20:57.226  INFO 20048 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:20:57.226 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:20:57.227 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:20:57.228 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:20:57.228 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:20:57.228 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:20:57.230 DEBUG 20048 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:20:57.231 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:20:57.231 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:20:57.232 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:20:57.232 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:20:57.232 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:20:57.233 DEBUG 20048 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:20:57.233  INFO 20048 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:20:57.281  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 13:20:57.281 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:20:57.282 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:20:57.282 DEBUG 20048 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 13:20:57.282  INFO 20048 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:21:51.444 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 13:21:51.445 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 13:21:51.446 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 13:21:51.447 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:21:51.447 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:21:51.447 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:21:51.530  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:21:51.530 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:21:51.530 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:21:51.531 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:21:51.531 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:21:51.531 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:21:51.532 DEBUG 20048 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:21:51.532 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:21:51.533 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:21:51.533 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:21:51.533 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:21:51.533 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:21:51.534 DEBUG 20048 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:21:51.534  INFO 20048 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:23:36.817  WARN 20048 --- [http-nio-8080-exec-5] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 13:23:36.837 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 13:23:36.839 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 13:23:36.836(Timestamp), 94(Long)
2025-06-29 13:23:36.843 DEBUG 20048 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 13:23:36.853 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 13:23:36.853 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 13:23:36.854 DEBUG 20048 --- [http-nio-8080-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 13:23:36.855 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 13:23:36.855 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 13:23:36.856 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 13:23:36.857 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:23:36.857 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:23:36.857 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:23:36.942  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:23:36.942 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:23:36.943 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:23:36.943 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:23:36.944 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:23:36.944 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:23:36.944 DEBUG 20048 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:23:36.945 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:23:36.945 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:23:36.945 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:23:36.946 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:23:36.946 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:23:36.946 DEBUG 20048 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:23:36.946  INFO 20048 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:26:58.551  INFO 8344 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 8344 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 13:26:58.553 DEBUG 8344 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 13:26:58.553  INFO 8344 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 13:26:58.592  INFO 8344 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 13:26:58.592  INFO 8344 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 13:26:59.053  INFO 8344 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 13:26:59.054  INFO 8344 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 13:26:59.073  INFO 8344 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2025-06-29 13:26:59.352  INFO 8344 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$ea4e92a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 13:26:59.593  INFO 8344 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-06-29 13:26:59.601  INFO 8344 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 13:26:59.601  INFO 8344 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 13:26:59.652  INFO 8344 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 13:26:59.652  INFO 8344 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1060 ms
2025-06-29 13:27:00.478  INFO 8344 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 13:27:00.547  INFO 8344 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 13:27:00.901  INFO 8344 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 13:27:00.952  INFO 8344 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-06-29 13:27:00.954  INFO 8344 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.651 seconds (JVM running for 3.175)
2025-06-29 13:27:12.835  INFO 8344 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 13:27:12.835  INFO 8344 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 13:27:12.845  INFO 8344 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-06-29 13:27:12.877  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2025-06-29 13:27:12.886  INFO 8344 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 13:27:12.989  INFO 8344 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 13:27:13.017 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 13:27:13.040 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 13:27:13.063 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 13:27:13.071 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 13:27:13.073 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 13:27:13.077 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 13:27:13.080  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : types
2025-06-29 13:27:13.445  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:27:13.454 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:27:13.455 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:27:13.458 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:27:13.458 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:27:13.459 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:27:13.460 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:27:13.460 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:27:13.460 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:27:13.461 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:27:13.461 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:27:13.461 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:27:13.463 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:27:13.463  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:27:17.076  INFO 8344 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 13:27:17.078 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 13:27:17.078 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 13:27:17.080 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 13:27:17.081 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 13:27:17.081 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 13:27:17.083 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 13:27:17.084  INFO 8344 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : types
2025-06-29 13:27:17.194  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:27:17.221 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 13:27:17.221 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 13:27:17.223 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 13:27:17.224 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 13:27:17.226 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 13:27:17.228 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:27:17.228 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:27:17.228 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:27:17.229 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:27:17.230 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:27:17.230 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:27:17.231 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:27:17.232 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:27:17.232 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:27:17.232 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:27:17.233  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:27:18.549  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 13:27:18.555 DEBUG 8344 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 13:27:18.556 DEBUG 8344 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 13:27:18.557 DEBUG 8344 --- [http-nio-8080-exec-5] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 13:27:18.558 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 13:27:18.558 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 13:27:18.563 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 13:27:18.563 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 13:27:18.564 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 13:27:18.565 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getNewComment       : <==      Total: 0
2025-06-29 13:27:18.565  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index
2025-06-29 13:27:18.689  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:27:18.690 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:27:18.690 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:27:18.691 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:27:18.692 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:27:18.692 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:27:18.693 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:27:18.694 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:27:18.694 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:27:18.695 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:27:18.696 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:27:18.696 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:27:18.697 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:27:18.699  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:27:26.808  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 13:27:26.810 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 13:27:26.811 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 13:27:26.813 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 13:27:26.862 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 13:27:26.863 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 13:27:26.889 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 13:27:26.889 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:27:26.890 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:27:26.891 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:27:26.891  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : blog
2025-06-29 13:27:27.250  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:27:27.250 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:27:27.251 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:27:27.251 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:27:27.252 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:27:27.252 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:27:27.253 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:27:27.253 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:27:27.253 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:27:27.254 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:27:27.255 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:27:27.255 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:27:27.256 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:27:27.256  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:27:27.307  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 13:27:27.311 DEBUG 8344 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:27:27.312 DEBUG 8344 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:27:27.313 DEBUG 8344 --- [http-nio-8080-exec-1] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 13:27:27.313  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:27:43.268  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 13:27:43.271 DEBUG 8344 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 13:27:43.271 DEBUG 8344 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 13:27:43.272 DEBUG 8344 --- [http-nio-8080-exec-10] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 13:27:43.273 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 13:27:43.273 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 13:27:43.275 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 13:27:43.276 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 13:27:43.276 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 13:27:43.277 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getNewComment       : <==      Total: 0
2025-06-29 13:27:43.277  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index
2025-06-29 13:27:43.411  INFO 8344 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:27:43.412 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 13:27:43.412 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 13:27:43.413 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 13:27:43.413 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 13:27:43.414 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 13:27:43.414 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:27:43.415 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:27:43.415 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:27:43.416 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:27:43.417 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:27:43.417 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:27:43.418 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:27:43.418 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:27:43.418 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:27:43.419 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:27:43.419  INFO 8344 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:28:18.721  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.AboutShowController.about', args=[]}
2025-06-29 13:28:18.724  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : about
2025-06-29 13:28:18.815  INFO 8344 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:28:18.816 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:28:18.816 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:28:18.817 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:28:18.818 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:28:18.818 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:28:18.819 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:28:18.819 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:28:18.819 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:28:18.820 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:28:18.821 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:28:18.821 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:28:18.822 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:28:18.822  INFO 8344 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:28:28.132  INFO 8344 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/message', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.message', args=[{}, 1]}
2025-06-29 13:28:28.136 DEBUG 8344 --- [http-nio-8080-exec-4] c.s.d.M.findByParentIdNull_COUNT         : ==>  Preparing: SELECT count(0) FROM myblog.t_message c WHERE c.parent_message_id = ? 
2025-06-29 13:28:28.136 DEBUG 8344 --- [http-nio-8080-exec-4] c.s.d.M.findByParentIdNull_COUNT         : ==> Parameters: -1(Long)
2025-06-29 13:28:28.137 DEBUG 8344 --- [http-nio-8080-exec-4] c.s.d.M.findByParentIdNull_COUNT         : <==      Total: 1
2025-06-29 13:28:28.138  INFO 8344 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : message
2025-06-29 13:28:28.219  INFO 8344 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:28:28.219 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:28:28.219 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:28:28.220 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:28:28.221 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:28:28.221 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:28:28.222 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:28:28.222 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:28:28.222 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:28:28.223 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:28:28.224 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:28:28.224 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:28:28.225 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:28:28.226  INFO 8344 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:29:23.035  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/message', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.message', args=[{}, 1]}
2025-06-29 13:29:23.036 DEBUG 8344 --- [http-nio-8080-exec-3] c.s.d.M.findByParentIdNull_COUNT         : ==>  Preparing: SELECT count(0) FROM myblog.t_message c WHERE c.parent_message_id = ? 
2025-06-29 13:29:23.037 DEBUG 8344 --- [http-nio-8080-exec-3] c.s.d.M.findByParentIdNull_COUNT         : ==> Parameters: -1(Long)
2025-06-29 13:29:23.039 DEBUG 8344 --- [http-nio-8080-exec-3] c.s.d.M.findByParentIdNull_COUNT         : <==      Total: 1
2025-06-29 13:29:23.040  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : message
2025-06-29 13:29:23.111  INFO 8344 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:29:23.112 DEBUG 8344 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:29:23.112 DEBUG 8344 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:29:23.114 DEBUG 8344 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:29:23.114 DEBUG 8344 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:29:23.114 DEBUG 8344 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:29:23.116 DEBUG 8344 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:29:23.117 DEBUG 8344 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:29:23.117 DEBUG 8344 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:29:23.117 DEBUG 8344 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:29:23.118 DEBUG 8344 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:29:23.118 DEBUG 8344 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:29:23.119 DEBUG 8344 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:29:23.119  INFO 8344 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:30:00.943  INFO 8344 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/message', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.message', args=[{}, 1]}
2025-06-29 13:30:00.945 DEBUG 8344 --- [http-nio-8080-exec-7] c.s.d.M.findByParentIdNull_COUNT         : ==>  Preparing: SELECT count(0) FROM myblog.t_message c WHERE c.parent_message_id = ? 
2025-06-29 13:30:00.945 DEBUG 8344 --- [http-nio-8080-exec-7] c.s.d.M.findByParentIdNull_COUNT         : ==> Parameters: -1(Long)
2025-06-29 13:30:00.946 DEBUG 8344 --- [http-nio-8080-exec-7] c.s.d.M.findByParentIdNull_COUNT         : <==      Total: 1
2025-06-29 13:30:00.947  INFO 8344 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : message
2025-06-29 13:30:01.114  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:30:01.115 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:30:01.115 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:30:01.116 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:30:01.117 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:30:01.117 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:30:01.118 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:30:01.118 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:30:01.118 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:30:01.119 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:30:01.119 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:30:01.119 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:30:01.120 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:30:01.120  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:30:15.960  INFO 8344 --- [http-nio-8080-exec-7] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2025-06-29 13:30:15.961  INFO 8344 --- [http-nio-8080-exec-7] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2025-06-29 13:30:16.051 ERROR 8344 --- [http-nio-8080-exec-7] c.s.hander.ControllerExceptionHandler    : Requst URL : http://localhost:8080/message，Exception : {}

org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1/<unresolved>:6379
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1199) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getConnection(LettuceConnectionFactory.java:1178) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getSharedConnection(LettuceConnectionFactory.java:942) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory.getConnection(LettuceConnectionFactory.java:353) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.RedisConnectionUtils.doGetConnection(RedisConnectionUtils.java:134) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:97) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.RedisConnectionUtils.getConnection(RedisConnectionUtils.java:84) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:215) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:188) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.AbstractOperations.execute(AbstractOperations.java:96) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.core.DefaultValueOperations.get(DefaultValueOperations.java:53) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at com.star.aspect.SessionInterceptor.preHandle(SessionInterceptor.java:48) ~[classes/:na]
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
>>>>>>> 061b4ebfa035e46571fa162f1dfef2e805979582
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
<<<<<<< HEAD
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
### Cause: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.4.jar:3.5.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.4.jar:2.0.4]
	... 85 common frames omitted
Caused by: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.github.pagehelper.page.PageAutoDialect.getUrl(PageAutoDialect.java:180) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.page.PageAutoDialect.getDialect(PageAutoDialect.java:203) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.page.PageAutoDialect.initDelegateDialect(PageAutoDialect.java:99) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.PageHelper.skip(PageHelper.java:66) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:93) ~[pagehelper-5.1.10.jar:na]
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.5.4.jar:3.5.4]
	at jdk.proxy2/jdk.proxy2.$Proxy136.query(Unknown Source) ~[na:na]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.4.jar:3.5.4]
	... 89 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:354) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:554) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-3.4.2.jar:na]
	at com.github.pagehelper.page.PageAutoDialect.getUrl(PageAutoDialect.java:177) ~[pagehelper-5.1.10.jar:na]
	... 96 common frames omitted

2025-06-30 09:27:22.809  WARN 15940 --- [http-nio-80-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
### Cause: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed]
2025-06-30 09:27:25.971  INFO 15940 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-30 09:27:25.973  INFO 15940 --- [http-nio-80-exec-10] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-30 09:27:27.004 ERROR 15940 --- [http-nio-80-exec-10] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Exception during pool initialization.

java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:354) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:554) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-3.4.2.jar:na]
	at com.github.pagehelper.page.PageAutoDialect.getUrl(PageAutoDialect.java:177) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.page.PageAutoDialect.getDialect(PageAutoDialect.java:203) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.page.PageAutoDialect.initDelegateDialect(PageAutoDialect.java:99) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.PageHelper.skip(PageHelper.java:66) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:93) ~[pagehelper-5.1.10.jar:na]
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.5.4.jar:3.5.4]
	at jdk.proxy2/jdk.proxy2.$Proxy136.query(Unknown Source) ~[na:na]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.4.jar:3.5.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at jdk.proxy2/jdk.proxy2.$Proxy91.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85) ~[mybatis-3.5.4.jar:3.5.4]
	at jdk.proxy3/jdk.proxy3.$Proxy99.getFirstPageBlog(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at jdk.proxy3/jdk.proxy3.$Proxy100.getFirstPageBlog(Unknown Source) ~[na:na]
	at com.star.service.Impl.BlogServiceImpl.getAllFirstPageBlog(BlogServiceImpl.java:77) ~[classes/:na]
	at com.star.controller.IndexController.index(IndexController.java:39) ~[classes/:na]
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$7acbc171.index(<generated>) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-30 09:27:27.007 ERROR 15940 --- [http-nio-80-exec-10] c.s.hander.ControllerExceptionHandler    : Requst URL : http://127.0.0.1/，Exception : {}

org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
### Cause: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:92) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at jdk.proxy2/jdk.proxy2.$Proxy91.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:223) ~[mybatis-spring-2.0.4.jar:2.0.4]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:147) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:80) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:144) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85) ~[mybatis-3.5.4.jar:3.5.4]
	at jdk.proxy3/jdk.proxy3.$Proxy99.getFirstPageBlog(Unknown Source) ~[na:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139) ~[spring-tx-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at jdk.proxy3/jdk.proxy3.$Proxy100.getFirstPageBlog(Unknown Source) ~[na:na]
	at com.star.service.Impl.BlogServiceImpl.getAllFirstPageBlog(BlogServiceImpl.java:77) ~[classes/:na]
	at com.star.controller.IndexController.index(IndexController.java:39) ~[classes/:na]
	at com.star.controller.IndexController$$FastClassBySpringCGLIB$$4b929c4b.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218) ~[spring-core-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689) ~[spring-aop-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at com.star.controller.IndexController$$EnhancerBySpringCGLIB$$7acbc171.index(<generated>) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:879) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883) ~[spring-webmvc-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53) ~[tomcat-embed-websocket-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119) ~[spring-web-5.2.4.RELEASE.jar:5.2.4.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1639) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[na:na]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-9.0.31.jar:9.0.31]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
### Cause: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:149) ~[mybatis-3.5.4.jar:3.5.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140) ~[mybatis-3.5.4.jar:3.5.4]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426) ~[mybatis-spring-2.0.4.jar:2.0.4]
	... 85 common frames omitted
Caused by: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.github.pagehelper.page.PageAutoDialect.getUrl(PageAutoDialect.java:180) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.page.PageAutoDialect.getDialect(PageAutoDialect.java:203) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.page.PageAutoDialect.initDelegateDialect(PageAutoDialect.java:99) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.PageHelper.skip(PageHelper.java:66) ~[pagehelper-5.1.10.jar:na]
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:93) ~[pagehelper-5.1.10.jar:na]
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.5.4.jar:3.5.4]
	at jdk.proxy2/jdk.proxy2.$Proxy136.query(Unknown Source) ~[na:na]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147) ~[mybatis-3.5.4.jar:3.5.4]
	... 89 common frames omitted
Caused by: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:110) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:836) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:456) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:197) ~[mysql-connector-java-8.0.19.jar:8.0.19]
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:354) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:202) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:473) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:554) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:115) ~[HikariCP-3.4.2.jar:na]
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:112) ~[HikariCP-3.4.2.jar:na]
	at com.github.pagehelper.page.PageAutoDialect.getUrl(PageAutoDialect.java:177) ~[pagehelper-5.1.10.jar:na]
	... 96 common frames omitted

2025-06-30 09:27:27.008  WARN 15940 --- [http-nio-80-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed
### Cause: com.github.pagehelper.PageException: java.sql.SQLNonTransientConnectionException: Public Key Retrieval is not allowed]
2025-06-30 09:28:20.813  INFO 20776 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 20776 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-30 09:28:20.815 DEBUG 20776 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-30 09:28:20.815  INFO 20776 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-30 09:28:20.848  INFO 20776 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-30 09:28:20.849  INFO 20776 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-30 09:28:21.314  INFO 20776 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-30 09:28:21.315  INFO 20776 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 09:28:21.333  INFO 20776 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2025-06-30 09:28:21.614  INFO 20776 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$f6ddd998] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-30 09:28:21.836  INFO 20776 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-30 09:28:21.841  INFO 20776 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-30 09:28:21.841  INFO 20776 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-30 09:28:21.891  INFO 20776 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-30 09:28:21.891  INFO 20776 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1042 ms
2025-06-30 09:28:22.676  INFO 20776 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-30 09:28:22.739  INFO 20776 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-30 09:28:23.079  INFO 20776 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-30 09:28:23.131  INFO 20776 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-30 09:28:23.133  INFO 20776 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.555 seconds (JVM running for 3.063)
2025-06-30 09:28:28.334  INFO 20776 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-30 09:28:28.335  INFO 20776 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-30 09:28:28.342  INFO 20776 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-06-30 09:28:28.363  INFO 20776 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-30 09:28:28.375  INFO 20776 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-30 09:28:28.469  INFO 20776 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-30 09:28:28.501 DEBUG 20776 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-30 09:28:28.515 DEBUG 20776 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-30 09:28:28.546 DEBUG 20776 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-30 09:28:28.548 DEBUG 20776 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-30 09:28:28.548 DEBUG 20776 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-30 09:28:28.553 DEBUG 20776 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-30 09:28:28.554 DEBUG 20776 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-30 09:28:28.555 DEBUG 20776 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-30 09:28:28.562 DEBUG 20776 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-30 09:28:28.563  INFO 20776 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-30 09:28:29.002  INFO 20776 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:28:29.003 DEBUG 20776 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:28:29.003 DEBUG 20776 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:28:29.005 DEBUG 20776 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:28:29.006 DEBUG 20776 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:28:29.006 DEBUG 20776 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:28:29.007 DEBUG 20776 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:28:29.008 DEBUG 20776 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:28:29.008 DEBUG 20776 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:28:29.010 DEBUG 20776 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:28:29.010 DEBUG 20776 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:28:29.011 DEBUG 20776 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:28:29.015 DEBUG 20776 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:28:29.015  INFO 20776 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:28:31.857  INFO 20776 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/music', ip='127.0.0.1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-30 09:28:31.860  INFO 20776 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : music
2025-06-30 09:33:36.111  INFO 4176 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 4176 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-30 09:33:36.114 DEBUG 4176 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-30 09:33:36.114  INFO 4176 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-30 09:33:36.155  INFO 4176 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-30 09:33:36.156  INFO 4176 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-30 09:33:36.704  INFO 4176 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-30 09:33:36.706  INFO 4176 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 09:33:36.724  INFO 4176 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2025-06-30 09:33:37.045  INFO 4176 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$eba771c7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-30 09:33:37.300  INFO 4176 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-30 09:33:37.306  INFO 4176 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-30 09:33:37.306  INFO 4176 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-30 09:33:37.367  INFO 4176 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-30 09:33:37.367  INFO 4176 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1211 ms
2025-06-30 09:33:38.253  INFO 4176 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-30 09:33:38.331  INFO 4176 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-30 09:33:38.720  INFO 4176 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-30 09:33:38.772  INFO 4176 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-30 09:33:38.774  INFO 4176 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.946 seconds (JVM running for 3.594)
2025-06-30 09:34:08.908  INFO 4176 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-30 09:34:08.909  INFO 4176 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-30 09:34:08.923  INFO 4176 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2025-06-30 09:34:08.961  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-30 09:34:08.984  INFO 4176 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-30 09:34:09.132  INFO 4176 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-30 09:34:09.183 DEBUG 4176 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-30 09:34:09.208 DEBUG 4176 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-30 09:34:09.235 DEBUG 4176 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-30 09:34:09.237 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-30 09:34:09.237 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-30 09:34:09.255 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-30 09:34:09.256 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-30 09:34:09.256 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-30 09:34:09.263 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-30 09:34:09.265  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-30 09:34:09.900  INFO 4176 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:34:09.912 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:34:09.913 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:34:09.915 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:34:09.917 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:34:09.918 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:34:09.920 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:34:09.921 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:34:09.921 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:34:09.925 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:34:09.927 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:34:09.927 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:34:09.929 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:34:09.930  INFO 4176 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:34:11.521  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/music', ip='127.0.0.1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-30 09:34:11.525  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : music
2025-06-30 09:49:28.521  INFO 4176 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-30 09:49:28.732 DEBUG 4176 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-30 09:49:28.732 DEBUG 4176 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-30 09:49:28.754 DEBUG 4176 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-30 09:49:28.756 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-30 09:49:28.756 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-30 09:49:28.758 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-30 09:49:28.759 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-30 09:49:28.759 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-30 09:49:28.762 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-30 09:49:28.762  INFO 4176 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index
2025-06-30 09:49:29.098  INFO 4176 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:49:29.098 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:49:29.099 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:49:29.111 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:49:29.112 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:49:29.113 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:49:29.115 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:49:29.115 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:49:29.116 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:49:29.118 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:49:29.119 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:49:29.120 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:49:29.123 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:49:29.123  INFO 4176 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:52:06.694  INFO 4176 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/blog/94', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-30 09:52:06.745 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-30 09:52:06.747 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-30 09:52:06.772 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-30 09:52:06.811 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-30 09:52:06.811 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-30 09:52:06.820 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-30 09:52:06.821 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-30 09:52:06.821 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-30 09:52:06.824 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-30 09:52:06.825  INFO 4176 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : blog
2025-06-30 09:52:07.390  INFO 4176 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:52:07.391 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:52:07.392 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:52:07.392 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:52:07.393 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:52:07.393 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:52:07.394 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:52:07.394 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:52:07.394 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:52:07.395 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:52:07.396 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:52:07.396 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:52:07.399 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:52:07.400  INFO 4176 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:52:07.462  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/comments/94', ip='127.0.0.1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-30 09:52:07.468 DEBUG 4176 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-30 09:52:07.469 DEBUG 4176 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-30 09:52:07.496 DEBUG 4176 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 1
2025-06-30 09:52:07.497 DEBUG 4176 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-30 09:52:07.497 DEBUG 4176 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 94(Long), 2193(Long)
2025-06-30 09:52:07.715 DEBUG 4176 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2025-06-30 09:52:07.716  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-30 09:52:18.447 DEBUG 4176 --- [http-nio-80-exec-7] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2025-06-30 09:52:18.448 DEBUG 4176 --- [http-nio-80-exec-7] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: 123456(String), e10adc3949ba59abbe56e057f20f883e(String)
2025-06-30 09:52:18.450 DEBUG 4176 --- [http-nio-80-exec-7] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2025-06-30 09:52:18.600  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:52:18.601 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:52:18.601 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:52:18.602 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:52:18.603 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:52:18.603 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:52:18.604 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:52:18.605 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:52:18.605 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:52:18.607 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:52:18.608 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:52:18.608 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:52:18.609 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:52:18.610  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:52:21.364 DEBUG 4176 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-30 09:52:21.364 DEBUG 4176 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-30 09:52:21.365 DEBUG 4176 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-30 09:52:21.367 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-30 09:52:21.368 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-30 09:52:21.370 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-30 09:52:21.378 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 09:52:21.378 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 09:52:21.380 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 09:52:21.498  INFO 4176 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:52:21.499 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:52:21.500 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:52:21.510 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:52:21.510 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:52:21.510 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:52:21.511 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:52:21.511 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:52:21.511 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:52:21.513 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:52:21.513 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:52:21.513 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:52:21.514 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:52:21.515  INFO 4176 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:52:23.223 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-30 09:52:23.223 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-30 09:52:23.225 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-30 09:52:23.227 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 09:52:23.227 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 09:52:23.227 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 09:52:23.315  INFO 4176 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:52:23.316 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:52:23.316 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:52:23.317 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:52:23.317 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:52:23.318 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:52:23.318 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:52:23.319 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:52:23.319 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:52:23.320 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:52:23.320 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:52:23.320 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:52:23.322 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:52:23.322  INFO 4176 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:55:06.991  WARN 4176 --- [http-nio-80-exec-9] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-30 09:55:07.041 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-30 09:55:07.046 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
=======
Caused by: io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1/<unresolved>:6379
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:78) ~[lettuce-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at io.lettuce.core.RedisConnectionException.create(RedisConnectionException.java:56) ~[lettuce-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at io.lettuce.core.AbstractRedisClient.getConnection(AbstractRedisClient.java:234) ~[lettuce-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at io.lettuce.core.RedisClient.connect(RedisClient.java:207) ~[lettuce-core-5.2.2.RELEASE.jar:5.2.2.RELEASE]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.lambda$getConnection$1(StandaloneConnectionProvider.java:115) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at java.base/java.util.Optional.orElseGet(Optional.java:364) ~[na:na]
	at org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider.getConnection(StandaloneConnectionProvider.java:115) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	at org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection.getNativeConnection(LettuceConnectionFactory.java:1197) ~[spring-data-redis-2.2.5.RELEASE.jar:2.2.5.RELEASE]
	... 52 common frames omitted
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: /127.0.0.1:6379
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[na:na]
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973) ~[na:na]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:330) ~[netty-transport-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:334) ~[netty-transport-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:702) ~[netty-transport-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650) ~[netty-transport-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576) ~[netty-transport-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) ~[netty-transport-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) ~[netty-common-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.45.Final.jar:4.1.45.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.45.Final.jar:4.1.45.Final]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-06-29 13:30:16.053  WARN 8344 --- [http-nio-8080-exec-7] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to 127.0.0.1/<unresolved>:6379]
2025-06-29 13:30:18.223  INFO 8344 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 13:30:18.225 DEBUG 8344 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 13:30:18.225 DEBUG 8344 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 13:30:18.226 DEBUG 8344 --- [http-nio-8080-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 13:30:18.227 DEBUG 8344 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 13:30:18.227 DEBUG 8344 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 13:30:18.228 DEBUG 8344 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 13:30:18.229 DEBUG 8344 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 13:30:18.229 DEBUG 8344 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 13:30:18.231 DEBUG 8344 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getNewComment       : <==      Total: 0
2025-06-29 13:30:18.231  INFO 8344 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index
2025-06-29 13:30:18.326  INFO 8344 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:30:18.326 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:30:18.326 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:30:18.327 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:30:18.328 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:30:18.329 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:30:18.330 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:30:18.332 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:30:18.332 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:30:18.333 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:30:18.334 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:30:18.334 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:30:18.335 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:30:18.335  INFO 8344 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:30:49.323  INFO 8344 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.AboutShowController.about', args=[]}
2025-06-29 13:30:49.323  INFO 8344 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : about
2025-06-29 13:30:49.408  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:30:49.409 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:30:49.409 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:30:49.410 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:30:49.410 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:30:49.410 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:30:49.411 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:30:49.412 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:30:49.412 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:30:49.413 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:30:49.413 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:30:49.413 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:30:49.414 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:30:49.415  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:30:59.765  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2025-06-29 13:30:59.767 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 13:30:59.767 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 13:30:59.768 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 13:30:59.769 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 13:30:59.769 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 13:30:59.770 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 13:30:59.770  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : types
2025-06-29 13:30:59.857  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:30:59.857 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:30:59.858 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:30:59.858 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:30:59.859 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:30:59.859 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:30:59.860 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:30:59.860 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:30:59.860 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:30:59.861 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:30:59.862 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:30:59.862 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:30:59.863 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:30:59.863  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:31:01.601  INFO 8344 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 13:31:01.602 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 13:31:01.602 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 13:31:01.603 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 13:31:01.604 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 13:31:01.605 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 13:31:01.605 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 13:31:01.605  INFO 8344 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : types
2025-06-29 13:31:01.697  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:31:01.698 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:31:01.698 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:31:01.699 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:31:01.700 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:31:01.700 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:31:01.701 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:31:01.701 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:31:01.701 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:31:01.702 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:31:01.702 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:31:01.702 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:31:01.703 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:31:01.703  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:31:06.268  INFO 8344 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/43', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 43, {}]}
2025-06-29 13:31:06.269 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 13:31:06.269 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 13:31:06.271 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 13:31:06.272 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 13:31:06.272 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 13:31:06.273 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 13:31:06.273  INFO 8344 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : types
2025-06-29 13:31:06.357  INFO 8344 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:31:06.357 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:31:06.357 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:31:06.358 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:31:06.358 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:31:06.358 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:31:06.360 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:31:06.360 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:31:06.361 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:31:06.361 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:31:06.362 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:31:06.363 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:31:06.364 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:31:06.364  INFO 8344 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:31:07.662  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 13:31:07.663 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 13:31:07.664 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 13:31:07.665 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 13:31:07.667 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 13:31:07.667 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 13:31:07.669 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 13:31:07.669  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : types
2025-06-29 13:31:07.752  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:31:07.753 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:31:07.753 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:31:07.754 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:31:07.754 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:31:07.754 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:31:07.755 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:31:07.756 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:31:07.756 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:31:07.756 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:31:07.756 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:31:07.757 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:31:07.757 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:31:07.757  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:31:13.239  INFO 8344 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 13:31:13.241 DEBUG 8344 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getDetailedBlog_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_user u, myblog.t_type t WHERE b.user_id = u.id AND b.type_id = t.id AND b.id = ? 
2025-06-29 13:31:13.242 DEBUG 8344 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getDetailedBlog_COUNT    : ==> Parameters: 94(Long)
2025-06-29 13:31:13.243 DEBUG 8344 --- [http-nio-8080-exec-8] c.s.dao.BlogDao.getDetailedBlog_COUNT    : <==      Total: 1
2025-06-29 13:31:13.243 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? LIMIT ? 
2025-06-29 13:31:13.244 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long), 10000(Integer)
2025-06-29 13:31:13.246 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 13:31:13.253 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 13:31:13.253 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 13:31:13.256 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 13:31:13.256 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:31:13.256 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:31:13.257 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:31:13.258  INFO 8344 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : blog
2025-06-29 13:31:13.613  INFO 8344 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:31:13.613 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:31:13.614 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:31:13.614 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:31:13.615 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:31:13.615 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:31:13.615 DEBUG 8344 --- [http-nio-8080-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:31:13.615 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:31:13.615 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:31:13.616 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:31:13.616 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:31:13.616 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:31:13.617 DEBUG 8344 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:31:13.617  INFO 8344 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:31:13.677  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 13:31:13.678 DEBUG 8344 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:31:13.678 DEBUG 8344 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:31:13.679 DEBUG 8344 --- [http-nio-8080-exec-10] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 13:31:13.679  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:35:01.123 DEBUG 8344 --- [http-nio-8080-exec-7] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2025-06-29 13:35:01.125 DEBUG 8344 --- [http-nio-8080-exec-7] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: 123456(String), e10adc3949ba59abbe56e057f20f883e(String)
2025-06-29 13:35:01.128 DEBUG 8344 --- [http-nio-8080-exec-7] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2025-06-29 13:35:01.224  INFO 8344 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:35:01.225 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 13:35:01.225 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 13:35:01.226 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 13:35:01.227 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 13:35:01.227 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 13:35:01.227 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:35:01.228 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:35:01.228 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:35:01.229 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:35:01.230 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:35:01.230 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:35:01.231 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:35:01.231 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:35:01.231 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:35:01.232 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:35:01.232  INFO 8344 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:35:03.291 DEBUG 8344 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 13:35:03.291 DEBUG 8344 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 13:35:03.292 DEBUG 8344 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 13:35:03.294 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 13:35:03.294 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 13:35:03.296 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 13:35:03.298 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:35:03.298 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:35:03.299 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:35:03.369  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:35:03.369 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:35:03.369 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:35:03.370 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:35:03.371 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:35:03.371 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:35:03.372 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:35:03.373 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:35:03.373 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:35:03.373 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:35:03.374 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:35:03.374 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:35:03.375 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:35:03.375  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:35:05.855 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 13:35:05.855 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 13:35:05.861 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 13:35:05.863 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:35:05.863 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:35:05.864 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:35:05.953  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:35:05.953 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:35:05.954 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:35:05.954 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:35:05.955 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:35:05.955 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:35:05.955 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:35:05.956 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:35:05.956 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:35:05.956 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:35:05.957 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:35:05.957 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:35:05.957 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:35:05.957  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:36:23.348  WARN 8344 --- [http-nio-8080-exec-10] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 13:36:23.371 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 13:36:23.375 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码
（将`tearhackerxxxx`替换为实际仓库地址）
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置：

(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 13:36:23.37(Timestamp), 94(Long)
2025-06-29 13:36:23.379 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 13:36:23.399 DEBUG 8344 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 13:36:23.399 DEBUG 8344 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 13:36:23.400 DEBUG 8344 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 13:36:23.400 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 13:36:23.400 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 13:36:23.401 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 13:36:23.402 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:36:23.402 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:36:23.402 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:36:23.480  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:36:23.480 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:36:23.480 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:36:23.481 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:36:23.481 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:36:23.481 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:36:23.481 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:36:23.482 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:36:23.482 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:36:23.483 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:36:23.483 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:36:23.483 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:36:23.484 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:36:23.484  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:36:26.931  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 13:36:26.932 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 13:36:26.932 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 13:36:26.934 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 13:36:26.939 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 13:36:26.940 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 13:36:26.942 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 13:36:26.943 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:36:26.943 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:36:26.944 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:36:26.944  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog
2025-06-29 13:36:27.286  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:36:27.287 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:36:27.287 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:36:27.287 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:36:27.287 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:36:27.288 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:36:27.288 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:36:27.288 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:36:27.288 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:36:27.289 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:36:27.289 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:36:27.289 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:36:27.290 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:36:27.290  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:36:27.336  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 13:36:27.337 DEBUG 8344 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:36:27.337 DEBUG 8344 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:36:27.338 DEBUG 8344 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 13:36:27.339  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:36:36.970 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 13:36:36.970 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 13:36:36.973 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 13:36:36.974 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:36:36.974 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:36:36.974 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:36:37.062  INFO 8344 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:36:37.063 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:36:37.064 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:36:37.065 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:36:37.066 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:36:37.066 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:36:37.067 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:36:37.067 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:36:37.067 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:36:37.068 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:36:37.068 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:36:37.068 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:36:37.069 DEBUG 8344 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:36:37.069  INFO 8344 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:37:43.404  WARN 8344 --- [http-nio-8080-exec-1] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 13:37:43.405 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 13:37:43.407 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码(可能需要科学魔法上网)
git clone https://github.com/tearhacker/myblog.git
（将`tearhackerxxxx`替换为实际仓库地址）
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置
   - 修改redis配置
   - 修改其他配置

(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 13:37:43.405(Timestamp), 94(Long)
2025-06-29 13:37:43.410 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 13:37:43.419 DEBUG 8344 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 13:37:43.419 DEBUG 8344 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 13:37:43.420 DEBUG 8344 --- [http-nio-8080-exec-6] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 13:37:43.421 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 13:37:43.421 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 13:37:43.422 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 13:37:43.424 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:37:43.424 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:37:43.424 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:37:43.507  INFO 8344 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:37:43.508 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:37:43.508 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:37:43.508 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:37:43.509 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:37:43.509 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:37:43.509 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:37:43.509 DEBUG 8344 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:37:43.509 DEBUG 8344 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:37:43.510 DEBUG 8344 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:37:43.510 DEBUG 8344 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:37:43.510 DEBUG 8344 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:37:43.511 DEBUG 8344 --- [http-nio-8080-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:37:43.511  INFO 8344 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:37:46.259  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 13:37:46.260 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 13:37:46.260 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 13:37:46.261 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 13:37:46.266 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 13:37:46.266 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 13:37:46.269 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 13:37:46.269 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:37:46.270 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:37:46.270 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:37:46.270  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog
2025-06-29 13:37:46.569  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:37:46.570 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 13:37:46.570 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 13:37:46.571 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 13:37:46.571 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 13:37:46.571 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 13:37:46.572 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:37:46.572 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:37:46.572 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:37:46.573 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:37:46.573 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:37:46.573 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:37:46.573 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:37:46.574 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:37:46.574 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:37:46.574 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:37:46.574  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:37:46.615  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 13:37:46.616 DEBUG 8344 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:37:46.616 DEBUG 8344 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:37:46.616 DEBUG 8344 --- [http-nio-8080-exec-5] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 13:37:46.617  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:38:00.784 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 13:38:00.784 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 13:38:00.785 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 13:38:00.785 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:38:00.785 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:38:00.786 DEBUG 8344 --- [http-nio-8080-exec-6] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:38:00.868  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:38:00.869 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:38:00.869 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:38:00.870 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:38:00.870 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:38:00.870 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:38:00.870 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:38:00.871 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:38:00.871 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:38:00.871 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:38:00.872 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:38:00.872 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:38:00.872 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:38:00.872  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:39:03.020  WARN 8344 --- [http-nio-8080-exec-4] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 13:39:03.025 DEBUG 8344 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 13:39:03.027 DEBUG 8344 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码(可能需要科学魔法上网)
git clone https://github.com/tearhacker/myblog.git
（将`tearhackerxxxx`替换为实际仓库地址）
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置
   - 修改redis配置
   - 修改其他配置
   
---
### 4. 启动应用
1. 找到主启动类：
   - 通常位于 `src/main/java/com/example/myblog/MyBlogApplication.java`
2. 运行启动类：
   - 右键选择「Run MyBlogApplication」
   - 或通过Maven命令：
3. 验证启动：
   - 控制台输出 `Started MyBlogApplication in X.XXX seconds` 
   - 访问 `http://localhost:8080`（端口以实际配置为准）
---
## 常见问题
1. **数据库连接失败**
   - 检查yml配置中的用户名/密码
   - 确认MySQL服务已启动
2. **端口冲突**
   - 在application.yml中修改`server.port`
3. **依赖下载缓慢**
   - 更换Maven镜像源至阿里云


(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 13:39:03.025(Timestamp), 94(Long)
2025-06-29 13:39:03.030 DEBUG 8344 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 13:39:03.039 DEBUG 8344 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 13:39:03.040 DEBUG 8344 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 13:39:03.040 DEBUG 8344 --- [http-nio-8080-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 13:39:03.042 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 13:39:03.042 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 13:39:03.044 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 13:39:03.044 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:39:03.044 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:39:03.045 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:39:03.125  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:39:03.125 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:39:03.125 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:39:03.125 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:39:03.126 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:39:03.126 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:39:03.126 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:39:03.127 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:39:03.127 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:39:03.127 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:39:03.128 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:39:03.128 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:39:03.128 DEBUG 8344 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:39:03.129  INFO 8344 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:39:06.384  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 13:39:06.385 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 13:39:06.385 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 13:39:06.386 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 13:39:06.390 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 13:39:06.390 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 13:39:06.392 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 13:39:06.393 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:39:06.393 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:39:06.393 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:39:06.394  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : blog
2025-06-29 13:39:06.580  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:39:06.581 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:39:06.581 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:39:06.583 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:39:06.583 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:39:06.583 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:39:06.584 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:39:06.584 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:39:06.584 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:39:06.585 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:39:06.585 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:39:06.585 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:39:06.585 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:39:06.586  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:39:06.658  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 13:39:06.658 DEBUG 8344 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:39:06.658 DEBUG 8344 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:39:06.659 DEBUG 8344 --- [http-nio-8080-exec-9] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 13:39:06.660  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:39:14.346 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 13:39:14.346 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 13:39:14.347 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 13:39:14.349 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:39:14.349 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:39:14.350 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:39:14.427  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:39:14.428 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:39:14.428 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:39:14.428 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:39:14.429 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:39:14.429 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:39:14.430 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:39:14.430 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:39:14.431 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:39:14.431 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:39:14.432 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:39:14.432 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:39:14.432 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:39:14.432  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:40:18.302  WARN 8344 --- [http-nio-8080-exec-3] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 13:40:18.304 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 13:40:18.305 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码(可能需要科学魔法上网)
git clone https://github.com/tearhacker/myblog.git
（将`tearhackerxxxx`替换为实际仓库地址）
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置
   - 修改redis配置
   - 修改其他配置
   
---
### 4. 启动应用
1. 找到主启动类：
   - 通常位于 `src/main/java/com/example/myblog/MyBlogApplication.java`
2. 运行启动类：
   - 右键选择「Run MyBlogApplication」
   - 或通过Maven命令：
3. 验证启动：
   - 控制台输出 `Started MyBlogApplication in X.XXX seconds` 
   - 访问 `http://localhost:8080`（端口以实际配置为准）
---
## 常见问题
1. **数据库连接失败**
   - 检查yml配置中的用户名/密码
   - 确认MySQL服务已启动
2. **端口冲突**
   - 在application.yml中修改`server.port`
3. **依赖下载缓慢**
   - 更换Maven镜像源至阿里云
4. **新人求帮助**
   - 请联系泪心(有偿服务)


(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 13:40:18.303(Timestamp), 94(Long)
2025-06-29 13:40:18.308 DEBUG 8344 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 13:40:18.316 DEBUG 8344 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 13:40:18.317 DEBUG 8344 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 13:40:18.317 DEBUG 8344 --- [http-nio-8080-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 13:40:18.318 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 13:40:18.318 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 13:40:18.319 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 13:40:18.320 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:40:18.320 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:40:18.320 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:40:18.402  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:40:18.402 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:40:18.403 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:40:18.403 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:40:18.403 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:40:18.404 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:40:18.404 DEBUG 8344 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:40:18.405 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:40:18.405 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:40:18.405 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:40:18.405 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:40:18.406 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:40:18.406 DEBUG 8344 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:40:18.406  INFO 8344 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:40:22.246  INFO 8344 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 13:40:22.246 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 13:40:22.247 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 13:40:22.248 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 13:40:22.251 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 13:40:22.251 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 13:40:22.253 DEBUG 8344 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 13:40:22.253 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:40:22.254 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:40:22.254 DEBUG 8344 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:40:22.254  INFO 8344 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : blog
2025-06-29 13:40:22.522  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:40:22.524 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:40:22.524 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:40:22.524 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:40:22.524 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:40:22.524 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:40:22.524 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:40:22.526 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:40:22.526 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:40:22.526 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:40:22.527 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:40:22.527 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:40:22.527 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:40:22.528  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:40:22.573  INFO 8344 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 13:40:22.573 DEBUG 8344 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:40:22.574 DEBUG 8344 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:40:22.574 DEBUG 8344 --- [http-nio-8080-exec-7] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 13:40:22.574  INFO 8344 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:40:32.109 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 13:40:32.109 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 13:40:32.110 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 13:40:32.111 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:40:32.111 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:40:32.112 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:40:32.192  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:40:32.193 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:40:32.193 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:40:32.193 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:40:32.193 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:40:32.194 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:40:32.194 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:40:32.194 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:40:32.194 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:40:32.195 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:40:32.195 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:40:32.196 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:40:32.196 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:40:32.197  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:40:50.420  WARN 8344 --- [http-nio-8080-exec-7] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 13:40:50.421 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 13:40:50.423 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](http://localhost:8080/images/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码(可能需要科学魔法上网)
git clone https://github.com/tearhacker/myblog.git
（将`tearhackerxxxx`替换为实际仓库地址）
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置
   - 修改redis配置
   - 修改其他配置
   
---
### 4. 启动应用
1. 找到主启动类：
   - 通常位于 `src/main/java/com/example/myblog/MyBlogApplication.java`
2. 运行启动类：
   - 右键选择「Run MyBlogApplication」
   - 或通过Maven命令：
3. 验证启动：
   - 控制台输出 `Started MyBlogApplication in X.XXX seconds` 
   - 访问 `http://localhost:8080`（端口以实际配置为准）
---
## 常见问题
1. **数据库连接失败**
   - 检查yml配置中的用户名/密码
   - 确认MySQL服务已启动
2. **端口冲突**
   - 在application.yml中修改`server.port`
3. **依赖下载缓慢**
   - 更换Maven镜像源至阿里云
4. **新人求助**
   - 提供一切帮助,请联系泪心(有偿服务)


(String), 44(Long), http://localhost:8080/images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 13:40:50.421(Timestamp), 94(Long)
2025-06-29 13:40:50.426 DEBUG 8344 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 13:40:50.435 DEBUG 8344 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 13:40:50.435 DEBUG 8344 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 13:40:50.436 DEBUG 8344 --- [http-nio-8080-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 13:40:50.437 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 13:40:50.437 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 13:40:50.438 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 13:40:50.438 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 13:40:50.438 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 13:40:50.439 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 13:40:50.514  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:40:50.514 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:40:50.514 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:40:50.515 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:40:50.515 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:40:50.515 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:40:50.515 DEBUG 8344 --- [http-nio-8080-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:40:50.516 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:40:50.516 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:40:50.516 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:40:50.516 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:40:50.516 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:40:50.517 DEBUG 8344 --- [http-nio-8080-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:40:50.517  INFO 8344 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:40:51.774  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 13:40:51.775 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 13:40:51.775 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 13:40:51.776 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 13:40:51.778 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 13:40:51.778 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 13:40:51.781 DEBUG 8344 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 13:40:51.782 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:40:51.782 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:40:51.783 DEBUG 8344 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:40:51.783  INFO 8344 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : blog
2025-06-29 13:40:52.042  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:40:52.042 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:40:52.043 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:40:52.043 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:40:52.044 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:40:52.044 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:40:52.044 DEBUG 8344 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:40:52.045 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:40:52.045 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:40:52.045 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:40:52.045 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:40:52.045 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:40:52.045 DEBUG 8344 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:40:52.046  INFO 8344 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:40:52.093  INFO 8344 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 13:40:52.093 DEBUG 8344 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:40:52.093 DEBUG 8344 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:40:52.094 DEBUG 8344 --- [http-nio-8080-exec-4] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 13:40:52.094  INFO 8344 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:41:40.442  INFO 21392 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 21392 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 13:41:40.444 DEBUG 21392 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 13:41:40.444  INFO 21392 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 13:41:40.476  INFO 21392 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 13:41:40.476  INFO 21392 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 13:41:40.912  INFO 21392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 13:41:40.913  INFO 21392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 13:41:40.934  INFO 21392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2025-06-29 13:41:41.224  INFO 21392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$aa85865d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 13:41:41.452  INFO 21392 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2025-06-29 13:41:41.458  INFO 21392 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 13:41:41.458  INFO 21392 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 13:41:41.507  INFO 21392 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 13:41:41.508  INFO 21392 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1032 ms
2025-06-29 13:41:42.278  INFO 21392 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 13:41:42.346  INFO 21392 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 13:41:42.690  INFO 21392 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 13:41:42.740  INFO 21392 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2025-06-29 13:41:42.742  INFO 21392 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.533 seconds (JVM running for 3.115)
2025-06-29 13:42:57.581  INFO 21392 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 13:42:57.581  INFO 21392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 13:42:57.587  INFO 21392 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2025-06-29 13:42:57.611  INFO 21392 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 13:42:57.625  INFO 21392 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 13:42:57.704  INFO 21392 --- [http-nio-8080-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 13:42:57.711 DEBUG 21392 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 13:42:57.726 DEBUG 21392 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 13:42:57.745 DEBUG 21392 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 13:42:57.782 DEBUG 21392 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 13:42:57.783 DEBUG 21392 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 13:42:57.790 DEBUG 21392 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 13:42:57.791 DEBUG 21392 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:42:57.791 DEBUG 21392 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:42:57.792 DEBUG 21392 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:42:57.793  INFO 21392 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : blog
2025-06-29 13:42:58.150  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:42:58.151 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:42:58.151 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:42:58.154 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:42:58.155 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:42:58.155 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:42:58.156 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:42:58.156 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:42:58.156 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:42:58.157 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:42:58.158 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:42:58.158 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:42:58.160 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:42:58.160  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:42:58.207  INFO 21392 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 13:42:58.211 DEBUG 21392 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:42:58.211 DEBUG 21392 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:42:58.213 DEBUG 21392 --- [http-nio-8080-exec-3] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 13:42:58.213  INFO 21392 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:43:39.139  INFO 21392 --- [http-nio-8080-exec-8] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2025-06-29 13:43:39.140  INFO 21392 --- [http-nio-8080-exec-8] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2025-06-29 13:43:39.307  INFO 21392 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/comments', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.post', args=[Comment{id=null, nickname='泪心', email='2254013571@qq.com', content='部分功能可能无效，这是预算问题，没有额外资金支持子功能如邮箱服务或redis缓存支持等等。', avatar='null', createTime=null, blogId=94, parentCommentId=null, adminComment=false, replyComments=[], parentComment=Comment{id=-1, nickname='null', email='null', content='null', avatar='null', createTime=null, blogId=null, parentCommentId=null, adminComment=false, replyComments=[], parentComment=null, parentNickname='null'}, parentNickname='null'}, org.apache.catalina.session.StandardSessionFacade@3eec86bd, {comment=Comment{id=null, nickname='泪心', email='2254013571@qq.com', content='部分功能可能无效，这是预算问题，没有额外资金支持子功能如邮箱服务或redis缓存支持等等。', avatar='null', createTime=null, blogId=94, parentCommentId=null, adminComment=false, replyComments=[], parentComment=Comment{id=-1, nickname='null', email='null', content='null', avatar='null', createTime=null, blogId=null, parentCommentId=null, adminComment=false, replyComments=[], parentComment=null, parentNickname='null'}, parentNickname='null'}, org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}]}
2025-06-29 13:43:39.308 DEBUG 21392 --- [http-nio-8080-exec-8] c.s.dao.CommentDao.getEmailByParentId    : ==>  Preparing: select * from myblog.t_comment c where c.id = ? order by c.create_time desc 
2025-06-29 13:43:39.308 DEBUG 21392 --- [http-nio-8080-exec-8] c.s.dao.CommentDao.getEmailByParentId    : ==> Parameters: -1(Long)
2025-06-29 13:43:39.309 DEBUG 21392 --- [http-nio-8080-exec-8] c.s.dao.CommentDao.getEmailByParentId    : <==      Total: 0
2025-06-29 13:43:39.310 DEBUG 21392 --- [http-nio-8080-exec-8] com.star.dao.CommentDao.saveComment      : ==>  Preparing: insert into myblog.t_comment (nickname,email,content,avatar,create_time,blog_id,parent_comment_id,admin_comment) values (?,?,?,?,?,?,?,?); 
2025-06-29 13:43:39.314 DEBUG 21392 --- [http-nio-8080-exec-8] com.star.dao.CommentDao.saveComment      : ==> Parameters: 泪心(String), 2254013571@qq.com(String), 部分功能可能无效，这是预算问题，没有额外资金支持子功能如邮箱服务或redis缓存支持等等。(String), /images/avatar.png(String), 2025-06-29 13:43:39.31(Timestamp), 94(Long), -1(Long), false(Boolean)
2025-06-29 13:43:39.321 DEBUG 21392 --- [http-nio-8080-exec-8] com.star.dao.CommentDao.saveComment      : <==    Updates: 1
2025-06-29 13:43:39.322 DEBUG 21392 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 13:43:39.322 DEBUG 21392 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 13:43:39.326 DEBUG 21392 --- [http-nio-8080-exec-8] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 13:43:39.327 DEBUG 21392 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:43:39.327 DEBUG 21392 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 13:43:39.330 DEBUG 21392 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 1
2025-06-29 13:43:39.330 DEBUG 21392 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 13:43:39.331 DEBUG 21392 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 94(Long), 2193(Long)
2025-06-29 13:43:39.332 DEBUG 21392 --- [http-nio-8080-exec-8] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2025-06-29 13:43:39.332  INFO 21392 --- [http-nio-8080-exec-8] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 13:43:53.038  INFO 21392 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/friends', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.FriendsShowController.friends', args=[{}]}
2025-06-29 13:43:53.048 DEBUG 21392 --- [http-nio-8080-exec-7] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time asc 
2025-06-29 13:43:53.049 DEBUG 21392 --- [http-nio-8080-exec-7] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 
2025-06-29 13:43:53.050 DEBUG 21392 --- [http-nio-8080-exec-7] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 0
2025-06-29 13:43:53.069  INFO 21392 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : friends
2025-06-29 13:43:53.172  INFO 21392 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:43:53.172 DEBUG 21392 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:43:53.172 DEBUG 21392 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:43:53.173 DEBUG 21392 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:43:53.174 DEBUG 21392 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:43:53.175 DEBUG 21392 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:43:53.176 DEBUG 21392 --- [http-nio-8080-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:43:53.176 DEBUG 21392 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:43:53.177 DEBUG 21392 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:43:53.179 DEBUG 21392 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:43:53.179 DEBUG 21392 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:43:53.180 DEBUG 21392 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:43:53.180 DEBUG 21392 --- [http-nio-8080-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:43:53.181  INFO 21392 --- [http-nio-8080-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:43:55.306  INFO 21392 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/picture', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.PictureShowController.friends', args=[{}]}
2025-06-29 13:43:55.312 DEBUG 21392 --- [http-nio-8080-exec-7] com.star.dao.PictureDao.listPicture      : ==>  Preparing: select * from myblog.t_picture order by t_picture.id desc 
2025-06-29 13:43:55.313 DEBUG 21392 --- [http-nio-8080-exec-7] com.star.dao.PictureDao.listPicture      : ==> Parameters: 
2025-06-29 13:43:55.314 DEBUG 21392 --- [http-nio-8080-exec-7] com.star.dao.PictureDao.listPicture      : <==      Total: 0
2025-06-29 13:43:55.315  INFO 21392 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : picture
2025-06-29 13:43:55.407  INFO 21392 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:43:55.407 DEBUG 21392 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:43:55.408 DEBUG 21392 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:43:55.409 DEBUG 21392 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:43:55.409 DEBUG 21392 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:43:55.410 DEBUG 21392 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:43:55.411 DEBUG 21392 --- [http-nio-8080-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:43:55.411 DEBUG 21392 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:43:55.411 DEBUG 21392 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:43:55.412 DEBUG 21392 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:43:55.413 DEBUG 21392 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:43:55.413 DEBUG 21392 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:43:55.414 DEBUG 21392 --- [http-nio-8080-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:43:55.414  INFO 21392 --- [http-nio-8080-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:43:59.764  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/resources', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.ResourceShowController.resources', args=[{}]}
2025-06-29 13:43:59.773 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.ResourceDao.getStudyResource  : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-29 13:43:59.773 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.ResourceDao.getStudyResource  : ==> Parameters: 学习资源(String)
2025-06-29 13:43:59.774 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.ResourceDao.getStudyResource  : <==      Total: 0
2025-06-29 13:43:59.777 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.ResourceDao.getPictureResource   : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-29 13:43:59.777 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.ResourceDao.getPictureResource   : ==> Parameters: 图片资源(String)
2025-06-29 13:43:59.778 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.ResourceDao.getPictureResource   : <==      Total: 0
2025-06-29 13:43:59.782 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.ResourceDao.getOfficeResource    : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-29 13:43:59.782 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.ResourceDao.getOfficeResource    : ==> Parameters: 办公资源(String)
2025-06-29 13:43:59.783 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.ResourceDao.getOfficeResource    : <==      Total: 0
2025-06-29 13:43:59.785 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.ResourceDao.getRecreationResource  : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-29 13:43:59.785 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.ResourceDao.getRecreationResource  : ==> Parameters: 娱乐资源(String)
2025-06-29 13:43:59.785 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.ResourceDao.getRecreationResource  : <==      Total: 0
2025-06-29 13:43:59.787 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.ResourceDao.getDesignResource    : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-29 13:43:59.788 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.ResourceDao.getDesignResource    : ==> Parameters: 设计资源(String)
2025-06-29 13:43:59.788 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.ResourceDao.getDesignResource    : <==      Total: 0
2025-06-29 13:43:59.790 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.ResourceDao.getSearchResource    : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-29 13:43:59.791 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.ResourceDao.getSearchResource    : ==> Parameters: 搜索资源(String)
2025-06-29 13:43:59.791 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.ResourceDao.getSearchResource    : <==      Total: 0
2025-06-29 13:43:59.793 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.ResourceDao.getToolResource   : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-29 13:43:59.793 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.ResourceDao.getToolResource   : ==> Parameters: 工具资源(String)
2025-06-29 13:43:59.794 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.ResourceDao.getToolResource   : <==      Total: 0
2025-06-29 13:43:59.795 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.ResourceDao.getStudyResourceTotle  : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:43:59.795 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.ResourceDao.getStudyResourceTotle  : ==> Parameters: 学习资源(String)
2025-06-29 13:43:59.796 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.ResourceDao.getStudyResourceTotle  : <==      Total: 1
2025-06-29 13:43:59.797 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getPictureResourceTotle          : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:43:59.797 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getPictureResourceTotle          : ==> Parameters: 图片资源(String)
2025-06-29 13:43:59.798 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getPictureResourceTotle          : <==      Total: 1
2025-06-29 13:43:59.799 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getOfficeResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:43:59.799 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getOfficeResourceTotle           : ==> Parameters: 办公资源(String)
2025-06-29 13:43:59.799 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getOfficeResourceTotle           : <==      Total: 1
2025-06-29 13:43:59.800 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getRecreationResourceTotle       : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:43:59.800 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getRecreationResourceTotle       : ==> Parameters: 娱乐资源(String)
2025-06-29 13:43:59.801 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getRecreationResourceTotle       : <==      Total: 1
2025-06-29 13:43:59.801 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getDesignResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:43:59.801 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getDesignResourceTotle           : ==> Parameters: 设计资源(String)
2025-06-29 13:43:59.802 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getDesignResourceTotle           : <==      Total: 1
2025-06-29 13:43:59.803 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getSearchResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:43:59.803 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getSearchResourceTotle           : ==> Parameters: 搜索资源(String)
2025-06-29 13:43:59.804 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.R.getSearchResourceTotle           : <==      Total: 1
2025-06-29 13:43:59.804 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.ResourceDao.getToolResourceTotle   : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:43:59.804 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.ResourceDao.getToolResourceTotle   : ==> Parameters: 工具资源(String)
2025-06-29 13:43:59.805 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.ResourceDao.getToolResourceTotle   : <==      Total: 1
2025-06-29 13:43:59.805  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : resources
2025-06-29 13:43:59.907  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:43:59.907 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:43:59.907 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:43:59.908 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:43:59.909 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:43:59.909 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:43:59.910 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:43:59.910 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:43:59.910 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:43:59.911 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:43:59.912 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:43:59.912 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:43:59.913 DEBUG 21392 --- [http-nio-8080-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:43:59.914  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:44:00.836  INFO 21392 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.AboutShowController.about', args=[]}
2025-06-29 13:44:00.838  INFO 21392 --- [http-nio-8080-exec-9] com.star.aspect.LogAspect                : Result : about
2025-06-29 13:44:00.929  INFO 21392 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:44:00.933 DEBUG 21392 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:44:00.933 DEBUG 21392 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:44:00.934 DEBUG 21392 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:44:00.935 DEBUG 21392 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:44:00.935 DEBUG 21392 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:44:00.936 DEBUG 21392 --- [http-nio-8080-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:44:00.937 DEBUG 21392 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:44:00.938 DEBUG 21392 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:44:00.939 DEBUG 21392 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:44:00.940 DEBUG 21392 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:44:00.940 DEBUG 21392 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:44:00.941 DEBUG 21392 --- [http-nio-8080-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:44:00.941  INFO 21392 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:44:02.438  INFO 21392 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/resources', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.ResourceShowController.resources', args=[{}]}
2025-06-29 13:44:02.445 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.ResourceDao.getStudyResourceTotle  : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:44:02.445 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.ResourceDao.getStudyResourceTotle  : ==> Parameters: 学习资源(String)
2025-06-29 13:44:02.446 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.ResourceDao.getStudyResourceTotle  : <==      Total: 1
2025-06-29 13:44:02.447 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getPictureResourceTotle          : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:44:02.447 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getPictureResourceTotle          : ==> Parameters: 图片资源(String)
2025-06-29 13:44:02.448 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getPictureResourceTotle          : <==      Total: 1
2025-06-29 13:44:02.448 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getOfficeResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:44:02.448 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getOfficeResourceTotle           : ==> Parameters: 办公资源(String)
2025-06-29 13:44:02.449 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getOfficeResourceTotle           : <==      Total: 1
2025-06-29 13:44:02.449 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getRecreationResourceTotle       : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:44:02.450 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getRecreationResourceTotle       : ==> Parameters: 娱乐资源(String)
2025-06-29 13:44:02.450 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getRecreationResourceTotle       : <==      Total: 1
2025-06-29 13:44:02.451 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getDesignResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:44:02.451 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getDesignResourceTotle           : ==> Parameters: 设计资源(String)
2025-06-29 13:44:02.451 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getDesignResourceTotle           : <==      Total: 1
2025-06-29 13:44:02.452 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getSearchResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:44:02.452 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getSearchResourceTotle           : ==> Parameters: 搜索资源(String)
2025-06-29 13:44:02.453 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.R.getSearchResourceTotle           : <==      Total: 1
2025-06-29 13:44:02.453 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.ResourceDao.getToolResourceTotle   : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-29 13:44:02.454 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.ResourceDao.getToolResourceTotle   : ==> Parameters: 工具资源(String)
2025-06-29 13:44:02.454 DEBUG 21392 --- [http-nio-8080-exec-7] c.s.d.ResourceDao.getToolResourceTotle   : <==      Total: 1
2025-06-29 13:44:02.454  INFO 21392 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : resources
2025-06-29 13:44:02.541  INFO 21392 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:44:02.541 DEBUG 21392 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:44:02.541 DEBUG 21392 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:44:02.542 DEBUG 21392 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:44:02.542 DEBUG 21392 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:44:02.542 DEBUG 21392 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:44:02.543 DEBUG 21392 --- [http-nio-8080-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:44:02.544 DEBUG 21392 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:44:02.544 DEBUG 21392 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:44:02.545 DEBUG 21392 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:44:02.546 DEBUG 21392 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:44:02.546 DEBUG 21392 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:44:02.547 DEBUG 21392 --- [http-nio-8080-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:44:02.547  INFO 21392 --- [http-nio-8080-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:44:11.935  INFO 21392 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/about', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.AboutShowController.about', args=[]}
2025-06-29 13:44:11.935  INFO 21392 --- [http-nio-8080-exec-6] com.star.aspect.LogAspect                : Result : about
2025-06-29 13:44:12.015  INFO 21392 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:44:12.016 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:44:12.016 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:44:12.017 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:44:12.018 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:44:12.018 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:44:12.019 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:44:12.019 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:44:12.020 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:44:12.022 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:44:12.022 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:44:12.023 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:44:12.024 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:44:12.024  INFO 21392 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:44:13.074  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/friends', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.FriendsShowController.friends', args=[{}]}
2025-06-29 13:44:13.075  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : friends
2025-06-29 13:44:13.149  INFO 21392 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:44:13.150 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:44:13.150 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:44:13.151 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:44:13.151 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:44:13.151 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:44:13.152 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:44:13.152 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:44:13.152 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:44:13.154 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:44:13.154 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:44:13.154 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:44:13.155 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:44:13.155  INFO 21392 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:44:13.761  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/message', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.message', args=[{}, 1]}
2025-06-29 13:44:13.787 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.M.findByParentIdNull_COUNT         : ==>  Preparing: SELECT count(0) FROM myblog.t_message c WHERE c.parent_message_id = ? 
2025-06-29 13:44:13.787 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.M.findByParentIdNull_COUNT         : ==> Parameters: -1(Long)
2025-06-29 13:44:13.789 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.M.findByParentIdNull_COUNT         : <==      Total: 1
2025-06-29 13:44:13.790  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : message
2025-06-29 13:44:13.865  INFO 21392 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:44:13.866 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:44:13.866 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:44:13.867 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:44:13.867 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:44:13.868 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:44:13.868 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:44:13.869 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:44:13.869 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:44:13.870 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:44:13.871 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:44:13.871 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:44:13.872 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:44:13.872  INFO 21392 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:44:15.078  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/music', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 13:44:15.080  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : music
2025-06-29 13:44:15.917  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/message', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.message', args=[{}, 1]}
2025-06-29 13:44:15.919 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.M.findByParentIdNull_COUNT         : ==>  Preparing: SELECT count(0) FROM myblog.t_message c WHERE c.parent_message_id = ? 
2025-06-29 13:44:15.919 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.M.findByParentIdNull_COUNT         : ==> Parameters: -1(Long)
2025-06-29 13:44:15.920 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.M.findByParentIdNull_COUNT         : <==      Total: 1
2025-06-29 13:44:15.920  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : message
2025-06-29 13:44:16.061  INFO 21392 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:44:16.062 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:44:16.062 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:44:16.063 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:44:16.064 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:44:16.064 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:44:16.065 DEBUG 21392 --- [http-nio-8080-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:44:16.066 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:44:16.066 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:44:16.068 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:44:16.068 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:44:16.068 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:44:16.069 DEBUG 21392 --- [http-nio-8080-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:44:16.070  INFO 21392 --- [http-nio-8080-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:45:12.432  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/message', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MessageController.post', args=[Message{id=null, nickname='泪心', email='2254013571@qq.com', content='曾深深痴迷不愿睡醒的梦,怎就突然一朝醒来了？', avatar='null', createTime=null, parentMessageId=null, adminMessage=false, replyMessages=[], parentMessage=Message{id=-1, nickname='null', email='null', content='null', avatar='null', createTime=null, parentMessageId=null, adminMessage=false, replyMessages=[], parentMessage=null, parentNickname='null', parentEmail='null'}, parentNickname='null', parentEmail='null'}, org.apache.catalina.session.StandardSessionFacade@3eec86bd, {message=Message{id=null, nickname='泪心', email='2254013571@qq.com', content='曾深深痴迷不愿睡醒的梦,怎就突然一朝醒来了？', avatar='null', createTime=null, parentMessageId=null, adminMessage=false, replyMessages=[], parentMessage=Message{id=-1, nickname='null', email='null', content='null', avatar='null', createTime=null, parentMessageId=null, adminMessage=false, replyMessages=[], parentMessage=null, parentNickname='null', parentEmail='null'}, parentNickname='null', parentEmail='null'}, org.springframework.validation.BindingResult.message=org.springframework.validation.BeanPropertyBindingResult: 0 errors}, 1]}
2025-06-29 13:45:12.433 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.MessageDao.getEmailByParentId    : ==>  Preparing: select * from myblog.t_message c where c.id = ? order by c.create_time desc 
2025-06-29 13:45:12.433 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.MessageDao.getEmailByParentId    : ==> Parameters: -1(Long)
2025-06-29 13:45:12.434 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.MessageDao.getEmailByParentId    : <==      Total: 0
2025-06-29 13:45:12.434 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.MessageDao.saveMessage      : ==>  Preparing: insert ignore into myblog.t_message (nickname,email,content,avatar,create_time,parent_message_id,admin_message,parent_email) values (?,?,?,?,?,?,?,?); 
2025-06-29 13:45:12.436 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.MessageDao.saveMessage      : ==> Parameters: 泪心(String), 2254013571@qq.com(String), 曾深深痴迷不愿睡醒的梦,怎就突然一朝醒来了？(String), /images/avatar.png(String), 2025-06-29 13:45:12.434(Timestamp), -1(Long), false(Boolean), null
2025-06-29 13:45:12.448 DEBUG 21392 --- [http-nio-8080-exec-2] com.star.dao.MessageDao.saveMessage      : <==    Updates: 1
2025-06-29 13:45:12.449 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.M.findByParentIdNull_COUNT         : ==>  Preparing: SELECT count(0) FROM myblog.t_message c WHERE c.parent_message_id = ? 
2025-06-29 13:45:12.449 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.M.findByParentIdNull_COUNT         : ==> Parameters: -1(Long)
2025-06-29 13:45:12.450 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.M.findByParentIdNull_COUNT         : <==      Total: 1
2025-06-29 13:45:12.452 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.MessageDao.findByParentIdNull    : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc LIMIT ? 
2025-06-29 13:45:12.452 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.MessageDao.findByParentIdNull    : ==> Parameters: -1(Long), 15(Integer)
2025-06-29 13:45:12.454 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.dao.MessageDao.findByParentIdNull    : <==      Total: 1
2025-06-29 13:45:12.454 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.MessageDao.findByParentIdNotNull   : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc 
2025-06-29 13:45:12.455 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.MessageDao.findByParentIdNotNull   : ==> Parameters: 8132(Long)
2025-06-29 13:45:12.455 DEBUG 21392 --- [http-nio-8080-exec-2] c.s.d.MessageDao.findByParentIdNotNull   : <==      Total: 0
2025-06-29 13:45:12.456  INFO 21392 --- [http-nio-8080-exec-2] com.star.aspect.LogAspect                : Result : message
2025-06-29 13:45:12.512  INFO 21392 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 13:45:12.512 DEBUG 21392 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 13:45:12.512 DEBUG 21392 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 13:45:12.513 DEBUG 21392 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 13:45:12.513 DEBUG 21392 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 13:45:12.513 DEBUG 21392 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 13:45:12.514 DEBUG 21392 --- [http-nio-8080-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 13:45:12.514 DEBUG 21392 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 13:45:12.514 DEBUG 21392 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 13:45:12.516 DEBUG 21392 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 13:45:12.516 DEBUG 21392 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 13:45:12.517 DEBUG 21392 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 13:45:12.518 DEBUG 21392 --- [http-nio-8080-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 13:45:12.518  INFO 21392 --- [http-nio-8080-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 13:45:22.111  INFO 21392 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost:8080/music', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 13:45:22.111  INFO 21392 --- [http-nio-8080-exec-5] com.star.aspect.LogAspect                : Result : music
2025-06-29 17:04:35.166  INFO 16856 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 16856 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 17:04:35.168 DEBUG 16856 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 17:04:35.168  INFO 16856 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 17:04:35.205  INFO 16856 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 17:04:35.205  INFO 16856 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 17:04:35.738  INFO 16856 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 17:04:35.741  INFO 16856 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 17:04:35.768  INFO 16856 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2025-06-29 17:04:36.099  INFO 16856 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$1d8a7d1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 17:04:36.361  INFO 16856 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 17:04:36.370  INFO 16856 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 17:04:36.370  INFO 16856 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 17:04:36.428  INFO 16856 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 17:04:36.429  INFO 16856 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1224 ms
2025-06-29 17:04:37.324  INFO 16856 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 17:04:37.395  INFO 16856 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 17:04:37.770  INFO 16856 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 17:04:37.827  INFO 16856 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 17:04:37.828  INFO 16856 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.94 seconds (JVM running for 3.528)
2025-06-29 17:06:22.109  INFO 16856 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 17:06:22.109  INFO 16856 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 17:06:22.118  INFO 16856 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 9 ms
2025-06-29 17:06:22.153  INFO 16856 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 17:06:22.172  INFO 16856 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 17:06:22.291  INFO 16856 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 17:06:22.332 DEBUG 16856 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 17:06:22.353 DEBUG 16856 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 17:06:22.378 DEBUG 16856 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 17:06:22.380 DEBUG 16856 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 17:06:22.381 DEBUG 16856 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 17:06:22.385 DEBUG 16856 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 17:06:22.385 DEBUG 16856 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 17:06:22.386 DEBUG 16856 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 17:06:22.388 DEBUG 16856 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 17:06:22.389  INFO 16856 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 17:06:22.830  INFO 16856 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 17:06:22.831 DEBUG 16856 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 17:06:22.832 DEBUG 16856 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 17:06:22.834 DEBUG 16856 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 17:06:22.834 DEBUG 16856 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 17:06:22.835 DEBUG 16856 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 17:06:22.836 DEBUG 16856 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 17:06:22.836 DEBUG 16856 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 17:06:22.836 DEBUG 16856 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 17:06:22.838 DEBUG 16856 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 17:06:22.839 DEBUG 16856 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 17:06:22.839 DEBUG 16856 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 17:06:22.841 DEBUG 16856 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 17:06:22.842  INFO 16856 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 17:06:25.975  INFO 16856 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 17:06:25.978 DEBUG 16856 --- [http-nio-80-exec-2] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 17:06:25.978 DEBUG 16856 --- [http-nio-80-exec-2] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 17:06:25.979 DEBUG 16856 --- [http-nio-80-exec-2] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 17:06:25.979 DEBUG 16856 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 17:06:25.980 DEBUG 16856 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 17:06:25.981 DEBUG 16856 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 17:06:25.982 DEBUG 16856 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 17:06:25.982 DEBUG 16856 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 17:06:25.983 DEBUG 16856 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 17:06:25.983  INFO 16856 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : index
2025-06-29 17:06:26.528  INFO 16856 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 17:06:26.529 DEBUG 16856 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 17:06:26.530 DEBUG 16856 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 17:06:26.531 DEBUG 16856 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 17:06:26.532 DEBUG 16856 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 17:06:26.532 DEBUG 16856 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 17:06:26.533 DEBUG 16856 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 17:06:26.534 DEBUG 16856 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 17:06:26.534 DEBUG 16856 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 17:06:26.535 DEBUG 16856 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 17:06:26.536 DEBUG 16856 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 17:06:26.536 DEBUG 16856 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 17:06:26.538 DEBUG 16856 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 17:06:26.539  INFO 16856 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 17:06:33.958 DEBUG 16856 --- [http-nio-80-exec-1] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2025-06-29 17:06:33.960 DEBUG 16856 --- [http-nio-80-exec-1] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: 123456(String), e10adc3949ba59abbe56e057f20f883e(String)
2025-06-29 17:06:33.962 DEBUG 16856 --- [http-nio-80-exec-1] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2025-06-29 17:06:34.083  INFO 16856 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 17:06:34.083 DEBUG 16856 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 17:06:34.084 DEBUG 16856 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 17:06:34.085 DEBUG 16856 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 17:06:34.086 DEBUG 16856 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 17:06:34.086 DEBUG 16856 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 17:06:34.087 DEBUG 16856 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 17:06:34.087 DEBUG 16856 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 17:06:34.087 DEBUG 16856 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 17:06:34.089 DEBUG 16856 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 17:06:34.090 DEBUG 16856 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 17:06:34.090 DEBUG 16856 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 17:06:34.092 DEBUG 16856 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 17:06:34.093  INFO 16856 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 17:49:01.172  INFO 7816 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 7816 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 17:49:01.173 DEBUG 7816 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 17:49:01.174  INFO 7816 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 17:49:01.204  INFO 7816 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 17:49:01.205  INFO 7816 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 17:49:01.619  INFO 7816 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 17:49:01.621  INFO 7816 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 17:49:01.642  INFO 7816 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2025-06-29 17:49:01.903  INFO 7816 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$8bf66b07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 17:49:02.113  INFO 7816 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 17:49:02.119  INFO 7816 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 17:49:02.119  INFO 7816 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 17:49:02.165  INFO 7816 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 17:49:02.166  INFO 7816 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 961 ms
2025-06-29 17:49:02.880  INFO 7816 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 17:49:02.943  INFO 7816 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 17:49:03.271  INFO 7816 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 17:49:03.317  INFO 7816 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 17:49:03.319  INFO 7816 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.372 seconds (JVM running for 2.929)
2025-06-29 17:50:21.022  INFO 7816 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 17:50:21.022  INFO 7816 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 17:50:21.029  INFO 7816 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-06-29 17:50:21.054  INFO 7816 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 17:50:21.067  INFO 7816 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 17:50:21.144  INFO 7816 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 17:50:21.175 DEBUG 7816 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 17:50:21.191 DEBUG 7816 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 17:50:21.208 DEBUG 7816 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 17:50:21.209 DEBUG 7816 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 17:50:21.209 DEBUG 7816 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 17:50:21.213 DEBUG 7816 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 17:50:21.214 DEBUG 7816 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 17:50:21.214 DEBUG 7816 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 17:50:21.215 DEBUG 7816 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 17:50:21.216  INFO 7816 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 17:50:21.549  INFO 7816 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 17:50:21.549 DEBUG 7816 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 17:50:21.550 DEBUG 7816 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 17:50:21.551 DEBUG 7816 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 17:50:21.552 DEBUG 7816 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 17:50:21.552 DEBUG 7816 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 17:50:21.553 DEBUG 7816 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 17:50:21.554 DEBUG 7816 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 17:50:21.554 DEBUG 7816 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 17:50:21.556 DEBUG 7816 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 17:50:21.557 DEBUG 7816 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 17:50:21.557 DEBUG 7816 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 17:50:21.559 DEBUG 7816 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 17:50:21.560  INFO 7816 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 17:50:23.514  INFO 7816 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost/music', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 17:50:23.516  INFO 7816 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : music
2025-06-29 17:50:45.839  INFO 23920 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 23920 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 17:50:45.841 DEBUG 23920 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 17:50:45.841  INFO 23920 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 17:50:45.872  INFO 23920 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 17:50:45.873  INFO 23920 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 17:50:46.282  INFO 23920 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 17:50:46.283  INFO 23920 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 17:50:46.305  INFO 23920 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2025-06-29 17:50:46.584  INFO 23920 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$582ce8f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 17:50:46.807  INFO 23920 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 17:50:46.813  INFO 23920 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 17:50:46.814  INFO 23920 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 17:50:46.864  INFO 23920 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 17:50:46.864  INFO 23920 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 991 ms
2025-06-29 17:50:47.596  INFO 23920 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 17:50:47.664  INFO 23920 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 17:50:47.987  INFO 23920 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 17:50:48.040  INFO 23920 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 17:50:48.043  INFO 23920 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.429 seconds (JVM running for 2.987)
2025-06-29 17:50:48.179  INFO 23920 --- [http-nio-80-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 17:50:48.179  INFO 23920 --- [http-nio-80-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 17:50:48.185  INFO 23920 --- [http-nio-80-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2025-06-29 17:50:48.201  INFO 23920 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost/music', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 17:50:48.204  INFO 23920 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : music
2025-06-29 17:55:20.577  INFO 6880 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 6880 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 17:55:20.579 DEBUG 6880 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 17:55:20.579  INFO 6880 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 17:55:20.610  INFO 6880 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 17:55:20.610  INFO 6880 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 17:55:21.020  INFO 6880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 17:55:21.021  INFO 6880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 17:55:21.041  INFO 6880 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2025-06-29 17:55:21.302  INFO 6880 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$92d72899] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 17:55:21.519  INFO 6880 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 17:55:21.524  INFO 6880 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 17:55:21.525  INFO 6880 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 17:55:21.572  INFO 6880 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 17:55:21.572  INFO 6880 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 962 ms
2025-06-29 17:55:22.292  INFO 6880 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 17:55:22.358  INFO 6880 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 17:55:22.674  INFO 6880 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 17:55:22.722  INFO 6880 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 17:55:22.724  INFO 6880 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.367 seconds (JVM running for 2.906)
2025-06-29 17:55:30.516  INFO 6880 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 17:55:30.517  INFO 6880 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 17:55:30.523  INFO 6880 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2025-06-29 17:55:30.539  INFO 6880 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost/music', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 17:55:30.542  INFO 6880 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : music
2025-06-29 17:55:41.710  INFO 6880 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost/music', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 17:55:41.711  INFO 6880 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : music
2025-06-29 17:55:43.126  INFO 6880 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost/music', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 17:55:43.126  INFO 6880 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : music
2025-06-29 17:55:54.722  INFO 6880 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost/music', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 17:55:54.722  INFO 6880 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : music
2025-06-29 18:01:48.806  INFO 13236 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 13236 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 18:01:48.807 DEBUG 13236 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 18:01:48.807  INFO 13236 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 18:01:48.838  INFO 13236 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 18:01:48.838  INFO 13236 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 18:01:49.393  INFO 13236 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 18:01:49.395  INFO 13236 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 18:01:49.420  INFO 13236 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2025-06-29 18:01:49.763  INFO 13236 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$f65c248c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 18:01:50.039  INFO 13236 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 18:01:50.045  INFO 13236 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 18:01:50.046  INFO 13236 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 18:01:50.099  INFO 13236 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 18:01:50.100  INFO 13236 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1262 ms
2025-06-29 18:01:50.862  INFO 13236 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 18:01:50.925  INFO 13236 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 18:01:51.275  INFO 13236 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 18:01:51.324  INFO 13236 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 18:01:51.326  INFO 13236 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.747 seconds (JVM running for 3.322)
2025-06-29 18:01:52.595  INFO 13236 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 18:01:52.595  INFO 13236 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 18:01:52.603  INFO 13236 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2025-06-29 18:01:52.634  INFO 13236 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 18:01:52.648  INFO 13236 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 18:01:52.732  INFO 13236 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 18:01:52.762 DEBUG 13236 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 18:01:52.777 DEBUG 13236 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 18:01:52.794 DEBUG 13236 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 18:01:52.795 DEBUG 13236 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 18:01:52.795 DEBUG 13236 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 18:01:52.799 DEBUG 13236 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 18:01:52.799 DEBUG 13236 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 18:01:52.799 DEBUG 13236 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 18:01:52.801 DEBUG 13236 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 18:01:52.802  INFO 13236 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 18:01:53.147  INFO 13236 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 18:01:53.148 DEBUG 13236 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 18:01:53.149 DEBUG 13236 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 18:01:53.150 DEBUG 13236 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 18:01:53.151 DEBUG 13236 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 18:01:53.151 DEBUG 13236 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 18:01:53.152 DEBUG 13236 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 18:01:53.153 DEBUG 13236 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 18:01:53.153 DEBUG 13236 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 18:01:53.155 DEBUG 13236 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 18:01:53.156 DEBUG 13236 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 18:01:53.156 DEBUG 13236 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 18:01:53.157 DEBUG 13236 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 18:01:53.158  INFO 13236 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 18:01:55.870  INFO 13236 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/music', ip='127.0.0.1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 18:01:55.872  INFO 13236 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : music
2025-06-29 19:25:00.054  INFO 20716 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 20716 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 19:25:00.055 DEBUG 20716 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 19:25:00.056  INFO 20716 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 19:25:00.091  INFO 20716 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 19:25:00.092  INFO 20716 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 19:25:00.613  INFO 20716 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 19:25:00.614  INFO 20716 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 19:25:00.632  INFO 20716 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2025-06-29 19:25:00.897  INFO 20716 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$639da772] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 19:25:01.121  INFO 20716 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 19:25:01.130  INFO 20716 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 19:25:01.130  INFO 20716 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 19:25:01.185  INFO 20716 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 19:25:01.186  INFO 20716 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1094 ms
2025-06-29 19:25:01.998  INFO 20716 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 19:25:02.075  INFO 20716 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 19:25:02.482  INFO 20716 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 19:25:02.536  INFO 20716 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 19:25:02.538  INFO 20716 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.72 seconds (JVM running for 3.318)
2025-06-29 19:25:03.096  INFO 20716 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 19:25:03.096  INFO 20716 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 19:25:03.108  INFO 20716 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2025-06-29 19:25:03.135  INFO 20716 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 19:25:03.151  INFO 20716 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 19:25:03.244  INFO 20716 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 19:25:03.281 DEBUG 20716 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 19:25:03.295 DEBUG 20716 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 19:25:03.316 DEBUG 20716 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 19:25:03.318 DEBUG 20716 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 19:25:03.318 DEBUG 20716 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 19:25:03.322 DEBUG 20716 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 19:25:03.323 DEBUG 20716 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 19:25:03.323 DEBUG 20716 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 19:25:03.325 DEBUG 20716 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 19:25:03.326  INFO 20716 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 19:25:03.689  INFO 20716 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 19:25:03.690 DEBUG 20716 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 19:25:03.690 DEBUG 20716 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 19:25:03.692 DEBUG 20716 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 19:25:03.693 DEBUG 20716 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 19:25:03.693 DEBUG 20716 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 19:25:03.694 DEBUG 20716 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 19:25:03.694 DEBUG 20716 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 19:25:03.695 DEBUG 20716 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 19:25:03.696 DEBUG 20716 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 19:25:03.697 DEBUG 20716 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 19:25:03.698 DEBUG 20716 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 19:25:03.699 DEBUG 20716 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 19:25:03.699  INFO 20716 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 19:25:07.418  INFO 20716 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/music', ip='127.0.0.1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 19:25:07.421  INFO 20716 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : music
2025-06-29 19:30:48.957  INFO 24092 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 24092 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 19:30:48.959 DEBUG 24092 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 19:30:48.959  INFO 24092 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 19:30:48.991  INFO 24092 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 19:30:48.992  INFO 24092 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 19:30:49.428  INFO 24092 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 19:30:49.430  INFO 24092 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 19:30:49.450  INFO 24092 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2025-06-29 19:30:49.734  INFO 24092 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$1d520477] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 19:30:49.948  INFO 24092 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 19:30:49.954  INFO 24092 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 19:30:49.954  INFO 24092 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 19:30:50.003  INFO 24092 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 19:30:50.003  INFO 24092 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1011 ms
2025-06-29 19:30:50.734  INFO 24092 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 19:30:50.799  INFO 24092 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 19:30:51.140  INFO 24092 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 19:30:51.191  INFO 24092 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 19:30:51.193  INFO 24092 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.461 seconds (JVM running for 3.009)
2025-06-29 19:31:10.625  INFO 24092 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 19:31:10.626  INFO 24092 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 19:31:10.633  INFO 24092 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-06-29 19:31:10.656  INFO 24092 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 19:31:10.669  INFO 24092 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 19:31:10.748  INFO 24092 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 19:31:10.777 DEBUG 24092 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 19:31:10.790 DEBUG 24092 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 19:31:10.805 DEBUG 24092 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 19:31:10.807 DEBUG 24092 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 19:31:10.807 DEBUG 24092 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 19:31:10.811 DEBUG 24092 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 19:31:10.811 DEBUG 24092 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 19:31:10.811 DEBUG 24092 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 19:31:10.813 DEBUG 24092 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 19:31:10.814  INFO 24092 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 19:31:11.135  INFO 24092 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 19:31:11.135 DEBUG 24092 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 19:31:11.136 DEBUG 24092 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 19:31:11.137 DEBUG 24092 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 19:31:11.138 DEBUG 24092 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 19:31:11.138 DEBUG 24092 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 19:31:11.139 DEBUG 24092 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 19:31:11.140 DEBUG 24092 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 19:31:11.140 DEBUG 24092 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 19:31:11.141 DEBUG 24092 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 19:31:11.141 DEBUG 24092 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 19:31:11.142 DEBUG 24092 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 19:31:11.143 DEBUG 24092 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 19:31:11.144  INFO 24092 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 19:31:14.226  INFO 24092 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/music', ip='127.0.0.1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 19:31:14.229  INFO 24092 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : music
2025-06-29 19:38:39.172  INFO 24196 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 24196 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 19:38:39.173 DEBUG 24196 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 19:38:39.173  INFO 24196 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 19:38:39.205  INFO 24196 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 19:38:39.205  INFO 24196 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 19:38:39.613  INFO 24196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 19:38:39.615  INFO 24196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 19:38:39.634  INFO 24196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2025-06-29 19:38:39.895  INFO 24196 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$8793610f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 19:38:40.106  INFO 24196 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 19:38:40.112  INFO 24196 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 19:38:40.112  INFO 24196 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 19:38:40.163  INFO 24196 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 19:38:40.163  INFO 24196 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 958 ms
2025-06-29 19:38:40.892  INFO 24196 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 19:38:40.958  INFO 24196 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 19:38:41.285  INFO 24196 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 19:38:41.330  INFO 24196 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 19:38:41.333  INFO 24196 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.379 seconds (JVM running for 2.929)
2025-06-29 19:38:55.060  INFO 24196 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 19:38:55.060  INFO 24196 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 19:38:55.067  INFO 24196 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-06-29 19:38:55.093  INFO 24196 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 19:38:55.105  INFO 24196 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 19:38:55.178  INFO 24196 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 19:38:55.209 DEBUG 24196 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 19:38:55.223 DEBUG 24196 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 19:38:55.242 DEBUG 24196 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 19:38:55.244 DEBUG 24196 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 19:38:55.244 DEBUG 24196 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 19:38:55.247 DEBUG 24196 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 19:38:55.248 DEBUG 24196 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 19:38:55.248 DEBUG 24196 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 19:38:55.250 DEBUG 24196 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 19:38:55.251  INFO 24196 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 19:38:55.564  INFO 24196 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 19:38:55.565 DEBUG 24196 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 19:38:55.565 DEBUG 24196 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 19:38:55.568 DEBUG 24196 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 19:38:55.568 DEBUG 24196 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 19:38:55.569 DEBUG 24196 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 19:38:55.569 DEBUG 24196 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 19:38:55.570 DEBUG 24196 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 19:38:55.570 DEBUG 24196 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 19:38:55.571 DEBUG 24196 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 19:38:55.572 DEBUG 24196 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 19:38:55.572 DEBUG 24196 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 19:38:55.573 DEBUG 24196 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 19:38:55.573  INFO 24196 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 19:38:57.565  INFO 24196 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/message', ip='127.0.0.1', classMethod='com.star.controller.MessageController.message', args=[{}, 1]}
2025-06-29 19:38:57.569 DEBUG 24196 --- [http-nio-80-exec-7] c.s.d.M.findByParentIdNull_COUNT         : ==>  Preparing: SELECT count(0) FROM myblog.t_message c WHERE c.parent_message_id = ? 
2025-06-29 19:38:57.571 DEBUG 24196 --- [http-nio-80-exec-7] c.s.d.M.findByParentIdNull_COUNT         : ==> Parameters: -1(Long)
2025-06-29 19:38:57.572 DEBUG 24196 --- [http-nio-80-exec-7] c.s.d.M.findByParentIdNull_COUNT         : <==      Total: 1
2025-06-29 19:38:57.573 DEBUG 24196 --- [http-nio-80-exec-7] c.s.dao.MessageDao.findByParentIdNull    : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc LIMIT ? 
2025-06-29 19:38:57.575 DEBUG 24196 --- [http-nio-80-exec-7] c.s.dao.MessageDao.findByParentIdNull    : ==> Parameters: -1(Long), 15(Integer)
2025-06-29 19:38:57.577 DEBUG 24196 --- [http-nio-80-exec-7] c.s.dao.MessageDao.findByParentIdNull    : <==      Total: 1
2025-06-29 19:38:57.578 DEBUG 24196 --- [http-nio-80-exec-7] c.s.d.MessageDao.findByParentIdNotNull   : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc 
2025-06-29 19:38:57.578 DEBUG 24196 --- [http-nio-80-exec-7] c.s.d.MessageDao.findByParentIdNotNull   : ==> Parameters: 8132(Long)
2025-06-29 19:38:57.579 DEBUG 24196 --- [http-nio-80-exec-7] c.s.d.MessageDao.findByParentIdNotNull   : <==      Total: 0
2025-06-29 19:38:57.580  INFO 24196 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : message
2025-06-29 19:38:57.690  INFO 24196 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 19:38:57.690 DEBUG 24196 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 19:38:57.690 DEBUG 24196 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 19:38:57.691 DEBUG 24196 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 19:38:57.692 DEBUG 24196 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 19:38:57.692 DEBUG 24196 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 19:38:57.693 DEBUG 24196 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 19:38:57.693 DEBUG 24196 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 19:38:57.693 DEBUG 24196 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 19:38:57.695 DEBUG 24196 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 19:38:57.695 DEBUG 24196 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 19:38:57.695 DEBUG 24196 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 19:38:57.697 DEBUG 24196 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 19:38:57.698  INFO 24196 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 19:39:00.013  INFO 24196 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/music', ip='127.0.0.1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 19:39:00.015  INFO 24196 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : music
2025-06-29 19:41:57.302  INFO 14984 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 14984 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 19:41:57.304 DEBUG 14984 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 19:41:57.305  INFO 14984 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 19:41:57.339  INFO 14984 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 19:41:57.339  INFO 14984 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 19:41:57.798  INFO 14984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 19:41:57.799  INFO 14984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 19:41:57.816  INFO 14984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2025-06-29 19:41:58.090  INFO 14984 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$9481deed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 19:41:58.301  INFO 14984 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 19:41:58.308  INFO 14984 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 19:41:58.308  INFO 14984 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 19:41:58.361  INFO 14984 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 19:41:58.361  INFO 14984 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1022 ms
2025-06-29 19:41:59.099  INFO 14984 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 19:41:59.162  INFO 14984 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 19:41:59.486  INFO 14984 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 19:41:59.549  INFO 14984 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 19:41:59.552  INFO 14984 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.504 seconds (JVM running for 3.111)
2025-06-29 19:42:04.109  INFO 14984 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 19:42:04.110  INFO 14984 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 19:42:04.118  INFO 14984 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2025-06-29 19:42:04.141  INFO 14984 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 19:42:04.155  INFO 14984 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 19:42:04.232  INFO 14984 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 19:42:04.265 DEBUG 14984 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 19:42:04.280 DEBUG 14984 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 19:42:04.296 DEBUG 14984 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 19:42:04.298 DEBUG 14984 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 19:42:04.298 DEBUG 14984 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 19:42:04.302 DEBUG 14984 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 19:42:04.302 DEBUG 14984 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 19:42:04.302 DEBUG 14984 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 19:42:04.304 DEBUG 14984 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 19:42:04.306  INFO 14984 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 19:42:04.656  INFO 14984 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 19:42:04.656 DEBUG 14984 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 19:42:04.657 DEBUG 14984 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 19:42:04.658 DEBUG 14984 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 19:42:04.659 DEBUG 14984 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 19:42:04.659 DEBUG 14984 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 19:42:04.660 DEBUG 14984 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 19:42:04.661 DEBUG 14984 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 19:42:04.661 DEBUG 14984 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 19:42:04.663 DEBUG 14984 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 19:42:04.663 DEBUG 14984 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 19:42:04.663 DEBUG 14984 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 19:42:04.665 DEBUG 14984 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 19:42:04.665  INFO 14984 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 19:42:06.898  INFO 14984 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/music', ip='127.0.0.1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 19:42:06.901  INFO 14984 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : music
2025-06-29 19:46:15.687  INFO 23196 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 23196 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 19:46:15.688 DEBUG 23196 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 19:46:15.689  INFO 23196 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 19:46:15.718  INFO 23196 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 19:46:15.719  INFO 23196 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 19:46:16.137  INFO 23196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 19:46:16.139  INFO 23196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 19:46:16.160  INFO 23196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2025-06-29 19:46:16.431  INFO 23196 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$92d72899] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 19:46:16.648  INFO 23196 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 19:46:16.654  INFO 23196 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 19:46:16.654  INFO 23196 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 19:46:16.703  INFO 23196 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 19:46:16.704  INFO 23196 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 985 ms
2025-06-29 19:46:17.416  INFO 23196 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 19:46:17.482  INFO 23196 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 19:46:17.815  INFO 23196 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 19:46:17.861  INFO 23196 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 19:46:17.863  INFO 23196 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.409 seconds (JVM running for 3.046)
2025-06-29 19:46:23.844  INFO 23196 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 19:46:23.845  INFO 23196 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 19:46:23.853  INFO 23196 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2025-06-29 19:46:23.877  INFO 23196 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 19:46:23.892  INFO 23196 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 19:46:23.971  INFO 23196 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 19:46:23.998 DEBUG 23196 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 19:46:24.013 DEBUG 23196 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 19:46:24.029 DEBUG 23196 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 19:46:24.031 DEBUG 23196 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 19:46:24.031 DEBUG 23196 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 19:46:24.035 DEBUG 23196 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 19:46:24.036 DEBUG 23196 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 19:46:24.036 DEBUG 23196 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 19:46:24.037 DEBUG 23196 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 19:46:24.039  INFO 23196 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 19:46:24.383  INFO 23196 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 19:46:24.384 DEBUG 23196 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 19:46:24.384 DEBUG 23196 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 19:46:24.385 DEBUG 23196 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 19:46:24.386 DEBUG 23196 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 19:46:24.386 DEBUG 23196 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 19:46:24.387 DEBUG 23196 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 19:46:24.387 DEBUG 23196 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 19:46:24.387 DEBUG 23196 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 19:46:24.389 DEBUG 23196 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 19:46:24.389 DEBUG 23196 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 19:46:24.390 DEBUG 23196 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 19:46:24.391 DEBUG 23196 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 19:46:24.391  INFO 23196 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 19:46:26.988  INFO 23196 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/music', ip='127.0.0.1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 19:46:26.991  INFO 23196 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : music
2025-06-29 19:54:18.718  INFO 12220 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 12220 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 19:54:18.720 DEBUG 12220 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 19:54:18.721  INFO 12220 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 19:54:18.839  INFO 12220 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 19:54:18.839  INFO 12220 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 19:54:19.373  INFO 12220 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 19:54:19.374  INFO 12220 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 19:54:19.394  INFO 12220 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2025-06-29 19:54:19.669  INFO 12220 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$55b3c393] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 19:54:19.883  INFO 12220 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 19:54:19.889  INFO 12220 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 19:54:19.889  INFO 12220 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 19:54:19.943  INFO 12220 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 19:54:19.944  INFO 12220 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1104 ms
2025-06-29 19:54:20.712  INFO 12220 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 19:54:20.773  INFO 12220 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 19:54:21.102  INFO 12220 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 19:54:21.150  INFO 12220 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 19:54:21.153  INFO 12220 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.781 seconds (JVM running for 4.14)
2025-06-29 20:12:42.162  INFO 26064 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 26064 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 20:12:42.164 DEBUG 26064 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 20:12:42.164  INFO 26064 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 20:12:42.194  INFO 26064 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 20:12:42.195  INFO 26064 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 20:12:42.615  INFO 26064 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 20:12:42.616  INFO 26064 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 20:12:42.633  INFO 26064 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2025-06-29 20:12:42.889  INFO 26064 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$95dd123] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 20:12:43.096  INFO 26064 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 20:12:43.102  INFO 26064 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 20:12:43.102  INFO 26064 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 20:12:43.150  INFO 26064 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 20:12:43.150  INFO 26064 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 955 ms
2025-06-29 20:12:43.867  INFO 26064 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 20:12:43.930  INFO 26064 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 20:12:44.268  INFO 26064 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 20:12:44.314  INFO 26064 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 20:12:44.316  INFO 26064 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.368 seconds (JVM running for 2.844)
2025-06-29 20:13:23.840  INFO 26064 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 20:13:23.840  INFO 26064 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 20:13:23.847  INFO 26064 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-06-29 20:13:23.871  INFO 26064 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 20:13:23.885  INFO 26064 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 20:13:23.963  INFO 26064 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 20:13:23.992 DEBUG 26064 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 20:13:24.007 DEBUG 26064 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 20:13:24.023 DEBUG 26064 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 20:13:24.024 DEBUG 26064 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 20:13:24.025 DEBUG 26064 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 20:13:24.029 DEBUG 26064 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 20:13:24.029 DEBUG 26064 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 20:13:24.030 DEBUG 26064 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 20:13:24.031 DEBUG 26064 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 20:13:24.036  INFO 26064 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 20:13:24.371  INFO 26064 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:13:24.372 DEBUG 26064 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 20:13:24.372 DEBUG 26064 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 20:13:24.374 DEBUG 26064 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:13:24.375 DEBUG 26064 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:13:24.375 DEBUG 26064 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:13:24.376 DEBUG 26064 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:13:24.377 DEBUG 26064 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:13:24.377 DEBUG 26064 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:13:24.378 DEBUG 26064 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:13:24.379 DEBUG 26064 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:13:24.379 DEBUG 26064 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:13:24.380 DEBUG 26064 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:13:24.381  INFO 26064 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:13:28.048  INFO 26064 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost/music', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 20:13:28.051  INFO 26064 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : music
2025-06-29 20:17:46.212  INFO 26448 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 26448 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 20:17:46.214 DEBUG 26448 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 20:17:46.214  INFO 26448 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 20:17:46.247  INFO 26448 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 20:17:46.247  INFO 26448 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 20:17:46.744  INFO 26448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 20:17:46.746  INFO 26448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 20:17:46.767  INFO 26448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2025-06-29 20:17:47.053  INFO 26448 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$a0dc5ecd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 20:17:47.274  INFO 26448 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 20:17:47.281  INFO 26448 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 20:17:47.281  INFO 26448 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 20:17:47.334  INFO 26448 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 20:17:47.334  INFO 26448 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1086 ms
2025-06-29 20:17:48.117  INFO 26448 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 20:17:48.189  INFO 26448 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 20:17:48.549  INFO 26448 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 20:17:48.600  INFO 26448 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 20:17:48.602  INFO 26448 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.646 seconds (JVM running for 3.161)
2025-06-29 20:17:56.990  INFO 26448 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 20:17:56.990  INFO 26448 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 20:17:56.997  INFO 26448 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-06-29 20:17:57.012  INFO 26448 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost/music', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 20:17:57.016  INFO 26448 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : music
2025-06-29 20:25:29.122  INFO 26552 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 26552 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 20:25:29.124 DEBUG 26552 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 20:25:29.124  INFO 26552 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 20:25:29.158  INFO 26552 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 20:25:29.159  INFO 26552 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 20:25:29.575  INFO 26552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 20:25:29.576  INFO 26552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 20:25:29.594  INFO 26552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 Redis repository interfaces.
2025-06-29 20:25:29.852  INFO 26552 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$fa22765e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 20:25:30.060  INFO 26552 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 20:25:30.066  INFO 26552 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 20:25:30.066  INFO 26552 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 20:25:30.113  INFO 26552 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 20:25:30.113  INFO 26552 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 954 ms
2025-06-29 20:25:30.849  INFO 26552 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 20:25:30.914  INFO 26552 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 20:25:31.239  INFO 26552 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 20:25:31.285  INFO 26552 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 20:25:31.287  INFO 26552 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.389 seconds (JVM running for 2.871)
2025-06-29 20:25:40.775  INFO 26552 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 20:25:40.776  INFO 26552 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 20:25:40.786  INFO 26552 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-06-29 20:25:40.804  INFO 26552 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost/music', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 20:25:40.808  INFO 26552 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : music
2025-06-29 20:40:06.247  INFO 5052 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 5052 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 20:40:06.249 DEBUG 5052 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 20:40:06.249  INFO 5052 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 20:40:06.279  INFO 5052 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 20:40:06.279  INFO 5052 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 20:40:06.692  INFO 5052 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 20:40:06.693  INFO 5052 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 20:40:06.712  INFO 5052 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 Redis repository interfaces.
2025-06-29 20:40:06.978  INFO 5052 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$80713e21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 20:40:07.192  INFO 5052 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 20:40:07.198  INFO 5052 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 20:40:07.198  INFO 5052 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 20:40:07.245  INFO 5052 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 20:40:07.245  INFO 5052 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 966 ms
2025-06-29 20:40:07.967  INFO 5052 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 20:40:08.029  INFO 5052 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 20:40:08.345  INFO 5052 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 20:40:08.393  INFO 5052 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 20:40:08.395  INFO 5052 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.364 seconds (JVM running for 2.836)
2025-06-29 20:40:26.060  INFO 5052 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 20:40:26.060  INFO 5052 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 20:40:26.068  INFO 5052 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2025-06-29 20:40:26.093  INFO 5052 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 20:40:26.107  INFO 5052 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 20:40:26.187  INFO 5052 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 20:40:26.218 DEBUG 5052 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 20:40:26.238 DEBUG 5052 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 20:40:26.256 DEBUG 5052 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 20:40:26.257 DEBUG 5052 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 20:40:26.258 DEBUG 5052 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 20:40:26.261 DEBUG 5052 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 20:40:26.262 DEBUG 5052 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 20:40:26.262 DEBUG 5052 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 20:40:26.264 DEBUG 5052 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 20:40:26.266  INFO 5052 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 20:40:26.609  INFO 5052 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:40:26.610 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 20:40:26.610 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 20:40:26.612 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:40:26.613 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:40:26.613 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:40:26.615 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:40:26.615 DEBUG 5052 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:40:26.615 DEBUG 5052 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:40:26.616 DEBUG 5052 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:40:26.617 DEBUG 5052 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:40:26.617 DEBUG 5052 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:40:26.618 DEBUG 5052 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:40:26.619  INFO 5052 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:40:33.131  INFO 5052 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 20:40:33.133 DEBUG 5052 --- [http-nio-80-exec-6] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 20:40:33.133 DEBUG 5052 --- [http-nio-80-exec-6] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 20:40:33.134 DEBUG 5052 --- [http-nio-80-exec-6] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 20:40:33.135 DEBUG 5052 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 20:40:33.135 DEBUG 5052 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 20:40:33.136 DEBUG 5052 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 20:40:33.137 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 20:40:33.137 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 20:40:33.139 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 20:40:33.139  INFO 5052 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : index
2025-06-29 20:40:33.297  INFO 5052 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:40:33.297 DEBUG 5052 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 20:40:33.297 DEBUG 5052 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 20:40:33.298 DEBUG 5052 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:40:33.299 DEBUG 5052 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:40:33.299 DEBUG 5052 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:40:33.300 DEBUG 5052 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:40:33.301 DEBUG 5052 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:40:33.301 DEBUG 5052 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:40:33.302 DEBUG 5052 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:40:33.303 DEBUG 5052 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:40:33.303 DEBUG 5052 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:40:33.304 DEBUG 5052 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:40:33.304  INFO 5052 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:40:37.795  INFO 5052 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/types/-1', ip='127.0.0.1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2025-06-29 20:40:37.805 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 20:40:37.805 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 20:40:37.807 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 20:40:37.809 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 20:40:37.810 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 20:40:37.813 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 20:40:37.813  INFO 5052 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : types
2025-06-29 20:40:37.932  INFO 5052 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:40:37.933 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 20:40:37.933 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 20:40:37.934 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 20:40:37.936 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 20:40:37.938 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 20:40:37.939 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:40:37.939 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:40:37.940 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:40:37.940 DEBUG 5052 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:40:37.941 DEBUG 5052 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:40:37.941 DEBUG 5052 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:40:37.942 DEBUG 5052 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:40:37.942 DEBUG 5052 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:40:37.942 DEBUG 5052 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:40:37.943 DEBUG 5052 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:40:37.943  INFO 5052 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:40:40.107  INFO 5052 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/types/44', ip='127.0.0.1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 20:40:40.108 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 20:40:40.108 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 20:40:40.110 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 20:40:40.111 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 20:40:40.111 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 20:40:40.112 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 20:40:40.113  INFO 5052 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : types
2025-06-29 20:40:40.204  INFO 5052 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:40:40.205 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 20:40:40.205 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 20:40:40.206 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 20:40:40.206 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 20:40:40.207 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 20:40:40.208 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:40:40.208 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:40:40.208 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:40:40.209 DEBUG 5052 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:40:40.209 DEBUG 5052 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:40:40.209 DEBUG 5052 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:40:40.211 DEBUG 5052 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:40:40.211 DEBUG 5052 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:40:40.211 DEBUG 5052 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:40:40.212 DEBUG 5052 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:40:40.213  INFO 5052 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:40:40.835  INFO 5052 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/types/43', ip='127.0.0.1', classMethod='com.star.controller.TypeShowController.types', args=[1, 43, {}]}
2025-06-29 20:40:40.836 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 20:40:40.836 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 20:40:40.837 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 20:40:40.838 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 20:40:40.838 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 20:40:40.839 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 20:40:40.840  INFO 5052 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : types
2025-06-29 20:40:40.914  INFO 5052 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:40:40.914 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 20:40:40.915 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 20:40:40.915 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 20:40:40.916 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 20:40:40.916 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 20:40:40.917 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:40:40.918 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:40:40.918 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:40:40.919 DEBUG 5052 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:40:40.919 DEBUG 5052 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:40:40.919 DEBUG 5052 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:40:40.921 DEBUG 5052 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:40:40.921 DEBUG 5052 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:40:40.921 DEBUG 5052 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:40:40.922 DEBUG 5052 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:40:40.923  INFO 5052 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:40:43.181  INFO 5052 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/types/44', ip='127.0.0.1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 20:40:43.182 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 20:40:43.183 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 20:40:43.184 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 20:40:43.185 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 20:40:43.185 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 20:40:43.186 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 20:40:43.186  INFO 5052 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : types
2025-06-29 20:40:43.260  INFO 5052 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:40:43.260 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 20:40:43.261 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 20:40:43.261 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 20:40:43.262 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 20:40:43.262 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 20:40:43.262 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:40:43.263 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:40:43.263 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:40:43.263 DEBUG 5052 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:40:43.264 DEBUG 5052 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:40:43.264 DEBUG 5052 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:40:43.266 DEBUG 5052 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:40:43.267 DEBUG 5052 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:40:43.267 DEBUG 5052 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:40:43.268 DEBUG 5052 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:40:43.269  INFO 5052 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:40:44.745  INFO 5052 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 20:40:44.747 DEBUG 5052 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 20:40:44.747 DEBUG 5052 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 20:40:44.748 DEBUG 5052 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 20:40:44.748 DEBUG 5052 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 20:40:44.748 DEBUG 5052 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 20:40:44.750 DEBUG 5052 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 20:40:44.750 DEBUG 5052 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 20:40:44.750 DEBUG 5052 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 20:40:44.751 DEBUG 5052 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 20:40:44.751  INFO 5052 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index
2025-06-29 20:40:44.819  INFO 5052 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:40:44.820 DEBUG 5052 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 20:40:44.820 DEBUG 5052 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 20:40:44.821 DEBUG 5052 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:40:44.821 DEBUG 5052 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:40:44.822 DEBUG 5052 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:40:44.823 DEBUG 5052 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:40:44.823 DEBUG 5052 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:40:44.824 DEBUG 5052 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:40:44.827 DEBUG 5052 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:40:44.828 DEBUG 5052 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:40:44.828 DEBUG 5052 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:40:44.829 DEBUG 5052 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:40:44.829  INFO 5052 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:40:48.317  INFO 5052 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/music', ip='127.0.0.1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-29 20:40:48.319  INFO 5052 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : music
2025-06-29 20:44:44.010  INFO 25188 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 25188 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 20:44:44.011 DEBUG 25188 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 20:44:44.012  INFO 25188 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 20:44:44.049  INFO 25188 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 20:44:44.049  INFO 25188 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 20:44:44.490  INFO 25188 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 20:44:44.491  INFO 25188 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 20:44:44.512  INFO 25188 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11ms. Found 0 Redis repository interfaces.
2025-06-29 20:44:44.802  INFO 25188 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$43c69621] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 20:44:45.057  INFO 25188 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 20:44:45.062  INFO 25188 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 20:44:45.063  INFO 25188 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 20:44:45.119  INFO 25188 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 20:44:45.120  INFO 25188 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1071 ms
2025-06-29 20:44:45.909  INFO 25188 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 20:44:45.977  INFO 25188 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 20:44:46.330  INFO 25188 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 20:44:46.386  INFO 25188 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 20:44:46.388  INFO 25188 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.641 seconds (JVM running for 3.172)
2025-06-29 20:44:59.244  INFO 25188 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 20:44:59.244  INFO 25188 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 20:44:59.253  INFO 25188 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 8 ms
2025-06-29 20:44:59.283  INFO 25188 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 20:44:59.296  INFO 25188 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 20:44:59.376  INFO 25188 --- [http-nio-80-exec-1] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 20:44:59.408 DEBUG 25188 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 20:44:59.422 DEBUG 25188 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 20:44:59.443 DEBUG 25188 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 20:44:59.444 DEBUG 25188 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 20:44:59.445 DEBUG 25188 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 20:44:59.448 DEBUG 25188 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 20:44:59.449 DEBUG 25188 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 20:44:59.449 DEBUG 25188 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 20:44:59.451 DEBUG 25188 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 20:44:59.452  INFO 25188 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index
2025-06-29 20:44:59.801  INFO 25188 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:44:59.802 DEBUG 25188 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 20:44:59.802 DEBUG 25188 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 20:44:59.804 DEBUG 25188 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:44:59.804 DEBUG 25188 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:44:59.804 DEBUG 25188 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:44:59.805 DEBUG 25188 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:44:59.806 DEBUG 25188 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:44:59.806 DEBUG 25188 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:44:59.807 DEBUG 25188 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:44:59.808 DEBUG 25188 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:44:59.808 DEBUG 25188 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:44:59.809 DEBUG 25188 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:44:59.810  INFO 25188 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:45:08.039  INFO 25188 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 20:45:08.041 DEBUG 25188 --- [http-nio-80-exec-7] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 20:45:08.042 DEBUG 25188 --- [http-nio-80-exec-7] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 20:45:08.043 DEBUG 25188 --- [http-nio-80-exec-7] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 20:45:08.043 DEBUG 25188 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 20:45:08.044 DEBUG 25188 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 20:45:08.045 DEBUG 25188 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 20:45:08.046 DEBUG 25188 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 20:45:08.046 DEBUG 25188 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 20:45:08.047 DEBUG 25188 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 20:45:08.047  INFO 25188 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : index
2025-06-29 20:45:08.132  INFO 25188 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:45:08.132 DEBUG 25188 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 20:45:08.132 DEBUG 25188 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 20:45:08.133 DEBUG 25188 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:45:08.134 DEBUG 25188 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:45:08.134 DEBUG 25188 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:45:08.135 DEBUG 25188 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:45:08.136 DEBUG 25188 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:45:08.136 DEBUG 25188 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:45:08.137 DEBUG 25188 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:45:08.138 DEBUG 25188 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:45:08.138 DEBUG 25188 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:45:08.139 DEBUG 25188 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:45:08.139  INFO 25188 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:45:32.027  INFO 25188 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 20:45:32.030 DEBUG 25188 --- [http-nio-80-exec-9] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 20:45:32.030 DEBUG 25188 --- [http-nio-80-exec-9] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 20:45:32.031 DEBUG 25188 --- [http-nio-80-exec-9] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 20:45:32.031 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 20:45:32.032 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 20:45:32.033 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 20:45:32.033 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 20:45:32.033 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 20:45:32.034 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 20:45:32.034  INFO 25188 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : index
2025-06-29 20:45:32.181  INFO 25188 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:45:32.182 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 20:45:32.182 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 20:45:32.183 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:45:32.183 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:45:32.183 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:45:32.184 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:45:32.184 DEBUG 25188 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:45:32.184 DEBUG 25188 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:45:32.185 DEBUG 25188 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:45:32.186 DEBUG 25188 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:45:32.186 DEBUG 25188 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:45:32.187 DEBUG 25188 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:45:32.187  INFO 25188 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:45:33.988  INFO 25188 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 20:45:33.990 DEBUG 25188 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 20:45:33.991 DEBUG 25188 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 20:45:33.992 DEBUG 25188 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 20:45:33.992 DEBUG 25188 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 20:45:33.992 DEBUG 25188 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 20:45:33.993 DEBUG 25188 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 20:45:33.993 DEBUG 25188 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 20:45:33.993 DEBUG 25188 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 20:45:33.995 DEBUG 25188 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 20:45:33.995  INFO 25188 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index
2025-06-29 20:45:34.065  INFO 25188 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:45:34.065 DEBUG 25188 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 20:45:34.065 DEBUG 25188 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 20:45:34.066 DEBUG 25188 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:45:34.067 DEBUG 25188 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:45:34.067 DEBUG 25188 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:45:34.068 DEBUG 25188 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:45:34.069 DEBUG 25188 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:45:34.069 DEBUG 25188 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:45:34.071 DEBUG 25188 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:45:34.072 DEBUG 25188 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:45:34.072 DEBUG 25188 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:45:34.074 DEBUG 25188 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:45:34.074  INFO 25188 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:45:41.960  INFO 25188 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost/types/-1', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2025-06-29 20:45:41.970 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 20:45:41.970 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 20:45:41.972 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 20:45:41.975 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 20:45:41.976 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-29 20:45:41.979 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 20:45:41.979  INFO 25188 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : types
2025-06-29 20:45:42.075  INFO 25188 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:45:42.076 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 20:45:42.076 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 20:45:42.077 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 20:45:42.079 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 20:45:42.080 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 20:45:42.081 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:45:42.082 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:45:42.082 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:45:42.082 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:45:42.083 DEBUG 25188 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:45:42.083 DEBUG 25188 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:45:42.084 DEBUG 25188 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:45:42.085 DEBUG 25188 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:45:42.085 DEBUG 25188 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:45:42.087 DEBUG 25188 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:45:42.088  INFO 25188 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:45:44.520  INFO 25188 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 20:45:44.521 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 20:45:44.521 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 20:45:44.522 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 20:45:44.523 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 20:45:44.523 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 20:45:44.524 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 20:45:44.524  INFO 25188 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : types
2025-06-29 20:45:44.606  INFO 25188 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:45:44.606 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-29 20:45:44.607 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-29 20:45:44.607 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-29 20:45:44.608 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-29 20:45:44.608 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-29 20:45:44.609 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:45:44.610 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:45:44.610 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:45:44.611 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:45:44.611 DEBUG 25188 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:45:44.612 DEBUG 25188 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:45:44.613 DEBUG 25188 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:45:44.613 DEBUG 25188 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:45:44.613 DEBUG 25188 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:45:44.615 DEBUG 25188 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:45:44.615  INFO 25188 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:47:56.627  INFO 25188 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost/types/44', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-29 20:47:56.628 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-29 20:47:56.628 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-29 20:47:56.630 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-29 20:47:56.630 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-29 20:47:56.631 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-29 20:47:56.632 DEBUG 25188 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-29 20:47:56.632  INFO 25188 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : types
2025-06-29 20:47:56.786  INFO 25188 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:47:56.786 DEBUG 25188 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 20:47:56.787 DEBUG 25188 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 20:47:56.787 DEBUG 25188 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:47:56.788 DEBUG 25188 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:47:56.788 DEBUG 25188 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:47:56.789 DEBUG 25188 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:47:56.789 DEBUG 25188 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:47:56.790 DEBUG 25188 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:47:56.791 DEBUG 25188 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:47:56.791 DEBUG 25188 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:47:56.793 DEBUG 25188 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:47:56.796 DEBUG 25188 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:47:56.796  INFO 25188 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:47:59.763  INFO 25188 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 20:47:59.765 DEBUG 25188 --- [http-nio-80-exec-9] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 20:47:59.766 DEBUG 25188 --- [http-nio-80-exec-9] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 20:47:59.767 DEBUG 25188 --- [http-nio-80-exec-9] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 20:47:59.767 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 20:47:59.768 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 20:47:59.769 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 20:47:59.769 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 20:47:59.769 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 20:47:59.770 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 20:47:59.770  INFO 25188 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : index
2025-06-29 20:47:59.870  INFO 25188 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:47:59.870 DEBUG 25188 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 20:47:59.871 DEBUG 25188 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 20:47:59.871 DEBUG 25188 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:47:59.872 DEBUG 25188 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:47:59.872 DEBUG 25188 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:47:59.874 DEBUG 25188 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:47:59.874 DEBUG 25188 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:47:59.874 DEBUG 25188 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:47:59.876 DEBUG 25188 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:47:59.876 DEBUG 25188 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:47:59.877 DEBUG 25188 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:47:59.878 DEBUG 25188 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:47:59.878  INFO 25188 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:48:05.132  INFO 25188 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 20:48:05.134 DEBUG 25188 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 20:48:05.134 DEBUG 25188 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 20:48:05.138 DEBUG 25188 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 20:48:05.187 DEBUG 25188 --- [http-nio-80-exec-4] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 20:48:05.187 DEBUG 25188 --- [http-nio-80-exec-4] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 20:48:05.190 DEBUG 25188 --- [http-nio-80-exec-4] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 20:48:05.191 DEBUG 25188 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 20:48:05.192 DEBUG 25188 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 20:48:05.192 DEBUG 25188 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 20:48:05.193  INFO 25188 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : blog
2025-06-29 20:48:05.581  INFO 25188 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:48:05.581 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 20:48:05.581 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 20:48:05.582 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:48:05.583 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:48:05.583 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:48:05.584 DEBUG 25188 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:48:05.585 DEBUG 25188 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:48:05.585 DEBUG 25188 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:48:05.586 DEBUG 25188 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:48:05.587 DEBUG 25188 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:48:05.587 DEBUG 25188 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:48:05.588 DEBUG 25188 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:48:05.588  INFO 25188 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:48:05.634  INFO 25188 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://localhost/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 20:48:05.640 DEBUG 25188 --- [http-nio-80-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 20:48:05.640 DEBUG 25188 --- [http-nio-80-exec-3] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 20:48:05.643 DEBUG 25188 --- [http-nio-80-exec-3] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 1
2025-06-29 20:48:05.644 DEBUG 25188 --- [http-nio-80-exec-3] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 20:48:05.644 DEBUG 25188 --- [http-nio-80-exec-3] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 94(Long), 2193(Long)
2025-06-29 20:48:05.645 DEBUG 25188 --- [http-nio-80-exec-3] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2025-06-29 20:48:05.646  INFO 25188 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 20:48:08.357  INFO 25188 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost/blog/93', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[93, {}]}
2025-06-29 20:48:08.358 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 20:48:08.358 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 93(Long)
2025-06-29 20:48:08.360 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 20:48:08.363 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 20:48:08.363 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.updateViews         : ==> Parameters: 93(Long)
2025-06-29 20:48:08.366 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 20:48:08.366 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 20:48:08.366 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 93(Long), 93(Long), 93(Long)
2025-06-29 20:48:08.367 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 20:48:08.367  INFO 25188 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : blog
2025-06-29 20:48:08.676  INFO 25188 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 20:48:08.677 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 20:48:08.677 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 20:48:08.678 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 20:48:08.678 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 20:48:08.678 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 20:48:08.679 DEBUG 25188 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 20:48:08.680 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 20:48:08.680 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 20:48:08.681 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 20:48:08.681 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 20:48:08.682 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 20:48:08.682 DEBUG 25188 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 20:48:08.682  INFO 25188 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 20:48:08.713  INFO 25188 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost/comments/93', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[93, {}]}
2025-06-29 20:48:08.713 DEBUG 25188 --- [http-nio-80-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 20:48:08.713 DEBUG 25188 --- [http-nio-80-exec-4] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 93(Long), -1(Long)
2025-06-29 20:48:08.714 DEBUG 25188 --- [http-nio-80-exec-4] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 0
2025-06-29 20:48:08.715  INFO 25188 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 21:52:41.396  INFO 26012 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 26012 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-29 21:52:41.398 DEBUG 26012 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-29 21:52:41.399  INFO 26012 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-29 21:52:41.431  INFO 26012 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-29 21:52:41.431  INFO 26012 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-29 21:52:41.912  INFO 26012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-29 21:52:41.913  INFO 26012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-29 21:52:41.935  INFO 26012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 Redis repository interfaces.
2025-06-29 21:52:42.212  INFO 26012 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$dce5046e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-29 21:52:42.444  INFO 26012 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-29 21:52:42.452  INFO 26012 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-29 21:52:42.452  INFO 26012 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-29 21:52:42.511  INFO 26012 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-29 21:52:42.512  INFO 26012 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1081 ms
2025-06-29 21:52:43.285  INFO 26012 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-29 21:52:43.345  INFO 26012 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-29 21:52:43.671  INFO 26012 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-29 21:52:43.718  INFO 26012 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-29 21:52:43.720  INFO 26012 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 2.553 seconds (JVM running for 3.055)
2025-06-29 21:53:51.678  INFO 26012 --- [http-nio-80-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-29 21:53:51.679  INFO 26012 --- [http-nio-80-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-29 21:53:51.689  INFO 26012 --- [http-nio-80-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2025-06-29 21:53:56.627  INFO 26012 --- [http-nio-80-exec-8] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-29 21:53:56.720  INFO 26012 --- [http-nio-80-exec-8] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-29 21:53:56.727 DEBUG 26012 --- [http-nio-80-exec-8] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2025-06-29 21:53:56.749 DEBUG 26012 --- [http-nio-80-exec-8] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: 123456(String), e10adc3949ba59abbe56e057f20f883e(String)
2025-06-29 21:53:56.770 DEBUG 26012 --- [http-nio-80-exec-8] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2025-06-29 21:53:56.902  INFO 26012 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 21:53:56.907 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 21:53:56.907 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 21:53:56.909 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 21:53:56.910 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 21:53:56.911 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 21:53:56.912 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 21:53:56.913 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 21:53:56.913 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 21:53:56.915 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 21:53:56.916 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 21:53:56.916 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 21:53:56.918 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 21:53:56.919  INFO 26012 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 21:55:16.161 DEBUG 26012 --- [http-nio-80-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 21:55:16.161 DEBUG 26012 --- [http-nio-80-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 21:55:16.163 DEBUG 26012 --- [http-nio-80-exec-9] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 21:55:16.165 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 21:55:16.167 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 21:55:16.170 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 21:55:16.178 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 21:55:16.178 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 21:55:16.179 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 21:55:16.288  INFO 26012 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 21:55:16.288 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 21:55:16.288 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 21:55:16.290 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 21:55:16.290 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 21:55:16.291 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 21:55:16.292 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 21:55:16.293 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 21:55:16.293 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 21:55:16.295 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 21:55:16.295 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 21:55:16.296 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 21:55:16.297 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 21:55:16.297  INFO 26012 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 21:55:18.301 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 21:55:18.302 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 21:55:18.306 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 21:55:18.307 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 21:55:18.307 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 21:55:18.308 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 21:55:18.408  INFO 26012 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 21:55:18.408 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 21:55:18.408 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 21:55:18.409 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 21:55:18.410 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 21:55:18.410 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 21:55:18.411 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 21:55:18.411 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 21:55:18.411 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 21:55:18.413 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 21:55:18.413 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 21:55:18.414 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 21:55:18.416 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 21:55:18.416  INFO 26012 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 21:57:33.298  WARN 26012 --- [http-nio-80-exec-8] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 21:57:33.325 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 21:57:33.329 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](https://gitee.com/thoughtful123/tearyoByCompanyLife/raw/master/photosuse/myblog/md5code.png)  
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码(可能需要科学魔法上网)
git clone https://github.com/tearhacker/myblog.git
（将`tearhackerxxxx`替换为实际仓库地址）
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置
   - 修改redis配置
   - 修改其他配置
   
---
### 4. 启动应用
1. 找到主启动类：
   - 通常位于 `src/main/java/com/example/myblog/MyBlogApplication.java`
2. 运行启动类：
   - 右键选择「Run MyBlogApplication」
   - 或通过Maven命令：
3. 验证启动：
   - 控制台输出 `Started MyBlogApplication in X.XXX seconds` 
   - 访问 `http://localhost:8080`（端口以实际配置为准）
---
## 常见问题
1. **数据库连接失败**
   - 检查yml配置中的用户名/密码
   - 确认MySQL服务已启动
2. **端口冲突**
   - 在application.yml中修改`server.port`
3. **依赖下载缓慢**
   - 更换Maven镜像源至阿里云
4. **新人求助**
   - 提供一切帮助,请联系泪心(有偿服务)


(String), 44(Long), /images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 21:57:33.322(Timestamp), 94(Long)
2025-06-29 21:57:33.334 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 21:57:33.355 DEBUG 26012 --- [http-nio-80-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 21:57:33.356 DEBUG 26012 --- [http-nio-80-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 21:57:33.357 DEBUG 26012 --- [http-nio-80-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 21:57:33.358 DEBUG 26012 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 21:57:33.358 DEBUG 26012 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 21:57:33.360 DEBUG 26012 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 21:57:33.362 DEBUG 26012 --- [http-nio-80-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 21:57:33.362 DEBUG 26012 --- [http-nio-80-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 21:57:33.363 DEBUG 26012 --- [http-nio-80-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 21:57:33.448  INFO 26012 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 21:57:33.448 DEBUG 26012 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 21:57:33.449 DEBUG 26012 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 21:57:33.449 DEBUG 26012 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 21:57:33.450 DEBUG 26012 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 21:57:33.451 DEBUG 26012 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 21:57:33.451 DEBUG 26012 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 21:57:33.452 DEBUG 26012 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 21:57:33.452 DEBUG 26012 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 21:57:33.454 DEBUG 26012 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 21:57:33.454 DEBUG 26012 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 21:57:33.454 DEBUG 26012 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 21:57:33.456 DEBUG 26012 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 21:57:33.456  INFO 26012 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 21:57:36.055  INFO 26012 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 21:57:36.059 DEBUG 26012 --- [http-nio-80-exec-9] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 21:57:36.059 DEBUG 26012 --- [http-nio-80-exec-9] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 21:57:36.060 DEBUG 26012 --- [http-nio-80-exec-9] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 21:57:36.060 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 21:57:36.060 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 21:57:36.062 DEBUG 26012 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 21:57:36.062 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 21:57:36.063 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 21:57:36.064 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 21:57:36.064  INFO 26012 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : index
2025-06-29 21:57:36.241  INFO 26012 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 21:57:36.242 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 21:57:36.242 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 21:57:36.244 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 21:57:36.244 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 21:57:36.244 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 21:57:36.246 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 21:57:36.246 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 21:57:36.246 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 21:57:36.247 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 21:57:36.248 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 21:57:36.248 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 21:57:36.250 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 21:57:36.251  INFO 26012 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 21:57:37.616  INFO 26012 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://localhost/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 21:57:37.619 DEBUG 26012 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 21:57:37.619 DEBUG 26012 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 21:57:37.621 DEBUG 26012 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 21:57:37.621 DEBUG 26012 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 21:57:37.621 DEBUG 26012 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 21:57:37.622 DEBUG 26012 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 21:57:37.622 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 21:57:37.622 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 21:57:37.623 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 21:57:37.623  INFO 26012 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index
2025-06-29 21:57:37.702  INFO 26012 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 21:57:37.703 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 21:57:37.703 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 21:57:37.704 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 21:57:37.704 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 21:57:37.704 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 21:57:37.705 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 21:57:37.706 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 21:57:37.706 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 21:57:37.708 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 21:57:37.708 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 21:57:37.708 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 21:57:37.709 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 21:57:37.709  INFO 26012 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 21:57:38.357  INFO 26012 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost/', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-29 21:57:38.359 DEBUG 26012 --- [http-nio-80-exec-5] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-29 21:57:38.359 DEBUG 26012 --- [http-nio-80-exec-5] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-29 21:57:38.360 DEBUG 26012 --- [http-nio-80-exec-5] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-29 21:57:38.360 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-29 21:57:38.360 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-29 21:57:38.362 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-29 21:57:38.363 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-29 21:57:38.363 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-29 21:57:38.365 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-29 21:57:38.365  INFO 26012 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index
2025-06-29 21:57:38.428  INFO 26012 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 21:57:38.429 DEBUG 26012 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 21:57:38.429 DEBUG 26012 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 21:57:38.430 DEBUG 26012 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 21:57:38.430 DEBUG 26012 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 21:57:38.430 DEBUG 26012 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 21:57:38.431 DEBUG 26012 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 21:57:38.432 DEBUG 26012 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 21:57:38.432 DEBUG 26012 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 21:57:38.433 DEBUG 26012 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 21:57:38.434 DEBUG 26012 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 21:57:38.434 DEBUG 26012 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 21:57:38.435 DEBUG 26012 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 21:57:38.435  INFO 26012 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 21:57:38.943  INFO 26012 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 21:57:38.945 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 21:57:38.945 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 21:57:38.949 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 21:57:38.999 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 21:57:38.999 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 21:57:39.002 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 21:57:39.003 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 21:57:39.003 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 21:57:39.004 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 21:57:39.005  INFO 26012 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : blog
2025-06-29 21:57:39.348  INFO 26012 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 21:57:39.349 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 21:57:39.349 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 21:57:39.350 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 21:57:39.350 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 21:57:39.350 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 21:57:39.352 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 21:57:39.352 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 21:57:39.352 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 21:57:39.353 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 21:57:39.353 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 21:57:39.353 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 21:57:39.354 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 21:57:39.354  INFO 26012 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 21:57:39.402  INFO 26012 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://localhost/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 21:57:39.406 DEBUG 26012 --- [http-nio-80-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 21:57:39.407 DEBUG 26012 --- [http-nio-80-exec-7] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 21:57:39.409 DEBUG 26012 --- [http-nio-80-exec-7] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 1
2025-06-29 21:57:39.410 DEBUG 26012 --- [http-nio-80-exec-7] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 21:57:39.410 DEBUG 26012 --- [http-nio-80-exec-7] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 94(Long), 2193(Long)
2025-06-29 21:57:39.411 DEBUG 26012 --- [http-nio-80-exec-7] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2025-06-29 21:57:39.412  INFO 26012 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 21:57:58.981 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 21:57:58.981 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 21:57:58.983 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 21:57:58.983 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 21:57:58.984 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 21:57:58.985 DEBUG 26012 --- [http-nio-80-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 21:57:59.062  INFO 26012 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 21:57:59.063 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 21:57:59.063 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 21:57:59.064 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 21:57:59.064 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 21:57:59.065 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 21:57:59.066 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 21:57:59.066 DEBUG 26012 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 21:57:59.067 DEBUG 26012 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 21:57:59.068 DEBUG 26012 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 21:57:59.069 DEBUG 26012 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 21:57:59.069 DEBUG 26012 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 21:57:59.070 DEBUG 26012 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 21:57:59.071  INFO 26012 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 22:00:28.664  WARN 26012 --- [http-nio-80-exec-8] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 22:00:28.671 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 22:00:28.674 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](https://gitee.com/thoughtful123/tearyoByCompanyLife/raw/master/photosuse/myblog/md5code.png)  
<!-- 或者使用完整的Gitee URL（确保是公开仓库） -->
<img src="https://gitee.com/thoughtful123/tearyoByCompanyLife/raw/master/photosuse/myblog/md5code.png" alt="MD5加密流程示意图">
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码(可能需要科学魔法上网)
git clone https://github.com/tearhacker/myblog.git
（将`tearhackerxxxx`替换为实际仓库地址）
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置
   - 修改redis配置
   - 修改其他配置
   
---
### 4. 启动应用
1. 找到主启动类：
   - 通常位于 `src/main/java/com/example/myblog/MyBlogApplication.java`
2. 运行启动类：
   - 右键选择「Run MyBlogApplication」
   - 或通过Maven命令：
3. 验证启动：
   - 控制台输出 `Started MyBlogApplication in X.XXX seconds` 
   - 访问 `http://localhost:8080`（端口以实际配置为准）
---
## 常见问题
1. **数据库连接失败**
   - 检查yml配置中的用户名/密码
   - 确认MySQL服务已启动
2. **端口冲突**
   - 在application.yml中修改`server.port`
3. **依赖下载缓慢**
   - 更换Maven镜像源至阿里云
4. **新人求助**
   - 提供一切帮助,请联系泪心(有偿服务)


(String), 44(Long), /images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 22:00:28.67(Timestamp), 94(Long)
2025-06-29 22:00:28.678 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 22:00:28.688 DEBUG 26012 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 22:00:28.688 DEBUG 26012 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 22:00:28.689 DEBUG 26012 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 22:00:28.691 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 22:00:28.691 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 22:00:28.693 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 22:00:28.694 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 22:00:28.694 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 22:00:28.695 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 22:00:28.769  INFO 26012 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 22:00:28.770 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 22:00:28.770 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 22:00:28.771 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 22:00:28.771 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 22:00:28.772 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 22:00:28.773 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 22:00:28.773 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 22:00:28.774 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 22:00:28.775 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 22:00:28.776 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 22:00:28.776 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 22:00:28.777 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 22:00:28.777  INFO 26012 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 22:00:30.841  INFO 26012 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 22:00:30.842 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 22:00:30.842 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 22:00:30.845 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 22:00:30.854 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 22:00:30.855 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 22:00:30.857 DEBUG 26012 --- [http-nio-80-exec-10] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 22:00:30.857 DEBUG 26012 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 22:00:30.858 DEBUG 26012 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 22:00:30.858 DEBUG 26012 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 22:00:30.858  INFO 26012 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : blog
2025-06-29 22:00:31.209  INFO 26012 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 22:00:31.209 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 22:00:31.209 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 22:00:31.210 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 22:00:31.210 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 22:00:31.210 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 22:00:31.211 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 22:00:31.211 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 22:00:31.211 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 22:00:31.213 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 22:00:31.213 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 22:00:31.213 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 22:00:31.215 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 22:00:31.215  INFO 26012 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 22:00:31.249  INFO 26012 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 22:00:31.250 DEBUG 26012 --- [http-nio-80-exec-1] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 22:00:31.250 DEBUG 26012 --- [http-nio-80-exec-1] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 22:00:31.252 DEBUG 26012 --- [http-nio-80-exec-1] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 1
2025-06-29 22:00:31.252 DEBUG 26012 --- [http-nio-80-exec-1] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 22:00:31.252 DEBUG 26012 --- [http-nio-80-exec-1] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 94(Long), 2193(Long)
2025-06-29 22:00:31.253 DEBUG 26012 --- [http-nio-80-exec-1] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2025-06-29 22:00:31.253  INFO 26012 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 22:00:45.370 DEBUG 26012 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 22:00:45.370 DEBUG 26012 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 22:00:45.372 DEBUG 26012 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 22:00:45.373 DEBUG 26012 --- [http-nio-80-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 22:00:45.373 DEBUG 26012 --- [http-nio-80-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 22:00:45.374 DEBUG 26012 --- [http-nio-80-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 22:00:45.447  INFO 26012 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 22:00:45.448 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 22:00:45.448 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 22:00:45.449 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 22:00:45.449 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 22:00:45.449 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 22:00:45.450 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 22:00:45.451 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 22:00:45.451 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 22:00:45.452 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 22:00:45.452 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 22:00:45.452 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 22:00:45.454 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 22:00:45.454  INFO 26012 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 22:01:20.118  WARN 26012 --- [http-nio-80-exec-8] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 22:01:20.120 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 22:01:20.123 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](/images/myblog/md5code.png)  
<!-- 或者使用完整的Gitee URL（确保是公开仓库） -->
<img src="https://gitee.com/thoughtful123/tearyoByCompanyLife/raw/master/photosuse/myblog/md5code.png" alt="MD5加密流程示意图">
*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码(可能需要科学魔法上网)
git clone https://github.com/tearhacker/myblog.git
（将`tearhackerxxxx`替换为实际仓库地址）
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置
   - 修改redis配置
   - 修改其他配置
   
---
### 4. 启动应用
1. 找到主启动类：
   - 通常位于 `src/main/java/com/example/myblog/MyBlogApplication.java`
2. 运行启动类：
   - 右键选择「Run MyBlogApplication」
   - 或通过Maven命令：
3. 验证启动：
   - 控制台输出 `Started MyBlogApplication in X.XXX seconds` 
   - 访问 `http://localhost:8080`（端口以实际配置为准）
---
## 常见问题
1. **数据库连接失败**
   - 检查yml配置中的用户名/密码
   - 确认MySQL服务已启动
2. **端口冲突**
   - 在application.yml中修改`server.port`
3. **依赖下载缓慢**
   - 更换Maven镜像源至阿里云
4. **新人求助**
   - 提供一切帮助,请联系泪心(有偿服务)


(String), 44(Long), /images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 22:01:20.119(Timestamp), 94(Long)
2025-06-29 22:01:20.126 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 22:01:20.135 DEBUG 26012 --- [http-nio-80-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 22:01:20.136 DEBUG 26012 --- [http-nio-80-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 22:01:20.136 DEBUG 26012 --- [http-nio-80-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 22:01:20.137 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 22:01:20.138 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 22:01:20.139 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 22:01:20.140 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 22:01:20.141 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 22:01:20.141 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 22:01:20.213  INFO 26012 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 22:01:20.215 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 22:01:20.215 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 22:01:20.215 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 22:01:20.215 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 22:01:20.216 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 22:01:20.217 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 22:01:20.217 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 22:01:20.217 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 22:01:20.218 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 22:01:20.218 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 22:01:20.219 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 22:01:20.220 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 22:01:20.220  INFO 26012 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 22:01:21.431  INFO 26012 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://localhost/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 22:01:21.431 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 22:01:21.432 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 22:01:21.433 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 22:01:21.440 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 22:01:21.440 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 22:01:21.447 DEBUG 26012 --- [http-nio-80-exec-4] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 22:01:21.447 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 22:01:21.448 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 22:01:21.448 DEBUG 26012 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 22:01:21.449  INFO 26012 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : blog
2025-06-29 22:01:21.617  INFO 26012 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 22:01:21.617 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 22:01:21.617 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 22:01:21.618 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 22:01:21.618 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 22:01:21.618 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 22:01:21.619 DEBUG 26012 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 22:01:21.619 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 22:01:21.621 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 22:01:21.621 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 22:01:21.622 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 22:01:21.622 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 22:01:21.623 DEBUG 26012 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 22:01:21.623  INFO 26012 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 22:01:21.660  INFO 26012 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://localhost/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 22:01:21.660 DEBUG 26012 --- [http-nio-80-exec-10] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 22:01:21.660 DEBUG 26012 --- [http-nio-80-exec-10] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 22:01:21.661 DEBUG 26012 --- [http-nio-80-exec-10] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 1
2025-06-29 22:01:21.662 DEBUG 26012 --- [http-nio-80-exec-10] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 22:01:21.662 DEBUG 26012 --- [http-nio-80-exec-10] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 94(Long), 2193(Long)
2025-06-29 22:01:21.663 DEBUG 26012 --- [http-nio-80-exec-10] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2025-06-29 22:01:21.663  INFO 26012 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-29 22:01:30.090 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-29 22:01:30.091 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-29 22:01:30.092 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-29 22:01:30.093 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 22:01:30.093 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 22:01:30.094 DEBUG 26012 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 22:01:30.171  INFO 26012 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 22:01:30.171 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 22:01:30.172 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 22:01:30.172 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 22:01:30.173 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 22:01:30.173 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 22:01:30.173 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 22:01:30.174 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 22:01:30.174 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 22:01:30.175 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 22:01:30.175 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 22:01:30.175 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 22:01:30.177 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 22:01:30.177  INFO 26012 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 22:02:11.152  WARN 26012 --- [http-nio-80-exec-6] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-29 22:02:11.153 DEBUG 26012 --- [http-nio-80-exec-6] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-29 22:02:11.155 DEBUG 26012 --- [http-nio-80-exec-6] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
>>>>>>> 061b4ebfa035e46571fa162f1dfef2e805979582
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](/images/myblog/md5code.png)  

*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码(可能需要科学魔法上网)
<<<<<<< HEAD
git clone https://github.com/tearhacker/myblogTear.git
（将`myblogTear`泪心开源仓库）
=======
git clone https://github.com/tearhacker/myblog.git
（将`tearhackerxxxx`替换为实际仓库地址）
>>>>>>> 061b4ebfa035e46571fa162f1dfef2e805979582
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置
   - 修改redis配置
   - 修改其他配置
<<<<<<< HEAD
---
### 4. 启动应用
1. 找到主启动类：
   - 通常位于 `src/main/java/com/star/myblog/MyBlogApplication.java`
=======
   
---
### 4. 启动应用
1. 找到主启动类：
   - 通常位于 `src/main/java/com/example/myblog/MyBlogApplication.java`
>>>>>>> 061b4ebfa035e46571fa162f1dfef2e805979582
2. 运行启动类：
   - 右键选择「Run MyBlogApplication」
   - 或通过Maven命令：
3. 验证启动：
   - 控制台输出 `Started MyBlogApplication in X.XXX seconds` 
   - 访问 `http://localhost:8080`（端口以实际配置为准）
---
## 常见问题
1. **数据库连接失败**
   - 检查yml配置中的用户名/密码
   - 确认MySQL服务已启动
2. **端口冲突**
   - 在application.yml中修改`server.port`
3. **依赖下载缓慢**
   - 更换Maven镜像源至阿里云
4. **新人求助**
   - 提供一切帮助,请联系泪心(有偿服务)
<<<<<<< HEAD
## 可能用上的外链资源
1. **音乐外链解析**
   - <a href="https://api.toubiec.cn/wyapi.html">免费解析音乐</a>
   


(String), 44(Long), /images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-30 09:55:07.024(Timestamp), 94(Long)
2025-06-30 09:55:07.062 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-30 09:55:07.094 DEBUG 4176 --- [http-nio-80-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-30 09:55:07.095 DEBUG 4176 --- [http-nio-80-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-30 09:55:07.096 DEBUG 4176 --- [http-nio-80-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-30 09:55:07.097 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-30 09:55:07.097 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-30 09:55:07.099 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-30 09:55:07.100 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 09:55:07.100 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 09:55:07.101 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 09:55:07.293  INFO 4176 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:55:07.294 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:55:07.295 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:55:07.332 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:55:07.332 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:55:07.333 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:55:07.334 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:55:07.335 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:55:07.335 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:55:07.337 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:55:07.337 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:55:07.337 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:55:07.339 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:55:07.340  INFO 4176 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:55:08.444  INFO 4176 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/blog/94', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-30 09:55:08.445 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-30 09:55:08.446 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-30 09:55:08.448 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-30 09:55:08.454 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-30 09:55:08.455 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-30 09:55:08.458 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-30 09:55:08.459 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-30 09:55:08.459 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-30 09:55:08.462 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-30 09:55:08.462  INFO 4176 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : blog
2025-06-30 09:55:08.929  INFO 4176 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:55:08.929 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:55:08.929 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:55:08.930 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:55:08.931 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:55:08.931 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:55:08.932 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:55:08.932 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:55:08.933 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:55:08.935 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:55:08.936 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:55:08.936 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:55:08.938 DEBUG 4176 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:55:08.938  INFO 4176 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:55:08.996  INFO 4176 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/comments/94', ip='127.0.0.1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-30 09:55:08.997 DEBUG 4176 --- [http-nio-80-exec-10] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-30 09:55:08.997 DEBUG 4176 --- [http-nio-80-exec-10] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-30 09:55:08.999 DEBUG 4176 --- [http-nio-80-exec-10] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 1
2025-06-30 09:55:09.000 DEBUG 4176 --- [http-nio-80-exec-10] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-30 09:55:09.000 DEBUG 4176 --- [http-nio-80-exec-10] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 94(Long), 2193(Long)
2025-06-30 09:55:09.002 DEBUG 4176 --- [http-nio-80-exec-10] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2025-06-30 09:55:09.002  INFO 4176 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-30 09:55:28.582 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-30 09:55:28.583 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-30 09:55:28.584 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-30 09:55:28.585 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 09:55:28.585 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 09:55:28.586 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 09:55:28.711  INFO 4176 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:55:28.712 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:55:28.712 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:55:28.713 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:55:28.713 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:55:28.714 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:55:28.715 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:55:28.715 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:55:28.715 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:55:28.717 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:55:28.718 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:55:28.718 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:55:28.719 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:55:28.720  INFO 4176 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:56:30.096  WARN 4176 --- [http-nio-80-exec-8] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-30 09:56:30.137 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-30 09:56:30.139 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](/images/myblog/md5code.png)  

*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码(可能需要科学魔法上网)
git clone https://github.com/tearhacker/myblogTear.git
（将`myblogTear`泪心开源仓库）
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置
   - 修改redis配置
   - 修改其他配置
---
### 4. 启动应用
1. 找到主启动类：
   - 通常位于 `src/main/java/com/star/myblog/MyBlogApplication.java`
2. 运行启动类：
   - 右键选择「Run MyBlogApplication」
   - 或通过Maven命令：
3. 验证启动：
   - 控制台输出 `Started MyBlogApplication in X.XXX seconds` 
   - 访问 `http://localhost:8080`（端口以实际配置为准）
---
## 常见问题
1. **数据库连接失败**
   - 检查yml配置中的用户名/密码
   - 确认MySQL服务已启动
2. **端口冲突**
   - 在application.yml中修改`server.port`
3. **依赖下载缓慢**
   - 更换Maven镜像源至阿里云
4. **新人求助**
   - 提供一切帮助,请联系泪心(有偿服务)
## 可能用上的外链资源
1. **音乐外链解析**
   - <a href="https://api.toubiec.cn/wyapi.html">免费解析音乐</a>
   - <a href="http://t.me/TearGame">泪心TG电报频道</a>
   


(String), 44(Long), /images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-30 09:56:30.104(Timestamp), 94(Long)
2025-06-30 09:56:30.145 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-30 09:56:30.168 DEBUG 4176 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-30 09:56:30.169 DEBUG 4176 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-30 09:56:30.178 DEBUG 4176 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-30 09:56:30.180 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-30 09:56:30.180 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-30 09:56:30.183 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-30 09:56:30.184 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 09:56:30.184 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 09:56:30.185 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 09:56:30.399  INFO 4176 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:56:30.399 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:56:30.400 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:56:30.422 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:56:30.422 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:56:30.423 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:56:30.424 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:56:30.424 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:56:30.424 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:56:30.426 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:56:30.426 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:56:30.426 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:56:30.429 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:56:30.430  INFO 4176 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:56:31.535  INFO 4176 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/blog/94', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-30 09:56:31.536 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-30 09:56:31.536 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-30 09:56:31.538 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-30 09:56:31.542 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-30 09:56:31.542 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-30 09:56:31.546 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-30 09:56:31.546 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-30 09:56:31.547 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-30 09:56:31.548 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-30 09:56:31.548  INFO 4176 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : blog
2025-06-30 09:56:31.857  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:56:31.857 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:56:31.857 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:56:31.859 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:56:31.859 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:56:31.859 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:56:31.860 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:56:31.861 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:56:31.861 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:56:31.863 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:56:31.864 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:56:31.864 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:56:31.866 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:56:31.866  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:56:31.919  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/comments/94', ip='127.0.0.1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-30 09:56:31.919 DEBUG 4176 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-30 09:56:31.919 DEBUG 4176 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-30 09:56:31.921 DEBUG 4176 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 1
2025-06-30 09:56:31.922 DEBUG 4176 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-30 09:56:31.922 DEBUG 4176 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 94(Long), 2193(Long)
2025-06-30 09:56:31.923 DEBUG 4176 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2025-06-30 09:56:31.923  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-30 09:58:01.041 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-30 09:58:01.041 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-30 09:58:01.053 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-30 09:58:01.054 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 09:58:01.054 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 09:58:01.055 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 09:58:01.309  INFO 4176 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:58:01.310 DEBUG 4176 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:58:01.310 DEBUG 4176 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:58:01.427 DEBUG 4176 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:58:01.427 DEBUG 4176 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:58:01.428 DEBUG 4176 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:58:01.429 DEBUG 4176 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:58:01.429 DEBUG 4176 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:58:01.430 DEBUG 4176 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:58:01.432 DEBUG 4176 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:58:01.433 DEBUG 4176 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:58:01.433 DEBUG 4176 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:58:01.434 DEBUG 4176 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:58:01.434  INFO 4176 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:59:20.290  WARN 4176 --- [http-nio-80-exec-2] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-30 09:59:20.363 DEBUG 4176 --- [http-nio-80-exec-2] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-30 09:59:20.365 DEBUG 4176 --- [http-nio-80-exec-2] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](/images/myblog/md5code.png)  

*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码(可能需要科学魔法上网)
```javascript
git clone https://github.com/tearhacker/myblogTear.git
```
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置
   - 修改redis配置
   - 修改其他配置
---
### 4. 启动应用
1. 找到主启动类：
   - 通常位于 `src/main/java/com/star/myblog/MyBlogApplication.java`
2. 运行启动类：
   - 右键选择「Run MyBlogApplication」
   - 或通过Maven命令：
3. 验证启动：
   - 控制台输出 `Started MyBlogApplication in X.XXX seconds` 
   - 访问 `http://localhost:8080`（端口以实际配置为准）
---
## 常见问题
1. **数据库连接失败**
   - 检查yml配置中的用户名/密码
   - 确认MySQL服务已启动
2. **端口冲突**
   - 在application.yml中修改`server.port`
3. **依赖下载缓慢**
   - 更换Maven镜像源至阿里云
4. **新人求助**
   - 提供一切帮助,请联系泪心(有偿服务)
## 可能用上的外链资源
1. **音乐外链解析**
   - <a href="https://api.toubiec.cn/wyapi.html">免费解析音乐</a>
   - <a href="http://t.me/TearGame">泪心TG电报频道</a>
   


(String), 44(Long), /images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-30 09:59:20.298(Timestamp), 94(Long)
2025-06-30 09:59:20.371 DEBUG 4176 --- [http-nio-80-exec-2] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-30 09:59:20.396 DEBUG 4176 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-30 09:59:20.396 DEBUG 4176 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-30 09:59:20.398 DEBUG 4176 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-30 09:59:20.399 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-30 09:59:20.400 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-30 09:59:20.402 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-30 09:59:20.405 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 09:59:20.405 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 09:59:20.406 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 09:59:20.651  INFO 4176 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:59:20.652 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:59:20.652 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:59:20.653 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:59:20.653 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:59:20.653 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:59:20.655 DEBUG 4176 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:59:20.656 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:59:20.656 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:59:20.657 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:59:20.658 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:59:20.658 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:59:20.660 DEBUG 4176 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:59:20.660  INFO 4176 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:59:22.442  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/blog/94', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-30 09:59:22.443 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-30 09:59:22.443 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-30 09:59:22.445 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-30 09:59:22.450 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-30 09:59:22.450 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-30 09:59:22.454 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-30 09:59:22.454 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-30 09:59:22.454 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-30 09:59:22.455 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-30 09:59:22.455  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : blog
2025-06-30 09:59:22.763  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:59:22.763 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:59:22.764 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:59:22.765 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:59:22.765 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:59:22.765 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:59:22.767 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:59:22.767 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:59:22.767 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:59:22.769 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:59:22.770 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:59:22.770 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:59:22.772 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:59:22.772  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 09:59:22.968  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/comments/94', ip='127.0.0.1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-30 09:59:22.968 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-30 09:59:22.969 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-30 09:59:22.970 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 1
2025-06-30 09:59:22.971 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-30 09:59:22.971 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 94(Long), 2193(Long)
2025-06-30 09:59:22.972 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2025-06-30 09:59:22.973  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-30 09:59:50.434 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-30 09:59:50.435 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-30 09:59:50.437 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-30 09:59:50.438 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 09:59:50.438 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 09:59:50.439 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 09:59:50.544  INFO 4176 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 09:59:50.544 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 09:59:50.544 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 09:59:50.545 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 09:59:50.546 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 09:59:50.546 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 09:59:50.547 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 09:59:50.547 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 09:59:50.547 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 09:59:50.552 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 09:59:50.552 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 09:59:50.553 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 09:59:50.555 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 09:59:50.555  INFO 4176 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:00:38.006  WARN 4176 --- [http-nio-80-exec-7] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-30 10:00:38.016 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-30 10:00:38.017 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |




# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](/images/myblog/md5code.png)  

*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码(可能需要科学魔法上网)
```javascript
git clone https://github.com/tearhacker/myblogTear.git
```
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置
   - 修改redis配置
   - 修改其他配置
---
### 4. 启动应用
1. 找到主启动类：
   - 通常位于 `src/main/java/com/star/myblog/MyBlogApplication.java`
2. 运行启动类：
   - 右键选择「Run MyBlogApplication」
   - 或通过Maven命令：
3. 验证启动：
   - 控制台输出 `Started MyBlogApplication in X.XXX seconds` 
   - 访问 `http://localhost:8080`（端口以实际配置为准）
---
## 常见问题
1. **数据库连接失败**
   - 检查yml配置中的用户名/密码
   - 确认MySQL服务已启动
2. **端口冲突**
   - 在application.yml中修改`server.port`
3. **依赖下载缓慢**
   - 更换Maven镜像源至阿里云
4. **新人求助**
   - 提供一切帮助,请联系泪心(有偿服务)
## 可能用上的外链资源
1. **音乐外链解析**
   - <a href="https://api.toubiec.cn/wyapi.html">免费解析音乐</a>
2. **泪心游戏禁地**
   - <a href="http://t.me/TearGame">泪心TG电报频道(闲人勿扰,乱汝心智)</a>
   


(String), 44(Long), /images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-30 10:00:38.013(Timestamp), 94(Long)
2025-06-30 10:00:38.056 DEBUG 4176 --- [http-nio-80-exec-7] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-30 10:00:38.077 DEBUG 4176 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-30 10:00:38.078 DEBUG 4176 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-30 10:00:38.079 DEBUG 4176 --- [http-nio-80-exec-1] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-30 10:00:38.079 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-30 10:00:38.080 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-30 10:00:38.081 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-30 10:00:38.083 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 10:00:38.083 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 10:00:38.084 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 10:00:38.234  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:00:38.235 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:00:38.235 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:00:38.259 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:00:38.260 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:00:38.260 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:00:38.261 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:00:38.261 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:00:38.261 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:00:38.262 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:00:38.263 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:00:38.263 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:00:38.264 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:00:38.264  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:00:39.340  INFO 4176 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/blog/94', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-30 10:00:39.341 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-30 10:00:39.341 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-30 10:00:39.342 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-30 10:00:39.345 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-30 10:00:39.346 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-30 10:00:39.349 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-30 10:00:39.349 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-30 10:00:39.349 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-30 10:00:39.350 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-30 10:00:39.351  INFO 4176 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : blog
2025-06-30 10:00:39.618  INFO 4176 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:00:39.619 DEBUG 4176 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:00:39.619 DEBUG 4176 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:00:39.620 DEBUG 4176 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:00:39.621 DEBUG 4176 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:00:39.621 DEBUG 4176 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:00:39.622 DEBUG 4176 --- [http-nio-80-exec-6] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:00:39.622 DEBUG 4176 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:00:39.622 DEBUG 4176 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:00:39.624 DEBUG 4176 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:00:39.625 DEBUG 4176 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:00:39.625 DEBUG 4176 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:00:39.628 DEBUG 4176 --- [http-nio-80-exec-6] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:00:39.628  INFO 4176 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:00:39.826  INFO 4176 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/comments/94', ip='127.0.0.1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-30 10:00:39.827 DEBUG 4176 --- [http-nio-80-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-30 10:00:39.827 DEBUG 4176 --- [http-nio-80-exec-2] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-30 10:00:39.829 DEBUG 4176 --- [http-nio-80-exec-2] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 1
2025-06-30 10:00:39.830 DEBUG 4176 --- [http-nio-80-exec-2] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-30 10:00:39.830 DEBUG 4176 --- [http-nio-80-exec-2] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 94(Long), 2193(Long)
2025-06-30 10:00:39.832 DEBUG 4176 --- [http-nio-80-exec-2] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2025-06-30 10:00:39.833  INFO 4176 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-30 10:01:15.990  INFO 4176 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/types/-1', ip='127.0.0.1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2025-06-30 10:01:15.998 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-30 10:01:15.999 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-30 10:01:16.003 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-30 10:01:16.005 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-30 10:01:16.005 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-30 10:01:16.007 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-30 10:01:16.007  INFO 4176 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : types
2025-06-30 10:01:16.200  INFO 4176 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:01:16.200 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:01:16.201 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:01:16.226 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:01:16.226 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:01:16.226 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:01:16.227 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:01:16.228 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:01:16.228 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:01:16.229 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:01:16.231 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:01:16.231 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:01:16.233 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:01:16.234  INFO 4176 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:01:17.925  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/types/44', ip='127.0.0.1', classMethod='com.star.controller.TypeShowController.types', args=[1, 44, {}]}
2025-06-30 10:01:17.926 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-30 10:01:17.926 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-30 10:01:17.928 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-30 10:01:17.929 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-30 10:01:17.929 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 44(Long)
2025-06-30 10:01:17.930 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-30 10:01:17.931  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : types
2025-06-30 10:01:18.060  INFO 4176 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:01:18.061 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:01:18.061 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:01:18.062 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:01:18.063 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:01:18.063 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:01:18.064 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:01:18.064 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:01:18.064 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:01:18.067 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:01:18.068 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:01:18.068 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:01:18.070 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:01:18.071  INFO 4176 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:01:20.275  INFO 4176 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/archives', ip='127.0.0.1', classMethod='com.star.controller.ArchiveShowController.archive', args=[{}]}
2025-06-30 10:01:20.380  INFO 4176 --- [http-nio-80-exec-6] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2025-06-30 10:01:20.380  INFO 4176 --- [http-nio-80-exec-6] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2025-06-30 10:01:20.521 DEBUG 4176 --- [http-nio-80-exec-6] com.star.dao.MemoryDao.listMemory        : ==>  Preparing: select * from myblog.t_memory order by t_memory.id desc 
2025-06-30 10:01:20.522 DEBUG 4176 --- [http-nio-80-exec-6] com.star.dao.MemoryDao.listMemory        : ==> Parameters: 
2025-06-30 10:01:20.530 DEBUG 4176 --- [http-nio-80-exec-6] com.star.dao.MemoryDao.listMemory        : <==      Total: 0
2025-06-30 10:01:20.548  INFO 4176 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : archives
2025-06-30 10:01:22.350  INFO 4176 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/music', ip='127.0.0.1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-30 10:01:22.350  INFO 4176 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : music
2025-06-30 10:01:23.627  INFO 4176 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/message', ip='127.0.0.1', classMethod='com.star.controller.MessageController.message', args=[{}, 1]}
2025-06-30 10:01:23.633 DEBUG 4176 --- [http-nio-80-exec-3] c.s.d.M.findByParentIdNull_COUNT         : ==>  Preparing: SELECT count(0) FROM myblog.t_message c WHERE c.parent_message_id = ? 
2025-06-30 10:01:23.634 DEBUG 4176 --- [http-nio-80-exec-3] c.s.d.M.findByParentIdNull_COUNT         : ==> Parameters: -1(Long)
2025-06-30 10:01:23.634 DEBUG 4176 --- [http-nio-80-exec-3] c.s.d.M.findByParentIdNull_COUNT         : <==      Total: 1
2025-06-30 10:01:23.635 DEBUG 4176 --- [http-nio-80-exec-3] c.s.dao.MessageDao.findByParentIdNull    : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc LIMIT ? 
2025-06-30 10:01:23.635 DEBUG 4176 --- [http-nio-80-exec-3] c.s.dao.MessageDao.findByParentIdNull    : ==> Parameters: -1(Long), 15(Integer)
2025-06-30 10:01:23.637 DEBUG 4176 --- [http-nio-80-exec-3] c.s.dao.MessageDao.findByParentIdNull    : <==      Total: 1
2025-06-30 10:01:23.638 DEBUG 4176 --- [http-nio-80-exec-3] c.s.d.MessageDao.findByParentIdNotNull   : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc 
2025-06-30 10:01:23.638 DEBUG 4176 --- [http-nio-80-exec-3] c.s.d.MessageDao.findByParentIdNotNull   : ==> Parameters: 8132(Long)
2025-06-30 10:01:23.640 DEBUG 4176 --- [http-nio-80-exec-3] c.s.d.MessageDao.findByParentIdNotNull   : <==      Total: 0
2025-06-30 10:01:23.640  INFO 4176 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : message
2025-06-30 10:01:23.832  INFO 4176 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:01:23.832 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:01:23.833 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:01:23.844 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:01:23.844 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:01:23.844 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:01:24.027 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:01:24.027 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:01:24.027 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:01:24.085 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:01:24.086 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:01:24.086 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:01:24.088 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:01:24.088  INFO 4176 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:01:24.693  INFO 4176 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/friends', ip='127.0.0.1', classMethod='com.star.controller.FriendsShowController.friends', args=[{}]}
2025-06-30 10:01:24.699 DEBUG 4176 --- [http-nio-80-exec-2] c.star.dao.FriendLinkDao.listFriendLink  : ==>  Preparing: select * from myblog.t_friend order by t_friend.create_time asc 
2025-06-30 10:01:24.699 DEBUG 4176 --- [http-nio-80-exec-2] c.star.dao.FriendLinkDao.listFriendLink  : ==> Parameters: 
2025-06-30 10:01:24.705 DEBUG 4176 --- [http-nio-80-exec-2] c.star.dao.FriendLinkDao.listFriendLink  : <==      Total: 0
2025-06-30 10:01:24.707  INFO 4176 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : friends
2025-06-30 10:01:24.841  INFO 4176 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:01:24.842 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:01:24.842 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:01:24.843 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:01:24.843 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:01:24.843 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:01:24.844 DEBUG 4176 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:01:24.844 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:01:24.845 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:01:24.846 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:01:24.846 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:01:24.846 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:01:24.847 DEBUG 4176 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:01:24.847  INFO 4176 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:01:25.443  INFO 4176 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/picture', ip='127.0.0.1', classMethod='com.star.controller.PictureShowController.friends', args=[{}]}
2025-06-30 10:01:25.450 DEBUG 4176 --- [http-nio-80-exec-2] com.star.dao.PictureDao.listPicture      : ==>  Preparing: select * from myblog.t_picture order by t_picture.id desc 
2025-06-30 10:01:25.450 DEBUG 4176 --- [http-nio-80-exec-2] com.star.dao.PictureDao.listPicture      : ==> Parameters: 
2025-06-30 10:01:25.454 DEBUG 4176 --- [http-nio-80-exec-2] com.star.dao.PictureDao.listPicture      : <==      Total: 0
2025-06-30 10:01:25.456  INFO 4176 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : picture
2025-06-30 10:01:25.575  INFO 4176 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:01:25.575 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:01:25.575 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:01:25.593 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:01:25.593 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:01:25.594 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:01:25.675 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:01:25.675 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:01:25.675 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:01:25.677 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:01:25.677 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:01:25.677 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:01:25.678 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:01:25.679  INFO 4176 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:01:28.823  INFO 4176 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/resources', ip='127.0.0.1', classMethod='com.star.controller.ResourceShowController.resources', args=[{}]}
2025-06-30 10:01:28.829 DEBUG 4176 --- [http-nio-80-exec-6] c.star.dao.ResourceDao.getStudyResource  : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-30 10:01:28.829 DEBUG 4176 --- [http-nio-80-exec-6] c.star.dao.ResourceDao.getStudyResource  : ==> Parameters: 学习资源(String)
2025-06-30 10:01:28.833 DEBUG 4176 --- [http-nio-80-exec-6] c.star.dao.ResourceDao.getStudyResource  : <==      Total: 0
2025-06-30 10:01:28.837 DEBUG 4176 --- [http-nio-80-exec-6] c.s.dao.ResourceDao.getPictureResource   : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-30 10:01:28.837 DEBUG 4176 --- [http-nio-80-exec-6] c.s.dao.ResourceDao.getPictureResource   : ==> Parameters: 图片资源(String)
2025-06-30 10:01:28.838 DEBUG 4176 --- [http-nio-80-exec-6] c.s.dao.ResourceDao.getPictureResource   : <==      Total: 0
2025-06-30 10:01:28.842 DEBUG 4176 --- [http-nio-80-exec-6] c.s.dao.ResourceDao.getOfficeResource    : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-30 10:01:28.842 DEBUG 4176 --- [http-nio-80-exec-6] c.s.dao.ResourceDao.getOfficeResource    : ==> Parameters: 办公资源(String)
2025-06-30 10:01:28.843 DEBUG 4176 --- [http-nio-80-exec-6] c.s.dao.ResourceDao.getOfficeResource    : <==      Total: 0
2025-06-30 10:01:28.846 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.ResourceDao.getRecreationResource  : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-30 10:01:28.846 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.ResourceDao.getRecreationResource  : ==> Parameters: 娱乐资源(String)
2025-06-30 10:01:28.847 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.ResourceDao.getRecreationResource  : <==      Total: 0
2025-06-30 10:01:28.852 DEBUG 4176 --- [http-nio-80-exec-6] c.s.dao.ResourceDao.getDesignResource    : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-30 10:01:28.852 DEBUG 4176 --- [http-nio-80-exec-6] c.s.dao.ResourceDao.getDesignResource    : ==> Parameters: 设计资源(String)
2025-06-30 10:01:28.854 DEBUG 4176 --- [http-nio-80-exec-6] c.s.dao.ResourceDao.getDesignResource    : <==      Total: 0
2025-06-30 10:01:28.857 DEBUG 4176 --- [http-nio-80-exec-6] c.s.dao.ResourceDao.getSearchResource    : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-30 10:01:28.857 DEBUG 4176 --- [http-nio-80-exec-6] c.s.dao.ResourceDao.getSearchResource    : ==> Parameters: 搜索资源(String)
2025-06-30 10:01:28.858 DEBUG 4176 --- [http-nio-80-exec-6] c.s.dao.ResourceDao.getSearchResource    : <==      Total: 0
2025-06-30 10:01:28.860 DEBUG 4176 --- [http-nio-80-exec-6] c.star.dao.ResourceDao.getToolResource   : ==>  Preparing: select * from myblog.t_resources where first_type = ? and published = 1 order by t_resources.sort asc 
2025-06-30 10:01:28.860 DEBUG 4176 --- [http-nio-80-exec-6] c.star.dao.ResourceDao.getToolResource   : ==> Parameters: 工具资源(String)
2025-06-30 10:01:28.860 DEBUG 4176 --- [http-nio-80-exec-6] c.star.dao.ResourceDao.getToolResource   : <==      Total: 0
2025-06-30 10:01:28.862 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.ResourceDao.getStudyResourceTotle  : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:28.862 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.ResourceDao.getStudyResourceTotle  : ==> Parameters: 学习资源(String)
2025-06-30 10:01:28.862 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.ResourceDao.getStudyResourceTotle  : <==      Total: 1
2025-06-30 10:01:28.863 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getPictureResourceTotle          : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:28.863 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getPictureResourceTotle          : ==> Parameters: 图片资源(String)
2025-06-30 10:01:28.865 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getPictureResourceTotle          : <==      Total: 1
2025-06-30 10:01:28.865 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getOfficeResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:28.865 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getOfficeResourceTotle           : ==> Parameters: 办公资源(String)
2025-06-30 10:01:28.866 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getOfficeResourceTotle           : <==      Total: 1
2025-06-30 10:01:28.867 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getRecreationResourceTotle       : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:28.867 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getRecreationResourceTotle       : ==> Parameters: 娱乐资源(String)
2025-06-30 10:01:28.867 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getRecreationResourceTotle       : <==      Total: 1
2025-06-30 10:01:28.868 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getDesignResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:28.868 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getDesignResourceTotle           : ==> Parameters: 设计资源(String)
2025-06-30 10:01:28.869 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getDesignResourceTotle           : <==      Total: 1
2025-06-30 10:01:28.869 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getSearchResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:28.869 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getSearchResourceTotle           : ==> Parameters: 搜索资源(String)
2025-06-30 10:01:28.870 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.R.getSearchResourceTotle           : <==      Total: 1
2025-06-30 10:01:28.871 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.ResourceDao.getToolResourceTotle   : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:28.871 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.ResourceDao.getToolResourceTotle   : ==> Parameters: 工具资源(String)
2025-06-30 10:01:28.871 DEBUG 4176 --- [http-nio-80-exec-6] c.s.d.ResourceDao.getToolResourceTotle   : <==      Total: 1
2025-06-30 10:01:28.872  INFO 4176 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : resources
2025-06-30 10:01:28.943  INFO 4176 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:01:28.943 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:01:28.943 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:01:28.944 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:01:28.945 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:01:28.945 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:01:28.946 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:01:28.946 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:01:28.946 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:01:28.948 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:01:28.948 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:01:28.949 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:01:28.951 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:01:28.951  INFO 4176 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:01:30.029  INFO 4176 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/about', ip='127.0.0.1', classMethod='com.star.controller.AboutShowController.about', args=[]}
2025-06-30 10:01:30.031  INFO 4176 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : about
2025-06-30 10:01:30.164  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:01:30.166 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-30 10:01:30.166 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-30 10:01:30.167 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-30 10:01:30.167 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-30 10:01:30.168 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-30 10:01:30.168 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:01:30.169 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:01:30.169 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:01:30.170 DEBUG 4176 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:01:30.170 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:01:30.170 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:01:30.172 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:01:30.172 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:01:30.172 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:01:30.174 DEBUG 4176 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:01:30.174  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:01:30.646  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/resources', ip='127.0.0.1', classMethod='com.star.controller.ResourceShowController.resources', args=[{}]}
2025-06-30 10:01:30.743 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.ResourceDao.getStudyResourceTotle  : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:30.743 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.ResourceDao.getStudyResourceTotle  : ==> Parameters: 学习资源(String)
2025-06-30 10:01:30.744 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.ResourceDao.getStudyResourceTotle  : <==      Total: 1
2025-06-30 10:01:30.745 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getPictureResourceTotle          : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:30.745 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getPictureResourceTotle          : ==> Parameters: 图片资源(String)
2025-06-30 10:01:30.745 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getPictureResourceTotle          : <==      Total: 1
2025-06-30 10:01:30.746 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getOfficeResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:30.746 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getOfficeResourceTotle           : ==> Parameters: 办公资源(String)
2025-06-30 10:01:30.746 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getOfficeResourceTotle           : <==      Total: 1
2025-06-30 10:01:30.747 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getRecreationResourceTotle       : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:30.747 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getRecreationResourceTotle       : ==> Parameters: 娱乐资源(String)
2025-06-30 10:01:30.747 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getRecreationResourceTotle       : <==      Total: 1
2025-06-30 10:01:30.748 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getDesignResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:30.748 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getDesignResourceTotle           : ==> Parameters: 设计资源(String)
2025-06-30 10:01:30.748 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getDesignResourceTotle           : <==      Total: 1
2025-06-30 10:01:30.748 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getSearchResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:30.748 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getSearchResourceTotle           : ==> Parameters: 搜索资源(String)
2025-06-30 10:01:30.749 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.R.getSearchResourceTotle           : <==      Total: 1
2025-06-30 10:01:30.750 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.ResourceDao.getToolResourceTotle   : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:01:30.750 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.ResourceDao.getToolResourceTotle   : ==> Parameters: 工具资源(String)
2025-06-30 10:01:30.751 DEBUG 4176 --- [http-nio-80-exec-1] c.s.d.ResourceDao.getToolResourceTotle   : <==      Total: 1
2025-06-30 10:01:30.751  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : resources
2025-06-30 10:01:30.851  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:01:30.852 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:01:30.852 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:01:30.853 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:01:30.853 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:01:30.854 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:01:30.855 DEBUG 4176 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:01:30.855 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:01:30.855 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:01:30.871 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:01:30.872 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:01:30.872 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:01:30.873 DEBUG 4176 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:01:30.874  INFO 4176 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:01:37.965  INFO 4176 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/about', ip='127.0.0.1', classMethod='com.star.controller.AboutShowController.about', args=[]}
2025-06-30 10:01:37.965  INFO 4176 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : about
2025-06-30 10:01:38.088  INFO 4176 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:01:38.088 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:01:38.089 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:01:38.089 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:01:38.090 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:01:38.090 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:01:38.091 DEBUG 4176 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:01:38.092 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:01:38.092 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:01:38.093 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:01:38.094 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:01:38.094 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:01:38.095 DEBUG 4176 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:01:38.095  INFO 4176 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:01:39.602  INFO 4176 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/message', ip='127.0.0.1', classMethod='com.star.controller.MessageController.message', args=[{}, 1]}
2025-06-30 10:01:39.604 DEBUG 4176 --- [http-nio-80-exec-8] c.s.d.M.findByParentIdNull_COUNT         : ==>  Preparing: SELECT count(0) FROM myblog.t_message c WHERE c.parent_message_id = ? 
2025-06-30 10:01:39.604 DEBUG 4176 --- [http-nio-80-exec-8] c.s.d.M.findByParentIdNull_COUNT         : ==> Parameters: -1(Long)
2025-06-30 10:01:39.605 DEBUG 4176 --- [http-nio-80-exec-8] c.s.d.M.findByParentIdNull_COUNT         : <==      Total: 1
2025-06-30 10:01:39.605 DEBUG 4176 --- [http-nio-80-exec-8] c.s.dao.MessageDao.findByParentIdNull    : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc LIMIT ? 
2025-06-30 10:01:39.605 DEBUG 4176 --- [http-nio-80-exec-8] c.s.dao.MessageDao.findByParentIdNull    : ==> Parameters: -1(Long), 15(Integer)
2025-06-30 10:01:39.606 DEBUG 4176 --- [http-nio-80-exec-8] c.s.dao.MessageDao.findByParentIdNull    : <==      Total: 1
2025-06-30 10:01:39.606 DEBUG 4176 --- [http-nio-80-exec-8] c.s.d.MessageDao.findByParentIdNotNull   : ==>  Preparing: select * from myblog.t_message c where c.parent_message_id = ? order by c.create_time desc 
2025-06-30 10:01:39.606 DEBUG 4176 --- [http-nio-80-exec-8] c.s.d.MessageDao.findByParentIdNotNull   : ==> Parameters: 8132(Long)
2025-06-30 10:01:39.607 DEBUG 4176 --- [http-nio-80-exec-8] c.s.d.MessageDao.findByParentIdNotNull   : <==      Total: 0
2025-06-30 10:01:39.607  INFO 4176 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : message
2025-06-30 10:01:39.722  INFO 4176 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:01:39.722 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:01:39.722 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:01:39.723 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:01:39.724 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:01:39.724 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:01:39.725 DEBUG 4176 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:01:39.725 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:01:39.725 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:01:39.726 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:01:39.727 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:01:39.727 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:01:39.729 DEBUG 4176 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:01:39.729  INFO 4176 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:01:50.259  INFO 4176 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/music', ip='127.0.0.1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-30 10:01:50.259  INFO 4176 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : music
2025-06-30 10:02:02.299  INFO 4176 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/archives', ip='127.0.0.1', classMethod='com.star.controller.ArchiveShowController.archive', args=[{}]}
2025-06-30 10:02:02.303  INFO 4176 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : archives
2025-06-30 10:02:08.999  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/friends', ip='127.0.0.1', classMethod='com.star.controller.FriendsShowController.friends', args=[{}]}
2025-06-30 10:02:09.000  INFO 4176 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : friends
2025-06-30 10:02:09.151  INFO 4176 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:02:09.153 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:02:09.153 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:02:09.154 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:02:09.155 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:02:09.155 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:02:09.156 DEBUG 4176 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:02:09.156 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:02:09.156 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:02:09.158 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:02:09.159 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:02:09.159 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:02:09.160 DEBUG 4176 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:02:09.161  INFO 4176 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:03:26.842  INFO 7980 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 7980 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-30 10:03:26.848 DEBUG 7980 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-30 10:03:26.849  INFO 7980 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-30 10:03:26.906  INFO 7980 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-30 10:03:26.906  INFO 7980 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-30 10:03:27.462  INFO 7980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-30 10:03:27.464  INFO 7980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 10:03:27.488  INFO 7980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 Redis repository interfaces.
2025-06-30 10:03:27.883  INFO 7980 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$54578965] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-30 10:03:28.154  INFO 7980 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-30 10:03:28.162  INFO 7980 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-30 10:03:28.163  INFO 7980 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-30 10:03:28.220  INFO 7980 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-30 10:03:28.220  INFO 7980 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1314 ms
2025-06-30 10:03:29.198  INFO 7980 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-30 10:03:29.283  INFO 7980 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-30 10:03:29.674  INFO 7980 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-30 10:03:29.730  INFO 7980 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-30 10:03:29.732  INFO 7980 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 3.342 seconds (JVM running for 4.365)
2025-06-30 10:03:29.826  INFO 7980 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-30 10:03:29.827  INFO 7980 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-30 10:03:29.834  INFO 7980 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 7 ms
2025-06-30 10:03:29.855  INFO 7980 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/friends', ip='127.0.0.1', classMethod='com.star.controller.FriendsShowController.friends', args=[{}]}
2025-06-30 10:03:29.952  INFO 7980 --- [http-nio-80-exec-1] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2025-06-30 10:03:29.954  INFO 7980 --- [http-nio-80-exec-1] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2025-06-30 10:03:30.083  INFO 7980 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : friends
2025-06-30 10:03:30.462  INFO 7980 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:03:30.477  INFO 7980 --- [http-nio-80-exec-10] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-30 10:03:30.575  INFO 7980 --- [http-nio-80-exec-10] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-30 10:03:30.580 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:03:30.595 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:03:30.622 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:03:30.628 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:03:30.628 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:03:30.630 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:03:30.630 DEBUG 7980 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:03:30.630 DEBUG 7980 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:03:30.632 DEBUG 7980 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:03:30.633 DEBUG 7980 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:03:30.634 DEBUG 7980 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:03:30.636 DEBUG 7980 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:03:30.636  INFO 7980 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:03:35.892  INFO 7980 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/music', ip='127.0.0.1', classMethod='com.star.controller.MusicShowController.about', args=[]}
2025-06-30 10:03:35.895  INFO 7980 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : music
2025-06-30 10:03:36.867  INFO 7980 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/archives', ip='127.0.0.1', classMethod='com.star.controller.ArchiveShowController.archive', args=[{}]}
2025-06-30 10:03:36.876  INFO 7980 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : archives
2025-06-30 10:03:40.056  INFO 7980 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/types/-1', ip='127.0.0.1', classMethod='com.star.controller.TypeShowController.types', args=[1, -1, {}]}
2025-06-30 10:03:40.068 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==>  Preparing: select t.id tid, t.name, b.id bid, b.title,b.type_id from myblog.t_type t,myblog.t_blog b where t.id = b.type_id 
2025-06-30 10:03:40.069 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : ==> Parameters: 
2025-06-30 10:03:40.074 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.TypeDao.getAllTypeAndBlog   : <==      Total: 2
2025-06-30 10:03:40.079 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getByTypeId         : ==>  Preparing: select b.id,b.title,b.first_picture, b.views, b.comment_count, b.update_time, b.description,t.name ,u.nickname, u.avatar from myblog.t_blog b, myblog.t_type t,myblog.t_user u where b.type_id = t.id and u.id = b.user_id and b.type_id = ? order by b.update_time desc 
2025-06-30 10:03:40.080 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getByTypeId         : ==> Parameters: 43(Long)
2025-06-30 10:03:40.085 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getByTypeId         : <==      Total: 1
2025-06-30 10:03:40.087  INFO 7980 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : types
2025-06-30 10:03:40.266  INFO 7980 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:03:40.267 DEBUG 7980 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:03:40.267 DEBUG 7980 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:03:40.269 DEBUG 7980 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:03:40.270 DEBUG 7980 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:03:40.270 DEBUG 7980 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:03:40.272 DEBUG 7980 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:03:40.273 DEBUG 7980 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:03:40.273 DEBUG 7980 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:03:40.275 DEBUG 7980 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:03:40.276 DEBUG 7980 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:03:40.276 DEBUG 7980 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:03:40.278 DEBUG 7980 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:03:40.278  INFO 7980 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:03:41.658  INFO 7980 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-30 10:03:41.780 DEBUG 7980 --- [http-nio-80-exec-2] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-30 10:03:41.780 DEBUG 7980 --- [http-nio-80-exec-2] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-30 10:03:41.782 DEBUG 7980 --- [http-nio-80-exec-2] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-30 10:03:41.783 DEBUG 7980 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-30 10:03:41.784 DEBUG 7980 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-30 10:03:41.788 DEBUG 7980 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-30 10:03:41.789 DEBUG 7980 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-30 10:03:41.790 DEBUG 7980 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-30 10:03:41.792 DEBUG 7980 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-30 10:03:41.792  INFO 7980 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : index
2025-06-30 10:03:41.977  INFO 7980 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:03:41.979 DEBUG 7980 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:03:41.979 DEBUG 7980 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:03:41.990 DEBUG 7980 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:03:41.990 DEBUG 7980 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:03:41.991 DEBUG 7980 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:03:41.992 DEBUG 7980 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:03:41.993 DEBUG 7980 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:03:41.993 DEBUG 7980 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:03:41.995 DEBUG 7980 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:03:41.995 DEBUG 7980 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:03:41.995 DEBUG 7980 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:03:41.997 DEBUG 7980 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:03:41.997  INFO 7980 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:03:43.429  INFO 7980 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/friends', ip='127.0.0.1', classMethod='com.star.controller.FriendsShowController.friends', args=[{}]}
2025-06-30 10:03:43.431  INFO 7980 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : friends
2025-06-30 10:03:43.554  INFO 7980 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:03:43.555 DEBUG 7980 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:03:43.556 DEBUG 7980 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:03:43.557 DEBUG 7980 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:03:43.559 DEBUG 7980 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:03:43.559 DEBUG 7980 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:03:43.559 DEBUG 7980 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:03:43.560 DEBUG 7980 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:03:43.560 DEBUG 7980 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:03:43.561 DEBUG 7980 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:03:43.562 DEBUG 7980 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:03:43.562 DEBUG 7980 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:03:43.564 DEBUG 7980 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:03:43.564  INFO 7980 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:03:44.866  INFO 7980 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/about', ip='127.0.0.1', classMethod='com.star.controller.AboutShowController.about', args=[]}
2025-06-30 10:03:44.868  INFO 7980 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : about
2025-06-30 10:03:45.014  INFO 7980 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:03:45.016 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==>  Preparing: SELECT count(0) FROM (SELECT count(*) FROM myblog.t_blog) table_count 
2025-06-30 10:03:45.016 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : ==> Parameters: 
2025-06-30 10:03:45.018 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal_COUNT  : <==      Total: 1
2025-06-30 10:03:45.019 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog LIMIT ? 
2025-06-30 10:03:45.021 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 10000(Integer)
2025-06-30 10:03:45.022 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:03:45.023 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:03:45.023 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:03:45.025 DEBUG 7980 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:03:45.026 DEBUG 7980 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:03:45.026 DEBUG 7980 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:03:45.027 DEBUG 7980 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:03:45.028 DEBUG 7980 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:03:45.028 DEBUG 7980 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:03:45.030 DEBUG 7980 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:03:45.031  INFO 7980 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:03:45.983  INFO 7980 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/resources', ip='127.0.0.1', classMethod='com.star.controller.ResourceShowController.resources', args=[{}]}
2025-06-30 10:03:45.996 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.ResourceDao.getStudyResourceTotle  : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:03:45.996 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.ResourceDao.getStudyResourceTotle  : ==> Parameters: 学习资源(String)
2025-06-30 10:03:45.999 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.ResourceDao.getStudyResourceTotle  : <==      Total: 1
2025-06-30 10:03:45.999 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getPictureResourceTotle          : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:03:45.999 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getPictureResourceTotle          : ==> Parameters: 图片资源(String)
2025-06-30 10:03:46.000 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getPictureResourceTotle          : <==      Total: 1
2025-06-30 10:03:46.002 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getOfficeResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:03:46.002 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getOfficeResourceTotle           : ==> Parameters: 办公资源(String)
2025-06-30 10:03:46.004 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getOfficeResourceTotle           : <==      Total: 1
2025-06-30 10:03:46.005 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getRecreationResourceTotle       : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:03:46.006 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getRecreationResourceTotle       : ==> Parameters: 娱乐资源(String)
2025-06-30 10:03:46.006 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getRecreationResourceTotle       : <==      Total: 1
2025-06-30 10:03:46.007 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getDesignResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:03:46.007 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getDesignResourceTotle           : ==> Parameters: 设计资源(String)
2025-06-30 10:03:46.008 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getDesignResourceTotle           : <==      Total: 1
2025-06-30 10:03:46.008 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getSearchResourceTotle           : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:03:46.009 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getSearchResourceTotle           : ==> Parameters: 搜索资源(String)
2025-06-30 10:03:46.010 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.R.getSearchResourceTotle           : <==      Total: 1
2025-06-30 10:03:46.010 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.ResourceDao.getToolResourceTotle   : ==>  Preparing: select count(*) from myblog.t_resources where t_resources.first_type = ? 
2025-06-30 10:03:46.010 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.ResourceDao.getToolResourceTotle   : ==> Parameters: 工具资源(String)
2025-06-30 10:03:46.010 DEBUG 7980 --- [http-nio-80-exec-2] c.s.d.ResourceDao.getToolResourceTotle   : <==      Total: 1
2025-06-30 10:03:46.010  INFO 7980 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : resources
2025-06-30 10:03:46.093  INFO 7980 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:03:46.093 DEBUG 7980 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:03:46.094 DEBUG 7980 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:03:46.095 DEBUG 7980 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:03:46.096 DEBUG 7980 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:03:46.096 DEBUG 7980 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:03:46.097 DEBUG 7980 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:03:46.097 DEBUG 7980 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:03:46.097 DEBUG 7980 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:03:46.098 DEBUG 7980 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:03:46.099 DEBUG 7980 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:03:46.099 DEBUG 7980 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:03:46.100 DEBUG 7980 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:03:46.101  INFO 7980 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:04:10.014  INFO 20680 --- [restartedMain] com.star.MyblogApplication               : Starting MyblogApplication on DESKTOP-584CTUO with PID 20680 (started by t0123 in D:\Work_WJ\博客星梦耀光)
2025-06-30 10:04:10.015 DEBUG 20680 --- [restartedMain] com.star.MyblogApplication               : Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2025-06-30 10:04:10.016  INFO 20680 --- [restartedMain] com.star.MyblogApplication               : No active profile set, falling back to default profiles: default
2025-06-30 10:04:10.058  INFO 20680 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-30 10:04:10.058  INFO 20680 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-30 10:04:10.614  INFO 20680 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2025-06-30 10:04:10.616  INFO 20680 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-06-30 10:04:10.638  INFO 20680 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12ms. Found 0 Redis repository interfaces.
2025-06-30 10:04:11.001  INFO 20680 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.star.config.RedisConfig$$EnhancerBySpringCGLIB$$7db91cdd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2025-06-30 10:04:11.304  INFO 20680 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 80 (http)
2025-06-30 10:04:11.315  INFO 20680 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-06-30 10:04:11.316  INFO 20680 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.31]
2025-06-30 10:04:11.380  INFO 20680 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-06-30 10:04:11.380  INFO 20680 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1321 ms
2025-06-30 10:04:12.366  INFO 20680 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2025-06-30 10:04:12.444  INFO 20680 --- [restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index
2025-06-30 10:04:12.844  INFO 20680 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2025-06-30 10:04:12.899  INFO 20680 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 80 (http) with context path ''
2025-06-30 10:04:12.901  INFO 20680 --- [restartedMain] com.star.MyblogApplication               : Started MyblogApplication in 3.21 seconds (JVM running for 3.918)
2025-06-30 10:04:21.714  INFO 20680 --- [http-nio-80-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-30 10:04:21.715  INFO 20680 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-06-30 10:04:21.729  INFO 20680 --- [http-nio-80-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2025-06-30 10:04:27.096  INFO 20680 --- [http-nio-80-exec-8] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-06-30 10:04:27.229  INFO 20680 --- [http-nio-80-exec-8] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-06-30 10:04:27.239 DEBUG 20680 --- [http-nio-80-exec-8] c.s.d.UserDao.findByUsernameAndPassword  : ==>  Preparing: select * from myblog.t_user where username = ? and password = ?; 
2025-06-30 10:04:27.262 DEBUG 20680 --- [http-nio-80-exec-8] c.s.d.UserDao.findByUsernameAndPassword  : ==> Parameters: 123456(String), e10adc3949ba59abbe56e057f20f883e(String)
2025-06-30 10:04:27.290 DEBUG 20680 --- [http-nio-80-exec-8] c.s.d.UserDao.findByUsernameAndPassword  : <==      Total: 1
2025-06-30 10:04:27.456  INFO 20680 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:04:27.464 DEBUG 20680 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:04:27.465 DEBUG 20680 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:04:27.469 DEBUG 20680 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:04:27.470 DEBUG 20680 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:04:27.471 DEBUG 20680 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:04:27.491 DEBUG 20680 --- [http-nio-80-exec-10] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:04:27.493 DEBUG 20680 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:04:27.493 DEBUG 20680 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:04:27.495 DEBUG 20680 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:04:27.496 DEBUG 20680 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:04:27.496 DEBUG 20680 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:04:27.521 DEBUG 20680 --- [http-nio-80-exec-10] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:04:27.522  INFO 20680 --- [http-nio-80-exec-10] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:04:29.256 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_type 
2025-06-30 10:04:29.256 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType_COUNT    : ==> Parameters: 
2025-06-30 10:04:29.259 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType_COUNT    : <==      Total: 1
2025-06-30 10:04:29.261 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: SELECT * FROM myblog.t_type order by id desc LIMIT ? 
2025-06-30 10:04:29.263 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 10(Integer)
2025-06-30 10:04:29.265 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 10:04:29.398  INFO 20680 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:04:29.399 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:04:29.399 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:04:29.401 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:04:29.402 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:04:29.402 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:04:29.404 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:04:29.405 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:04:29.405 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:04:29.407 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:04:29.408 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:04:29.408 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:04:29.410 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:04:29.411  INFO 20680 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:04:30.184 DEBUG 20680 --- [http-nio-80-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-30 10:04:30.185 DEBUG 20680 --- [http-nio-80-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-30 10:04:30.187 DEBUG 20680 --- [http-nio-80-exec-2] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-30 10:04:30.188 DEBUG 20680 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-30 10:04:30.188 DEBUG 20680 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-30 10:04:30.193 DEBUG 20680 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-30 10:04:30.194 DEBUG 20680 --- [http-nio-80-exec-2] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 10:04:30.194 DEBUG 20680 --- [http-nio-80-exec-2] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 10:04:30.195 DEBUG 20680 --- [http-nio-80-exec-2] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 10:04:30.316  INFO 20680 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:04:30.317 DEBUG 20680 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:04:30.317 DEBUG 20680 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:04:30.318 DEBUG 20680 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:04:30.319 DEBUG 20680 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:04:30.319 DEBUG 20680 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:04:30.320 DEBUG 20680 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:04:30.321 DEBUG 20680 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:04:30.321 DEBUG 20680 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:04:30.325 DEBUG 20680 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:04:30.326 DEBUG 20680 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:04:30.326 DEBUG 20680 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:04:30.328 DEBUG 20680 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:04:30.329  INFO 20680 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:04:32.115 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-30 10:04:32.116 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-30 10:04:32.121 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-30 10:04:32.122 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 10:04:32.123 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 10:04:32.124 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 10:04:32.259  INFO 20680 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:04:32.260 DEBUG 20680 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:04:32.260 DEBUG 20680 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:04:32.263 DEBUG 20680 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:04:32.264 DEBUG 20680 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:04:32.264 DEBUG 20680 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:04:32.266 DEBUG 20680 --- [http-nio-80-exec-1] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:04:32.267 DEBUG 20680 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:04:32.267 DEBUG 20680 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:04:32.270 DEBUG 20680 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:04:32.271 DEBUG 20680 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:04:32.271 DEBUG 20680 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:04:32.274 DEBUG 20680 --- [http-nio-80-exec-1] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:04:32.274  INFO 20680 --- [http-nio-80-exec-1] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:05:17.017  WARN 20680 --- [http-nio-80-exec-6] o.springframework.validation.DataBinder  : Skipping URI variable 'id' because request contains bind value with same name.
2025-06-30 10:05:17.051 DEBUG 20680 --- [http-nio-80-exec-6] com.star.dao.BlogDao.updateBlog          : ==>  Preparing: update myblog.t_blog set published = ?,flag = ? , title = ?, content = ?, type_id = ?, first_picture = ? , description = ? , recommend = ? , share_statement = ?, appreciation = ?, commentabled = ? ,update_time = ? where id = ?; 
2025-06-30 10:05:17.058 DEBUG 20680 --- [http-nio-80-exec-6] com.star.dao.BlogDao.updateBlog          : ==> Parameters: false(Boolean), 原创(String), MYBLOG个人博客系统搭建和技术要点分析(String), # 个人博客系统技术概要
## 序言
很多时候，要的只是结果，而不是你累死累活的过程，资本化的快速商业战，是完全不需要过程，只要你最终给出完美的答卷就行。所以请不要在乎我利用了人工智能，如网络上说有工具不用非要手动“没苦硬吃”那是傻逼。
## 项目概述
本系统是基于SpringBoot+MyBatis的轻量级个人博客平台，采用前后端分离架构设计，具备文章管理、分类归档、互动留言、多媒体展示等完整博客功能。前端融合Semantic UI框架与多款JavaScript插件实现优雅交互，后端依托SpringBoot生态实现高效开发。--技术详解非常细致哦<!--泪心原创 @TearGame QQ2254013571 禁止侵权-->
---
## 项目代码框架分析
    src/main/java
    ├─com.star
      ├─config          // 配置类
      ├─controller      // 控制层
      ├─service         // 业务层
         ├─impl         // 实现类
      ├─dao             // 持久层接口
      ├─entity          // 实体类
      ├─interceptor     // 拦截器
      ├─handle       // 异常处理
      ├─util            // 工具类
    resources
      ├─templates       // 视图模板
      ├─static          // 静态资源 含泪心自加资源

## 技术架构概览
### 前端技术栈
| 模块 | 技术实现 |
|------|----------|
| **核心框架** | jQuery + Semantic UI |
| **富文本编辑** | Markdown编辑器 |
| **代码高亮** | prism.js |
| **动态效果** | animate.css 动画库 |
| **文章导航** | Tocbot目录生成器 | 
| **音乐播放** | zPlayer音乐播放器 |
| **图片展示** | lightbox.js照片墙插件 |
### 后端技术栈
| 模块 | 技术组件 |
|------|----------|
| **核心框架** | SpringBoot 2.2.5 |
| **ORM框架** | MyBatis |
| **模板引擎** | Thymeleaf |
| **分页处理** | PageHelper分页插件 |
| **安全加密** | MD5密码加密 |
| **项目构建** | Maven 3.x + JDK 8+ |
### 数据库
- **版本**: MySQL 8.x
- **连接池**: HikariCP (SpringBoot默认)
---
### 核心数据表说明
| 数据表       | 功能描述                          |
|--------------|---------------------------------|
| `t_blog`     | 存储文章主体内容及元数据           |
| `t_type`     | 文章分类标签目录                  |
| `t_user`     | 系统用户信息（含管理员）           |
| `t_comment`  | 文章评论数据                     |
| `t_message`  | 留言板消息记录                   |
| `t_friend`   | 友情链接资源池                   |
| `t_picture`  | 相册图片及元数据                 |


<!--泪心原创 @TearGame QQ2254013571 禁止侵权-->
<!--泪心原创 @TearGame QQ2254013571 禁止侵权-->
# 博客系统功能说明

## 用户端功能

### 1. 内容浏览功能
- **文章展示**
  - 支持文章列表分页展示
  - 提供文章详情阅读页面
  - 自动记录文章访问量

- **内容检索**
  - 按分类浏览（技术/生活/随笔等）
  - 标签云导航
  - 支持关键词搜索

### 2. 多媒体功能
- **音乐播放**
  - 支持播放/暂停/切歌
  - 显示同步歌词
  - 音量调节控制

- **相册展示**
  - 图片瀑布流布局
  - 点击放大查看
  - 显示照片拍摄信息

### 3. 互动功能
- **评论系统**
  - 支持留言回复
  - 区分普通用户和管理员
  - 表情符号支持

- **友情链接**
  - 合作伙伴展示
  - 链接点击统计
  - 友链申请入口

## 管理端功能

### 1. 内容管理
- **文章管理**
  - 新增/编辑/删除文章
  - Markdown编辑器
  - 草稿自动保存

- **分类管理**
  - 多级分类设置
  - 分类排序调整
  - 关联文章统计

### 2. 消息管理
- **评论审核**
  - 新评论提醒
  - 敏感词过滤
  - 批量处理功能

- **通知系统**
  - 站内消息提醒
  - 邮件通知设置
  - 消息标记已读

### 3. 系统安全
- **登录验证**
  - 账号密码登录
  - 密码加密存储
  - 登录日志记录

- **权限控制**
  - 管理后台隔离
  - 操作日志追踪
  - 异常登录检测

> 部署环境要求：
> - JDK 17+
> - MySQL 8.0+
> - Redis 6.0+

> 开发进度：
> - 用户端：基本完成
> - 管理端：主要功能完成

## 代码开发重难点分析
### MD5加密工具类说明

#### 功能图解
![MD5加密流程示意图](/images/myblog/md5code.png)  

*图：MD5加密算法处理流程*


```java
/**		md5不可逆加密核心代码实现
 * MD5加密工具类
 */
public class MD5Utils {
    /**
     * 生成32位MD5哈希值
     * @param str 原始字符串
     * @return 32位小写MD5值
     */
    public static String code(String str) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] digest = md.digest(str.getBytes(StandardCharsets.UTF_8));
            StringBuilder hexString = new StringBuilder();
            for (byte b : digest) {
                String hex = Integer.toHexString(0xff & b);
                if(hex.length() == 1) {
                    hexString.append('0');
                }
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("MD5 algorithm not found", e);
        }
    }
}
```

> 根据泪心分析 这样一加密后意味着存储在数据库的密码是会被md5加密初始化的，什么意思呢，就是说只要你调用这个函数，你查找账号密码，那么这个密码必定是经过了md5加密混淆。因此如果你数据库上面的密码是admin,但是你在网页输入的是admin，结果自然而然就不通过了。因为这个是直接查询你数据库的密码，然后网页层面已经经过了md5混淆加密，跟你输入的值完全不对等了。<br>那么如果说我实在想用怎么办呢，方法一,直接加密对应密码生成后的md5数据，把数据载入数据库对应密码中。方法二，实现用户输入注册生成已加密的数据并自动载入数据库。方法二虽好但是必须做足安全性，否则很容易被人恶意调试直接拿到后端管理员账号密码。

```java
@Service
public class UserServiceImpl implements UserService {

    @Autowired
    private UserDao userDao;

    /**
     * @Description: 业务逻辑层代码实现
     * @Auther: 泪心
     * @Date: 21:25 2025/6/29
     * @Param: username:用户名；password:密码
     * @Return: 返回用户对象
     */
    @Override
    public User checkUser(String username, String password) {
        User user = userDao.findByUsernameAndPassword(username, MD5Utils.code(password));
        return user;
    }
}
```
### 全局异常页面url处理
```java
// GlobalExceptionHandler.java
@ControllerAdvice
public class GlobalExceptionHandler {
    // 处理404等未匹配路径
    @ExceptionHandler(NoHandlerFoundException.class)
    public String handle404() {
        return "redirect:/error";
    }
    // 统一错误页面
    @GetMapping("/error")
    public String errorPage() {
        return "error"; // templates/error.html
    }
```

### 管理员权限拦截器实现
```java
// AuthInterceptor.java
public class AuthInterceptor implements HandlerInterceptor {
    @Override
    public boolean preHandle(HttpServletRequest request, 
                            HttpServletResponse response, 
                            Object handler) throws Exception {
        // 检查登录状态（示例Session实现）
        HttpSession session = request.getSession();
        String username = (String) session.getAttribute("currentUser");
        // 排除登录接口
        String uri = request.getRequestURI();
        if(uri.contains("/login") || uri.contains("/static")){
            return true;
        }
        // 未登录用户重定向
        if(username == null || username.isEmpty()){
            response.sendRedirect("/admin/login");
            return false;
        }
        // 管理员权限校验（扩展点）
        return checkAdminRole(username); 
    }
}
// WebMvcConfig.java
@Configuration
public class WebMvcConfig implements WebMvcConfigurer {
    @Override
    public void addInterceptors(InterceptorRegistry registry) {
        registry.addInterceptor(new AuthInterceptor())
                .addPathPatterns("/admin/**")        // 拦截后台路径
                .excludePathPatterns("/admin/login");// 放行登录入口
```

### 分页插件PageHelper使用
```java 
  //分页查询博客列表
    @GetMapping("/")
    public String index(Model model, @RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, RedirectAttributes attributes){
        PageHelper.startPage(pageNum,10);
        //查询博客列表
        List<FirstPageBlog> allFirstPageBlog = blogService.getAllFirstPageBlog();
        //查询最新推荐博客
        List<RecommendBlog> recommendedBlog = blogService.getRecommendedBlog();
        //查询最新评论
        List<NewComment> newComments = blogService.getNewComment();

        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(allFirstPageBlog);   //博客内容实体类  定义泛型类对象获取查询后的博客List列表
        model.addAttribute("pageInfo",pageInfo);  //页面信息传输到前端
        model.addAttribute("recommendedBlogs", recommendedBlog);  //推荐博客传输到前端
        model.addAttribute("newComment",newComments);  //评论
        return "index";
    }
```

```java
@Controller
public class TypeShowController {

    @Autowired
    private TypeService typeService;   //分类实现接口

    @Autowired
    private BlogService blogService;   //博客实现接口

    //    分页查询分类
    @GetMapping("/types/{id}")
    public String types(@RequestParam(defaultValue = "1",value = "pageNum") Integer pageNum, @PathVariable Long id, Model model) {
        List<Type> types = typeService.getAllTypeAndBlog();

        //id为-1表示从首页导航栏点击进入分类页面
        if (id == -1) {
            if(!types.isEmpty()){
                id = types.get(0).getId();
            }
        }
        model.addAttribute("types", types);
        List<FirstPageBlog> blogs = blogService.getByTypeId(id);  //查询分类返回博客List列表对象

        PageHelper.startPage(pageNum, 10000);
        PageInfo<FirstPageBlog> pageInfo = new PageInfo<>(blogs);
        model.addAttribute("pageInfo", pageInfo);   //把查询到的博客泛型类对象（list列表）全部加载传输到前端
        model.addAttribute("activeTypeId", id);  //特别标准传输分类ID标签
        return "types";
    }

}
```
```html
<!-- 分类列表容器 -->
<div class="ui vertical menu">
  <!-- 遍历后端传来的types集合 -->
  <div th:each="type : ${types}" class="item">
    <!-- 
      点击分类时跳转到/type/{id}路由
      后端交互：向后台发送带分类ID的GET请求
      高亮逻辑：当前分类ID等于activeTypeId时添加active类
    -->
    <a th:href="@{/type/{id}(id=${type.id})}" 
       th:text="${type.name}"
       th:classappend="${type.id == activeTypeId} ? 'active'">
      默认分类
    </a>
  </div>
</div>
```
```html
<!-- 
  主内容区 - 显示筛选后的博客
  数据来源：后端返回的pageInfo.list集合
-->
<div th:each="blog : ${pageInfo.list}" class="blog-item">
  <h3 th:text="${blog.title}"></h3>
  
  <!-- 
    显示该博客所属分类 
    数据来源：后端在查询博客时联表查询type.name
  -->
  <div class="type-tag" th:text="${blog.typeName}"></div>
  
  <!-- 其他博客内容... -->
</div>
```
```html
<!-- 
  分页栏 - 关键点：翻页时保持当前分类
  后端交互：分页链接始终携带当前activeTypeId
-->
<div class="pagination">
  <!-- 上一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.prePage})}" 
     th:unless="${pageInfo.isFirstPage}">
    上一页
  </a>
  
  <!-- 页码显示 -->
  <span th:text="${pageInfo.pageNum + '/' + pageInfo.pages}"></span>
  
  <!-- 下一页 -->
  <a th:href="@{/type/{id}(id=${activeTypeId}, pageNum=${pageInfo.nextPage})}" 
     th:unless="${pageInfo.isLastPage}">
    下一页
  </a>
</div>
```

### SpringBoot核心配置文件YML
1. 基本语法要求
缩进规则：必须使用 2个空格 作为缩进层级（禁止使用 Tab 键）

键值分隔：冒号 : 后必须加 1个空格（如 key: value）

大小写敏感：配置项推荐全小写，单词间用下划线（如 max_retry_count）

注释：使用 # 开头，后接1个空格（如 # 这是注释）

2. 多环境配置
使用 --- 分隔不同环境的配置

通过 spring.profiles.active 指定当前激活的环境
当然了 你可以根据jar包运行时候指定环境状态,如下所示
```
# 开发环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=dev
# 
# 生产环境启动命令：
#   java -jar your-app.jar --spring.profiles.active=pro
```
这是一个完整的本项目配置部署文件示范例子
```yaml
# ========================================================
#                Spring Boot 通用配置文件
# 特点：
# 1. 不分 dev/pro 环境，所有配置直接生效
# 2. 敏感信息通过环境变量注入（如数据库密码）
# 3. 提供合理的默认值，保证直接启动不报错
# ========================================================

# #################### 核心框架配置 ####################
spring:
  # Thymeleaf 模板引擎
  thymeleaf:
    mode: HTML

  # 数据源配置（默认使用本地数据库，可通过环境变量覆盖）
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST:localhost}:3306/${DB_NAME:myblog}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: ${DB_USER:root}       # 默认用户名，可用环境变量覆盖
    password: ${DB_PASSWORD:admin} # 默认密码，生产环境务必通过环境变量修改！
    hikari:
      max-lifetime: 500000

  # 邮件服务（默认关闭，需主动配置）
  mail:
    host: ${MAIL_HOST:smtp.163.com}
    username: ${MAIL_USER:}         # 默认空，避免误发邮件
    password: ${MAIL_PASSWORD:}
    default-encoding: utf-8
    protocol: smtp
    port: 25
    properties:
      mail.smtp.starttls.enable: true

  # Redis（默认连接本地，可环境变量覆盖）
  redis:
    host: ${REDIS_HOST:127.0.0.1}
    port: ${REDIS_PORT:6379}
    database: 0
    timeout: 1800000

  resources:
    static-locations: classpath:/static/

# #################### MyBatis 配置 ####################
mybatis:
  type-aliases-package: com.star.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# #################### 日志配置 ####################
logging:
  level:
    root: info      # 默认日志级别
    com.star: debug # 项目代码详细日志
  file:
    name: log/blog.log  # 统一日志路径

# #################### 自定义配置 ####################
comment.avatar: /images/avatar.png
message.avatar: /images/avatar.png
```


## 项目部署实战
### MyBlog 开源博客项目部署指南
#### 环境要求
- JDK 8+
- Maven 3.6+
- MySQL 5.7+
- Git
- IDE工具（IntelliJ IDEA）
- 数据库工具（Navicat）
---
### 部署步骤
#### 1. 克隆项目源码(可能需要科学魔法上网)
```javascript
git clone https://github.com/tearhacker/myblogTear.git
```
---
### 2. 导入数据库
1. 使用Navicat创建新数据库（建议名称为`myblog`）
2. 右键新建的数据库 -> 选择「运行SQL文件」
3. 选择项目中的`/sql/myblog.sql`文件导入
4. 确认导入成功后验证表结构是否生成
---
### 3. 项目配置
1. 使用IDEA打开项目：
   - 选择 `File > Open` 
   - 定位到项目根目录下的 `pom.xml` 文件
   - 选择「Open as Project」
2. 修改配置文件：
   - 打开 `src/main/resources/application.yml`
   - 修改数据库连接配置
   - 修改redis配置
   - 修改其他配置
---
### 4. 启动应用
1. 找到主启动类：
   - 通常位于 `src/main/java/com/star/myblog/MyBlogApplication.java`
2. 运行启动类：
   - 右键选择「Run MyBlogApplication」
   - 或通过Maven命令：
3. 验证启动：
   - 控制台输出 `Started MyBlogApplication in X.XXX seconds` 
   - 访问 `http://localhost:8080`（端口以实际配置为准）
---
## 常见问题
1. **数据库连接失败**
   - 检查yml配置中的用户名/密码
   - 确认MySQL服务已启动
2. **端口冲突**
   - 在application.yml中修改`server.port`
3. **依赖下载缓慢**
   - 更换Maven镜像源至阿里云
4. **新人求助**
   - 提供一切帮助,请联系泪心(有偿服务)
## 可能用上的外链资源
1. **音乐外链解析**
   - <a href="https://api.toubiec.cn/wyapi.html">免费解析音乐</a>
2. **泪心游戏禁地**
   - <a href="http://t.me/TearGame">泪心TG电报频道(闲人勿扰,乱汝心智)</a>
   


(String), 44(Long), /images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-30 10:05:17.049(Timestamp), 94(Long)
2025-06-30 10:05:17.065 DEBUG 20680 --- [http-nio-80-exec-6] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-30 10:05:17.102 DEBUG 20680 --- [http-nio-80-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-30 10:05:17.103 DEBUG 20680 --- [http-nio-80-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-30 10:05:17.105 DEBUG 20680 --- [http-nio-80-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-30 10:05:17.107 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-30 10:05:17.108 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-30 10:05:17.110 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-30 10:05:17.112 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 10:05:17.112 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 10:05:17.113 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 10:05:17.226  INFO 20680 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:05:17.227 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:05:17.227 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:05:17.228 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:05:17.228 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:05:17.228 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:05:17.229 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:05:17.229 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:05:17.229 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:05:17.231 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:05:17.231 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:05:17.232 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:05:17.233 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:05:17.233  INFO 20680 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:05:19.730  INFO 20680 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/', ip='127.0.0.1', classMethod='com.star.controller.IndexController.index', args=[{}, 1, {}]}
2025-06-30 10:05:19.748 DEBUG 20680 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b, myblog.t_type t, myblog.t_user u WHERE b.type_id = t.id AND u.id = b.user_id AND b.published = 1 
2025-06-30 10:05:19.749 DEBUG 20680 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : ==> Parameters: 
2025-06-30 10:05:19.759 DEBUG 20680 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getFirstPageBlog_COUNT   : <==      Total: 1
2025-06-30 10:05:19.760 DEBUG 20680 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==>  Preparing: SELECT * FROM myblog.t_blog WHERE t_blog.recommend = TRUE ORDER BY t_blog.create_time DESC LIMIT 4 
2025-06-30 10:05:19.761 DEBUG 20680 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : ==> Parameters: 
2025-06-30 10:05:19.764 DEBUG 20680 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getAllRecommendBlog   : <==      Total: 2
2025-06-30 10:05:19.766 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getNewComment       : ==>  Preparing: SELECT * FROM myblog.t_comment c, myblog.t_blog b WHERE c.blog_id = b.id ORDER BY c.create_time DESC LIMIT 10 
2025-06-30 10:05:19.766 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getNewComment       : ==> Parameters: 
2025-06-30 10:05:19.768 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getNewComment       : <==      Total: 1
2025-06-30 10:05:19.769  INFO 20680 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index
2025-06-30 10:05:20.029  INFO 20680 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:05:20.029 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:05:20.030 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:05:20.031 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:05:20.032 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:05:20.032 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:05:20.033 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:05:20.034 DEBUG 20680 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:05:20.034 DEBUG 20680 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:05:20.035 DEBUG 20680 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:05:20.036 DEBUG 20680 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:05:20.036 DEBUG 20680 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:05:20.039 DEBUG 20680 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:05:20.040  INFO 20680 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:05:22.478  INFO 20680 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/blog/94', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-30 10:05:22.486 DEBUG 20680 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-30 10:05:22.486 DEBUG 20680 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-30 10:05:22.553 DEBUG 20680 --- [http-nio-80-exec-9] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-30 10:05:22.615 DEBUG 20680 --- [http-nio-80-exec-9] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-30 10:05:22.617 DEBUG 20680 --- [http-nio-80-exec-9] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-30 10:05:22.621 DEBUG 20680 --- [http-nio-80-exec-9] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-30 10:05:22.622 DEBUG 20680 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-30 10:05:22.622 DEBUG 20680 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-30 10:05:22.624 DEBUG 20680 --- [http-nio-80-exec-9] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-30 10:05:22.624  INFO 20680 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : blog
2025-06-30 10:05:23.079  INFO 20680 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:05:23.079 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:05:23.080 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:05:23.081 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:05:23.082 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:05:23.082 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:05:23.083 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:05:23.083 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:05:23.083 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:05:23.085 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:05:23.086 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:05:23.087 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:05:23.089 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:05:23.090  INFO 20680 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:05:23.146  INFO 20680 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/comments/94', ip='127.0.0.1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-30 10:05:23.151 DEBUG 20680 --- [http-nio-80-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-30 10:05:23.151 DEBUG 20680 --- [http-nio-80-exec-6] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-30 10:05:23.154 DEBUG 20680 --- [http-nio-80-exec-6] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 1
2025-06-30 10:05:23.156 DEBUG 20680 --- [http-nio-80-exec-6] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-30 10:05:23.156 DEBUG 20680 --- [http-nio-80-exec-6] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 94(Long), 2193(Long)
2025-06-30 10:05:23.158 DEBUG 20680 --- [http-nio-80-exec-6] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2025-06-30 10:05:23.158  INFO 20680 --- [http-nio-80-exec-6] com.star.aspect.LogAspect                : Result : blog :: commentList
2025-06-30 10:05:29.833 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogById         : ==>  Preparing: select b.id,b.flag,b.title,b.content,b.type_id, b.first_picture,b.description,b.recommend,b.published,b.share_statement, b.appreciation,b.commentabled from myblog.t_blog b where b.id = ?; 
2025-06-30 10:05:29.833 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogById         : ==> Parameters: 94(Long)
2025-06-30 10:05:29.836 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogById         : <==      Total: 1
2025-06-30 10:05:29.837 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 10:05:29.837 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 10:05:29.838 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 10:05:29.963  INFO 20680 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:05:29.963 DEBUG 20680 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:05:29.964 DEBUG 20680 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:05:29.965 DEBUG 20680 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:05:29.966 DEBUG 20680 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:05:29.967 DEBUG 20680 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:05:29.967 DEBUG 20680 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:05:29.968 DEBUG 20680 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:05:29.968 DEBUG 20680 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:05:29.970 DEBUG 20680 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:05:29.970 DEBUG 20680 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:05:29.971 DEBUG 20680 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:05:29.973 DEBUG 20680 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:05:29.974  INFO 20680 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:05:36.029 DEBUG 20680 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-30 10:05:36.030 DEBUG 20680 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-30 10:05:36.031 DEBUG 20680 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-30 10:05:36.032 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-30 10:05:36.032 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-30 10:05:36.034 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-30 10:05:36.035 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 10:05:36.035 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 10:05:36.036 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 10:05:36.136  INFO 20680 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:05:36.136 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:05:36.136 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:05:36.137 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:05:36.138 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:05:36.138 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:05:36.139 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:05:36.139 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:05:36.139 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:05:36.140 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:05:36.141 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:05:36.141 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:05:36.143 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:05:36.143  INFO 20680 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:05:36.745 DEBUG 20680 --- [http-nio-80-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-30 10:05:36.745 DEBUG 20680 --- [http-nio-80-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-30 10:05:36.746 DEBUG 20680 --- [http-nio-80-exec-7] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-30 10:05:36.748 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-30 10:05:36.748 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-30 10:05:36.750 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-30 10:05:36.751 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 10:05:36.751 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 10:05:36.753 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 10:05:36.908  INFO 20680 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:05:36.909 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:05:36.909 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:05:36.910 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:05:36.910 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:05:36.911 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:05:36.912 DEBUG 20680 --- [http-nio-80-exec-7] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:05:36.912 DEBUG 20680 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:05:36.912 DEBUG 20680 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:05:36.915 DEBUG 20680 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:05:36.915 DEBUG 20680 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:05:36.916 DEBUG 20680 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:05:36.918 DEBUG 20680 --- [http-nio-80-exec-7] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:05:36.918  INFO 20680 --- [http-nio-80-exec-7] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:05:37.389 DEBUG 20680 --- [http-nio-80-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-30 10:05:37.389 DEBUG 20680 --- [http-nio-80-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-30 10:05:37.391 DEBUG 20680 --- [http-nio-80-exec-3] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-30 10:05:37.391 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-30 10:05:37.392 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-30 10:05:37.393 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-30 10:05:37.395 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 10:05:37.395 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 10:05:37.396 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 10:05:37.556  INFO 20680 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:05:37.556 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:05:37.556 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:05:37.558 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:05:37.559 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:05:37.559 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:05:37.560 DEBUG 20680 --- [http-nio-80-exec-3] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:05:37.561 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:05:37.561 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:05:37.563 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:05:37.563 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:05:37.564 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:05:37.565 DEBUG 20680 --- [http-nio-80-exec-3] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:05:37.565  INFO 20680 --- [http-nio-80-exec-3] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:05:37.982 DEBUG 20680 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-30 10:05:37.982 DEBUG 20680 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-30 10:05:37.983 DEBUG 20680 --- [http-nio-80-exec-4] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-30 10:05:37.983 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-30 10:05:37.984 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-30 10:05:37.987 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-30 10:05:37.988 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 10:05:37.988 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 10:05:37.989 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 10:05:38.154  INFO 20680 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:05:38.154 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:05:38.154 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:05:38.155 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:05:38.156 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:05:38.156 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:05:38.157 DEBUG 20680 --- [http-nio-80-exec-4] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:05:38.157 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:05:38.157 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:05:38.158 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:05:38.159 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:05:38.159 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:05:38.160 DEBUG 20680 --- [http-nio-80-exec-4] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:05:38.160  INFO 20680 --- [http-nio-80-exec-4] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-30 10:05:38.471 DEBUG 20680 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-30 10:05:38.471 DEBUG 20680 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-30 10:05:38.472 DEBUG 20680 --- [http-nio-80-exec-8] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-30 10:05:38.473 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-30 10:05:38.473 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-30 10:05:38.474 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-30 10:05:38.475 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-30 10:05:38.475 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-30 10:05:38.477 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-30 10:05:38.574  INFO 20680 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Request : {url='http://127.0.0.1/footer/blogmessage', ip='127.0.0.1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-30 10:05:38.574 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-30 10:05:38.574 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-30 10:05:38.575 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-30 10:05:38.576 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-30 10:05:38.576 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-30 10:05:38.577 DEBUG 20680 --- [http-nio-80-exec-8] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-30 10:05:38.577 DEBUG 20680 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-30 10:05:38.577 DEBUG 20680 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-30 10:05:38.579 DEBUG 20680 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-30 10:05:38.580 DEBUG 20680 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-30 10:05:38.581 DEBUG 20680 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-30 10:05:38.582 DEBUG 20680 --- [http-nio-80-exec-8] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-30 10:05:38.582  INFO 20680 --- [http-nio-80-exec-8] com.star.aspect.LogAspect                : Result : index :: blogMessage
=======


(String), 44(Long), /images/myblog/blogInexSHow.png(String), SpringBoot技术关于泪心myblog(原一颗星)个人博客项目的完整见闻,这应该是第n次搭建了,不同的是这次是完全独立分析和自主研学的。欢迎大家点评和提出更多的意见，感谢大家。(String), true(Boolean), false(Boolean), true(Boolean), true(Boolean), 2025-06-29 22:02:11.153(Timestamp), 94(Long)
2025-06-29 22:02:11.159 DEBUG 26012 --- [http-nio-80-exec-6] com.star.dao.BlogDao.updateBlog          : <==    Updates: 1
2025-06-29 22:02:11.172 DEBUG 26012 --- [http-nio-80-exec-5] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==>  Preparing: SELECT count(0) FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id 
2025-06-29 22:02:11.173 DEBUG 26012 --- [http-nio-80-exec-5] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : ==> Parameters: 
2025-06-29 22:02:11.174 DEBUG 26012 --- [http-nio-80-exec-5] c.s.dao.BlogDao.getAllBlogQuery_COUNT    : <==      Total: 1
2025-06-29 22:02:11.175 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getAllBlogQuery     : ==>  Preparing: SELECT b.id, b.title, b.create_time, b.update_time, b.recommend, b.published, b.type_id, t.id, t.name FROM myblog.t_blog b LEFT OUTER JOIN myblog.t_type t ON b.type_id = t.id order by update_time desc LIMIT ? 
2025-06-29 22:02:11.175 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getAllBlogQuery     : ==> Parameters: 10(Integer)
2025-06-29 22:02:11.176 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getAllBlogQuery     : <==      Total: 2
2025-06-29 22:02:11.177 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.TypeDao.getAllType          : ==>  Preparing: select * from myblog.t_type 
2025-06-29 22:02:11.177 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.TypeDao.getAllType          : ==> Parameters: 
2025-06-29 22:02:11.178 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.TypeDao.getAllType          : <==      Total: 2
2025-06-29 22:02:11.252  INFO 26012 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 22:02:11.253 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 22:02:11.253 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 22:02:11.254 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 22:02:11.254 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 22:02:11.254 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 22:02:11.255 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 22:02:11.256 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 22:02:11.256 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 22:02:11.257 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 22:02:11.258 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 22:02:11.258 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 22:02:11.260 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 22:02:11.260  INFO 26012 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 22:02:12.650  INFO 26012 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Request : {url='http://localhost/blog/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blog', args=[94, {}]}
2025-06-29 22:02:12.651 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getDetailedBlog     : ==>  Preparing: select b.id bid,b.first_picture,b.flag,b.title,b.content,b.views,b.comment_count,b.update_time,b.commentabled,b.share_statement,b.appreciation, u.nickname,u.avatar,t.name from myblog.t_blog b,myblog.t_user u, myblog.t_type t where b.user_id = u.id and b.type_id = t.id and b.id = ? 
2025-06-29 22:02:12.651 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getDetailedBlog     : ==> Parameters: 94(Long)
2025-06-29 22:02:12.653 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.getDetailedBlog     : <==      Total: 1
2025-06-29 22:02:12.657 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.updateViews         : ==>  Preparing: update myblog.t_blog b set b.views = b.views+1 where b.id = ? 
2025-06-29 22:02:12.658 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.updateViews         : ==> Parameters: 94(Long)
2025-06-29 22:02:12.661 DEBUG 26012 --- [http-nio-80-exec-2] com.star.dao.BlogDao.updateViews         : <==    Updates: 1
2025-06-29 22:02:12.661 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getCommentCountById   : ==>  Preparing: update myblog.t_blog b set b.comment_count = ( select count(*) from myblog.t_comment c where c.blog_id = ? and b.id = ? ) WHERE b.id = ? 
2025-06-29 22:02:12.661 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getCommentCountById   : ==> Parameters: 94(Long), 94(Long), 94(Long)
2025-06-29 22:02:12.662 DEBUG 26012 --- [http-nio-80-exec-2] c.star.dao.BlogDao.getCommentCountById   : <==    Updates: 1
2025-06-29 22:02:12.662  INFO 26012 --- [http-nio-80-exec-2] com.star.aspect.LogAspect                : Result : blog
2025-06-29 22:02:12.907  INFO 26012 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Request : {url='http://localhost/footer/blogmessage', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.IndexController.blogMessage', args=[{}]}
2025-06-29 22:02:12.908 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==>  Preparing: select count(*) from myblog.t_blog 
2025-06-29 22:02:12.908 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : ==> Parameters: 
2025-06-29 22:02:12.909 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogTotal        : <==      Total: 1
2025-06-29 22:02:12.909 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==>  Preparing: select coalesce (sum(views),0) from myblog.t_blog 
2025-06-29 22:02:12.909 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : ==> Parameters: 
2025-06-29 22:02:12.910 DEBUG 26012 --- [http-nio-80-exec-5] com.star.dao.BlogDao.getBlogViewTotal    : <==      Total: 1
2025-06-29 22:02:12.910 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==>  Preparing: select count(*) from myblog.t_comment 
2025-06-29 22:02:12.910 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : ==> Parameters: 
2025-06-29 22:02:12.911 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogCommentTotal   : <==      Total: 1
2025-06-29 22:02:12.912 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==>  Preparing: select count(*) from myblog.t_message 
2025-06-29 22:02:12.912 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : ==> Parameters: 
2025-06-29 22:02:12.913 DEBUG 26012 --- [http-nio-80-exec-5] c.star.dao.BlogDao.getBlogMessageTotal   : <==      Total: 1
2025-06-29 22:02:12.913  INFO 26012 --- [http-nio-80-exec-5] com.star.aspect.LogAspect                : Result : index :: blogMessage
2025-06-29 22:02:12.975  INFO 26012 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Request : {url='http://localhost/comments/94', ip='0:0:0:0:0:0:0:1', classMethod='com.star.controller.CommentController.comments', args=[94, {}]}
2025-06-29 22:02:12.975 DEBUG 26012 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 22:02:12.975 DEBUG 26012 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNull         : ==> Parameters: 94(Long), -1(Long)
2025-06-29 22:02:12.976 DEBUG 26012 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNull         : <==      Total: 1
2025-06-29 22:02:12.977 DEBUG 26012 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : ==>  Preparing: select * from myblog.t_comment c where c.blog_id = ? and c.parent_comment_id = ? order by c.create_time desc 
2025-06-29 22:02:12.977 DEBUG 26012 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : ==> Parameters: 94(Long), 2193(Long)
2025-06-29 22:02:12.978 DEBUG 26012 --- [http-nio-80-exec-9] c.s.d.C.findByBlogIdParentIdNotNull      : <==      Total: 0
2025-06-29 22:02:12.978  INFO 26012 --- [http-nio-80-exec-9] com.star.aspect.LogAspect                : Result : blog :: commentList
>>>>>>> 061b4ebfa035e46571fa162f1dfef2e805979582
